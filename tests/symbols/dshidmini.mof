#pragma autorecover
#pragma classflags("forceupdate")
#pragma namespace("\\\\.\\root\\WMI")
//
// WPP Generated File
// PDB:  dshidmini.pdb
// PDB:  Last Updated :2024-11-03:01:04:26:104 (UTC) [Tracepdb]
//

//ModuleName = dshidminiDsHidMiniTraceGuid	 (Init called in Function DriverEntry)
[Dynamic,
 Description("dshidmini_DsHidMiniTraceGuid"),
 guid("{A56A946C-AC5C-4E2F-9179-6821272856C6}"),
 locale("MS\\0x409")]
class dshidminiDsHidMiniTraceGuid : EventTrace
{
    [Description ("Enable Flags") : amended,
        ValueDescriptions{
             "MYDRIVER_ALL_INFO Flag",
             "DMF_TRACE Flag",
             "TRACE_DRIVER Flag",
             "TRACE_DEVICE Flag",
             "TRACE_DSHID Flag",
             "TRACE_DSHIDMINIDRV Flag",
             "TRACE_POWER Flag",
             "TRACE_DSUSB Flag",
             "TRACE_DS3 Flag",
             "TRACE_DSBTH Flag",
             "TRACE_CONFIG Flag",
             "TRACE_IPC Flag"},
        DefineValues{
             "MYDRIVER_ALL_INFO",
             "DMF_TRACE",
             "TRACE_DRIVER",
             "TRACE_DEVICE",
             "TRACE_DSHID",
             "TRACE_DSHIDMINIDRV",
             "TRACE_POWER",
             "TRACE_DSUSB",
             "TRACE_DS3",
             "TRACE_DSBTH",
             "TRACE_CONFIG",
             "TRACE_IPC"},
        Values{
             "MYDRIVER_ALL_INFO",
             "DMF_TRACE",
             "TRACE_DRIVER",
             "TRACE_DEVICE",
             "TRACE_DSHID",
             "TRACE_DSHIDMINIDRV",
             "TRACE_POWER",
             "TRACE_DSUSB",
             "TRACE_DS3",
             "TRACE_DSBTH",
             "TRACE_CONFIG",
             "TRACE_IPC"},
        ValueMap{
             "0x00000001",
             "0x00000002",
             "0x00000004",
             "0x00000008",
             "0x00000010",
             "0x00000020",
             "0x00000040",
             "0x00000080",
             "0x00000100",
             "0x00000200",
             "0x00000400",
             "0x00000800"}: amended
    ]
    uint32 Flags;
    [Description ("Levels") : amended,
        ValueDescriptions{
            "Abnormal exit or termination",
            "Severe errors that need logging",
            "Warnings such as allocation failure",
            "Includes non-error cases",
            "Detailed traces from intermediate steps" } : amended,
         DefineValues{
            "TRACE_LEVEL_FATAL",
            "TRACE_LEVEL_ERROR",
            "TRACE_LEVEL_WARNING"
            "TRACE_LEVEL_INFORMATION",
            "TRACE_LEVEL_VERBOSE" },
        Values{
            "Fatal",
            "Error",
            "Warning",
            "Information",
            "Verbose" },
        ValueMap{
            "0x1",
            "0x2",
            "0x3",
            "0x4",
            "0x5" },
        ValueType("index")
    ]
    uint32 Level;
};
