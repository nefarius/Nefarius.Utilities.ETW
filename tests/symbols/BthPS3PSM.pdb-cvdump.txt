Microsoft (R) Debugging Information Dumper  Version 14.00.23611
Copyright (C) Microsoft Corporation.  All rights reserved.


*** IDs

0x1000 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1001, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1546

0x1001 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1001, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1546

0x1002 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1001, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1546

0x1003 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1001, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1546

0x1004 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1003, mod = 1, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 50

0x1005 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1003, mod = 4, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 50

0x1006 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1005, mod = 3, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 369

0x1007 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1007, mod = 1, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 384

0x1008 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1007, mod = 4, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 384

0x1009 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1007, mod = 2, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 384

0x100a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1007, mod = 3, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 384

0x100b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1009, mod = 1, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 395

0x100c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1009, mod = 3, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 395

0x100d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1009, mod = 4, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 395

0x100e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1009, mod = 2, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 395

0x100f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x100C, mod = 3, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 1640

0x1010 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x100C, mod = 1, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 1640

0x1011 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x100C, mod = 4, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 1640

0x1012 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x100D, mod = 2, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\driver.tmh, line = 407

0x1013 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1013, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 7148

0x1014 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1013, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 7148

0x1015 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1015, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h, line = 86

0x1016 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1013, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 7148

0x1017 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1013, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 7148

0x1018 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x101B, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffuncenum.h, line = 23

0x1019 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x101B, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffuncenum.h, line = 23

0x101a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x101B, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffuncenum.h, line = 23

0x101b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x101B, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffuncenum.h, line = 23

0x101c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x101D, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h, line = 51

0x101d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1020, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h, line = 61

0x101e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1020, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h, line = 61

0x101f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1020, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h, line = 61

0x1020 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1026, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfmemory.h, line = 52

0x1021 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1028, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfchildlist.h, line = 59

0x1022 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1028, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfchildlist.h, line = 59

0x1023 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1028, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfchildlist.h, line = 59

0x1024 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x102A, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 36860

0x1025 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x102A, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 36860

0x1026 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x102A, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 36860

0x1027 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x102A, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 36860

0x1028 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x102C, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 55

0x1029 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x102C, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 55

0x102a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x102E, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 390

0x102b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x102E, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 390

0x102c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1030, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 37086

0x102d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1032, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 398

0x102e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1032, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 398

0x102f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1032, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 398

0x1030 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x102E, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 390

0x1031 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1034, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 405

0x1032 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1034, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 405

0x1033 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1034, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 405

0x1034 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1036, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 411

0x1035 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1036, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 411

0x1036 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1036, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 411

0x1037 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1038, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 415

0x1038 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1038, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 415

0x1039 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1038, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 415

0x103a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x103A, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 449

0x103b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x103A, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 449

0x103c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x103A, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 449

0x103d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x103A, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 449

0x103e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x103C, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 37521

0x103f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x103C, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 37521

0x1040 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x103C, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 37521

0x1041 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x103C, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 37521

0x1042 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x103E, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 458

0x1043 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x103E, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 458

0x1044 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1040, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 1179

0x1045 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1040, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 1179

0x1046 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1042, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 10984

0x1047 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1040, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 1179

0x1048 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1040, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 1179

0x1049 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1044, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 11009

0x104a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1044, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 11009

0x104b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1046, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 11024

0x104c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1046, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 11024

0x104d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1046, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 11024

0x104e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1048, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h, line = 56

0x104f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1048, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h, line = 56

0x1050 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1048, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h, line = 56

0x1051 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1048, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h, line = 56

0x1052 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104A, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h, line = 65

0x1053 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104A, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h, line = 65

0x1054 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104A, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h, line = 65

0x1055 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104A, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h, line = 65

0x1056 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104C, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 56

0x1057 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104C, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 56

0x1058 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104C, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 56

0x1059 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104C, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 56

0x105a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104E, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 91

0x105b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104E, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 91

0x105c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104E, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 91

0x105d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x104E, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 91

0x105e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1050, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 107

0x105f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1050, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 107

0x1060 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1050, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 107

0x1061 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1050, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 107

0x1062 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1052, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 17488

0x1063 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1052, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 17488

0x1064 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1052, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 17488

0x1065 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1052, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 17488

0x1066 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1054, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 43043

0x1067 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1054, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 43043

0x1068 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1054, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 43043

0x1069 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1054, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 43043

0x106a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1056, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 428

0x106b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1056, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 428

0x106c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1056, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 428

0x106d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1058, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfiotarget.h, line = 61

0x106e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1058, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfiotarget.h, line = 61

0x106f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x105C, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18259

0x1070 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x105A, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h, line = 76

0x1071 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x105A, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h, line = 76

0x1072 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x105E, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h, line = 124

0x1073 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x105A, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h, line = 76

0x1074 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1060, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h, line = 456

0x1075 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1060, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h, line = 456

0x1076 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1060, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h, line = 456

0x1077 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1062, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 22645

0x1078 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1062, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 22645

0x1079 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1062, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 22645

0x107a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1062, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 22645

0x107b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1064, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfWMI.h, line = 68

0x107c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1064, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfWMI.h, line = 68

0x107d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1064, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfWMI.h, line = 68

0x107e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1064, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfWMI.h, line = 68

0x107f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1066, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 24558

0x1080 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1066, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 24558

0x1081 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1066, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 24558

0x1082 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1068, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 24562

0x1083 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106A, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 24950

0x1084 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106A, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 24950

0x1085 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106A, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 24950

0x1086 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106A, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 24950

0x1087 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106C, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 28326

0x1088 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106C, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 28326

0x1089 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106C, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 28326

0x108a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106C, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 28326

0x108b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106F, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 29498

0x108c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106F, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 29498

0x108d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x106F, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 29498

0x108e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1070, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 375

0x108f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1072, mod = 2, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\L2CAP.h, line = 45

0x1090 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1072, mod = 1, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\L2CAP.h, line = 45

0x1091 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1072, mod = 4, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\L2CAP.h, line = 45

0x1092 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1081, mod = 1, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h, line = 243

0x1093 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x109E, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h, line = 181

0x1094 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10B6, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12007

0x1095 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10B7, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1635

0x1096 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10B6, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12007

0x1097 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10B6, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12007

0x1098 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10C0, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30257

0x1099 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10C0, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30257

0x109a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10C0, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30257

0x109b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10CB, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12182

0x109c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10CB, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12182

0x109d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10CB, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12182

0x109e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10CC, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h, line = 120

0x109f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10D1, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 889

0x10a0 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10D1, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 889

0x10a1 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10D6, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 6362

0x10a2 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10D6, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 6362

0x10a3 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10D8, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\devpropdef.h, line = 107

0x10a4 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10DB, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30279

0x10a5 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10DB, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30279

0x10a6 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10DB, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30279

0x10a7 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10E2, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h, line = 1834

0x10a8 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10F1, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntprov.h, line = 179

0x10a9 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10F2, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 6292

0x10aa : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10F2, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 6292

0x10ab : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10F2, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 6292

0x10ac : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10F8, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h, line = 22

0x10ad : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10FB, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12200

0x10ae : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10FB, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12200

0x10af : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10FB, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12200

0x10b0 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x10FD, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntprov.h, line = 205

0x10b1 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1100, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 391

0x10b2 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1106, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12841

0x10b3 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1106, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12841

0x10b4 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1106, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12841

0x10b5 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x113D, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h, line = 160

0x10b6 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x113F, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 653

0x10b7 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1147, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 6448

0x10b8 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1147, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 6448

0x10b9 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1147, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 6448

0x10ba : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1154, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32777

0x10bb : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1155, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30292

0x10bc : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1155, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30292

0x10bd : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1161, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32756

0x10be : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x116A, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h, line = 119

0x10bf : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1155, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30292

0x10c0 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1173, mod = 1, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 421

0x10c1 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1177, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h, line = 98

0x10c2 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1191, mod = 1, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\device.h, line = 64

0x10c3 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x119E, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12725

0x10c4 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x119E, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12725

0x10c5 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x11A0, mod = 1, source file = C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh, line = 235

0x10c6 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x119E, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12725

0x10c7 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x11C2, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32680

0x10c8 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x11C7, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h, line = 158

0x10c9 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x11D9, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h, line = 139

0x10ca : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x11FF, mod = 1, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfglobals.h, line = 53

0x10cb : Length = 50, Leaf = 0x1605 LF_STRING_ID
	C:\Users\appveyor\projects\bthps3\BthPS3PSM
	No sub string

0x10cc : Length = 114, Leaf = 0x1605 LF_STRING_ID
	C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe
	No sub string

0x10cd : Length = 18, Leaf = 0x1605 LF_STRING_ID
	Device.c
	No sub string

0x10ce : Length = 74, Leaf = 0x1605 LF_STRING_ID
	C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\vc143.pdb
	No sub string

0x10cf : Length = 238, Leaf = 0x1605 LF_STRING_ID
	-c -IC:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\ -Zi -nologo -W4 -WX -diagnostics:column -Ox -Os -Oy- -DCODE_ANALYSIS -D_NO_CRT_STDIO_INLINE -D_WIN64 -D_AMD64_ -DAMD64 -D_WIN32_WINNT=0x0A00 -DWINVER=0x0A00 -DWINNT=1
	No sub string

0x10d0 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -DNTDDI_VERSION=0xA000010 -DKMDF_VERSION_MAJOR=1 -DKMDF_VERSION_MINOR=15 -GF -Gm- -Zp8 -GS -guard:cf -Gy -fp:precise -Qspectre -Zc:wchar_t- -Zc:forScope -Zc:inline -GR- -external:W4 -Gz -wd4603 -wd4627 -wd4986 -wd4987 -FI"C:\Program
	No sub string

0x10d1 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\warning.h" -analyze:projectdirectoryC:\Users\appveyor\projects\bthps3\BthPS3PSM -analyze:rulesetdirectory"C:\Users\appveyor\projects\bthps3\BthPS3PSM\;C:\Program Files\Microsoft
	No sub string

0x10d2 : Length = 246, Leaf = 0x1605 LF_STRING_ID
	 Visual Studio\2022\Community\Team Tools\Static Analysis Tools\Rule Sets;" -analyze:ruleset"C:\Program Files (x86)\Windows Kits\10\CodeAnalysis\DriverMinimumRules.ruleset" -analyze:quiet -analyze:stacksize1024 -analyze:plugin"C:\Program
	No sub string

0x10d3 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\EspXEngine.dll" -analyze:plugin"C:\Program Files (x86)\Windows Kits\10\bin\10.0.26100.0\x64\WindowsPrefast.dll" -analyze:plugin"C:\Program Files
	No sub string

0x10d4 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 (x86)\Windows Kits\10\bin\10.0.26100.0\x64\drivers.dll" -FC -errorreport:queue -kernel -cbstring -d2epilogunwind -d1nodatetime -d1import_no_registry -d2AllowCompatibleILVersions -MT -IC:\Users\appveyor\projects\bthps3\common\include
	No sub string

0x10d5 : Length = 238, Leaf = 0x1605 LF_STRING_ID
	 -I"C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt" -I"C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km" -I"C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared" -I"C:\Program Files
	No sub string

0x10d6 : Length = 266, Leaf = 0x1605 LF_STRING_ID
	 (x86)\Windows Kits\10\Include\10.0.26100.0\shared\\" -I"C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15" -I"C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15" -I"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14
	No sub string

0x10d7 : Length = 246, Leaf = 0x1605 LF_STRING_ID
	.43.34808\include" -I"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\atlmfc\include" -I"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\VS\include" -I"C:\Program Files (x86)\Windows
	No sub string

0x10d8 : Length = 238, Leaf = 0x1605 LF_STRING_ID
	 Kits\10\Include\10.0.26100.0\ucrt" -I"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\VS\UnitTest\include" -I"C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\um" -I"C:\Program Files (x86)\Windows
	No sub string

0x10d9 : Length = 266, Leaf = 0x1605 LF_STRING_ID
	 Kits\10\Include\10.0.26100.0\winrt" -I"C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\cppwinrt" -I"C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8.1\Include\um" -external:I"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\1
	No sub string

0x10da : Length = 254, Leaf = 0x1605 LF_STRING_ID
	4.43.34808\include" -external:I"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\atlmfc\include" -external:I"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\VS\include" -external:I"C:\Program
	No sub string

0x10db : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt" -external:I"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\VS\UnitTest\include" -external:I"C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\um"
	No sub string

0x10dc : Length = 250, Leaf = 0x1605 LF_STRING_ID
	 -external:I"C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared" -external:I"C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\winrt" -external:I"C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\cppwinrt"
	No sub string

0x10dd : Length = 62, Leaf = 0x1604 LF_SUBSTR_LIST
	String ID's (count = 14): 0x10CF 0x10D0 0x10D1 0x10D2 0x10D3 0x10D4 0x10D5 0x10D6 0x10D7 0x10D8 0x10D9 0x10DA 0x10DB 0x10DC

0x10de : Length = 90, Leaf = 0x1605 LF_STRING_ID
	 -external:I"C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8.1\Include\um" -TC -X
	List of sub string ID's = 0x10DD

0x10df : Length = 26, Leaf = 0x1603 LF_BUILDINFO
	String ID's (count = 5): 0x10CB 0x10CC 0x10CD 0x10CE 0x10DE

0x10e0 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x121E		Scope = global	BthPS3PSM_CreateDevice

0x10e1 : Length = 26, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1229		Scope = global	WdfDeviceCreate

0x10e2 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x122E		Scope = global	WDF_OBJECT_ATTRIBUTES_INIT

0x10e3 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1231		Scope = global	WdfFdoInitSetFilter

0x10e4 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1235		Scope = global	WdfWaitLockAcquire

0x10e5 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1238		Scope = global	DeviceGetContext

0x10e6 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x123E		Scope = global	WdfObjectGetTypedContextWorker

0x10e7 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1242		Scope = global	WdfCollectionAdd

0x10e8 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1247		Scope = global	WdfWaitLockRelease

0x10e9 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x124C		Scope = global	WdfDeviceOpenRegistryKey

0x10ea : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1251		Scope = global	WdfRegistryQueryULong

0x10eb : Length = 26, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1256		Scope = global	WdfStringCreate

0x10ec : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x125B		Scope = global	WdfMemoryGetBuffer

0x10ed : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1261		Scope = global	WdfRegistryQueryString

0x10ee : Length = 26, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1087		Scope = global	WdfObjectDelete

0x10ef : Length = 18, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1267		Scope = global	WPP_SF_

0x10f0 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x126B		Scope = global	BthPS3PSM_IsBthUsbDevice

0x10f1 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1270		Scope = global	BthPS3PSM_GetPropertyInstanceId

0x10f2 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1271, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32806

0x10f3 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1271, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32806

0x10f4 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1271, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32806

0x10f5 : Length = 22, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1274		Scope = global	WPP_SF_d

0x10f6 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x127F		Scope = global	McTemplateK0szq_EtwWriteTransfer

0x10f7 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1289		Scope = global	McTemplateK0qz_EtwWriteTransfer

0x10f8 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x10BE		Scope = global	BthPS3PSM_CreateControlDevice

0x10f9 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x10BE		Scope = global	BthPS3PSM_QueueInitialize

0x10fa : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1291, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdriver.h, line = 117

0x10fb : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1087		Scope = global	BthPS3PSM_EvtDeviceContextCleanup

0x10fc : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1299, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 895

0x10fd : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1299, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 895

0x10fe : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12A5, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 7685

0x10ff : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12A8		Scope = global	WdfCollectionGetCount

0x1100 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12AF, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18803

0x1101 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12AF, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18803

0x1102 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12B0		Scope = global	WdfCollectionGetItem

0x1103 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12B7		Scope = global	WdfCollectionRemoveItem

0x1104 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x10D0		Scope = global	BthPS3PSM_DeleteControlDevice

0x1105 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12BF, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h, line = 378

0x1106 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12C0, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 22768

0x1107 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12C0, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 22768

0x1108 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12C2		Scope = global	WdfFdoInitAllocAndQueryPropertyEx

0x1109 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12C5, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31901

0x110a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12C5, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31901

0x110b : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12CA		Scope = global	WDF_DEVICE_PROPERTY_DATA_INIT

0x110c : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12D5		Scope = global	WdfFdoInitQueryProperty

0x110d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12D9, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 670

0x110e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12E6, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntprov.h, line = 329

0x110f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12EB, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1235

0x1110 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12EB, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1235

0x1111 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x12EB, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1235

0x1112 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12EC		Scope = global	McGenEventWrite_EtwWriteTransfer

0x1113 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1300		Scope = global	EventDataDescCreate

0x1114 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x130C, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31939

0x1115 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x130C, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31939

0x1116 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x130C, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31939

0x1117 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1313, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 793

0x1118 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1313, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 793

0x1119 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1323, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1699

0x111a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1323, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1699

0x111b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x132E, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 11052

0x111c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x132E, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 11052

0x111d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x132E, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 11052

0x111e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1332, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbspec.h, line = 678

0x111f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1332, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbspec.h, line = 678

0x1120 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1334, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31663

0x1121 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1336, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 692

0x1122 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1336, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 692

0x1123 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x133B, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 22792

0x1124 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1343, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h, line = 1709

0x1125 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1374, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 944

0x1126 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1374, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 944

0x1127 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1377, mod = 5, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfworkitem.h, line = 65

0x1128 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x137E, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 666

0x1129 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x137E, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 666

0x112a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1386, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32163

0x112b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1394, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 827

0x112c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1394, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 827

0x112d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x139B, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 702

0x112e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x139B, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 702

0x112f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13A4, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 11041

0x1130 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13A6, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 779

0x1131 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13A6, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 779

0x1132 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13AB, mod = 5, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 21031

0x1133 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13B0, mod = 5, source file = C:\Users\appveyor\projects\bthps3\common\include\BthPS3.h, line = 435

0x1134 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13B3, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 21104

0x1135 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13B5, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h, line = 126

0x1136 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13BC, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 386

0x1137 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13C4, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32090

0x1138 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13C4, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32090

0x1139 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13C4, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32090

0x113a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13CA, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 7964

0x113b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13CA, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 7964

0x113c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13CA, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 7964

0x113d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13CB, mod = 5, source file = C:\Users\appveyor\projects\bthps3\common\include\BthPS3.h, line = 426

0x113e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13D2, mod = 5, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h, line = 130

0x113f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13D5, mod = 5, source file = C:\Users\appveyor\projects\bthps3\common\include\BthPS3.h, line = 417

0x1140 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13E7, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18657

0x1141 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13E7, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18657

0x1142 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13E7, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18657

0x1143 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13EB, mod = 5, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 18686

0x1144 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13F7, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 878

0x1145 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13F7, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 878

0x1146 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x13FA, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32009

0x1147 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1403, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31706

0x1148 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1403, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31706

0x1149 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1403, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31706

0x114a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1407, mod = 5, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 18726

0x114b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1411, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 26978

0x114c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1411, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 26978

0x114d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1411, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 26978

0x114e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x141B, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18277

0x114f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x141B, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18277

0x1150 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x141B, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18277

0x1151 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1424, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 847

0x1152 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1424, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 847

0x1153 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1426, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12211

0x1154 : Length = 18, Leaf = 0x1605 LF_STRING_ID
	Sideband.c
	No sub string

0x1155 : Length = 26, Leaf = 0x1603 LF_BUILDINFO
	String ID's (count = 5): 0x10CB 0x10CC 0x1154 0x10CE 0x10DE

0x1156 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1429, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 7994

0x1157 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1429, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 7994

0x1158 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1429, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 7994

0x1159 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1431, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 698

0x115a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1431, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 698

0x115b : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1432		Scope = global	WdfControlDeviceInitAllocate

0x115c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1435, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32750

0x115d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1435, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32750

0x115e : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1436		Scope = global	WdfDeviceGetDriver

0x115f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1435, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32750

0x1160 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x143A		Scope = global	WdfDeviceInitAssignName

0x1161 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x143B, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 7954

0x1162 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x143B, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 7954

0x1163 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x143B, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 7954

0x1164 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x143D		Scope = global	WdfDeviceInitSetExclusive

0x1165 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1440, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30952

0x1166 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1441, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 734

0x1167 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1441, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 734

0x1168 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1443		Scope = global	WdfDeviceCreateSymbolicLink

0x1169 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1448		Scope = global	WdfIoQueueCreate

0x116a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1449, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31764

0x116b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1449, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31764

0x116c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1449, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31764

0x116d : Length = 50, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x144C		Scope = global	WDF_IO_QUEUE_CONFIG_INIT_DEFAULT_QUEUE

0x116e : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x10D0		Scope = global	WdfControlFinishInitializing

0x116f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x144F, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12850

0x1170 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1231		Scope = global	WdfDeviceInitFree

0x1171 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x144F, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12850

0x1172 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x144F, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 12850

0x1173 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x136F		Scope = global	BthPS3PSM_EvtSaveConfigToRegistry

0x1174 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1456, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h, line = 145

0x1175 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1460		Scope = global	WdfRegistryAssignULong

0x1176 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1461, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 718

0x1177 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1461, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 718

0x1178 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1463, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 26992

0x1179 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1464		Scope = global	WdfWorkItemGetParentObject

0x117a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1467, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 914

0x117b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1467, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 914

0x117c : Length = 22, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x146A		Scope = global	WPP_SF_c

0x117d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x146C, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18396

0x117e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x146C, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18396

0x117f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x146C, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18396

0x1180 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1283		Scope = global	BthPS3PSM_SidebandIoDeviceControl

0x1181 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1474, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 921

0x1182 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1476		Scope = global	WdfRequestRetrieveInputBuffer

0x1183 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1474, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 921

0x1184 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1477, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31863

0x1185 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x147B, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32020

0x1186 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x147B, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32020

0x1187 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x147C		Scope = global	WdfWorkItemCreate

0x1188 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x147B, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32020

0x1189 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x147F, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 678

0x118a : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1480		Scope = global	WDF_WORKITEM_CONFIG_INIT

0x118b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x147F, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 678

0x118c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1482, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31599

0x118d : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1476		Scope = global	WdfRequestRetrieveOutputBuffer

0x118e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1487, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 30934

0x118f : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1488		Scope = global	WdfStringGetUnicodeString

0x1190 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1490		Scope = global	WdfRequestSetInformation

0x1191 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1498		Scope = global	WdfRequestComplete

0x1192 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1499, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h, line = 2831

0x1193 : Length = 22, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x14A0		Scope = global	WPP_SF_D

0x1194 : Length = 22, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x14A9		Scope = global	WPP_SF_Zd

0x1195 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x136F		Scope = global	WdfWorkItemEnqueue

0x1196 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14B6, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 18524

0x1197 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14B9, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32707

0x1198 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14B9, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32707

0x1199 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14BE, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 685

0x119a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14BE, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 685

0x119b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14C3, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 31813

0x119c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14D9, mod = 13, source file = onecore\external\sdk\inc\winnt.h, line = 13514

0x119d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14E4, mod = 13, source file = onecore\external\sdk\inc\winnt.h, line = 13546

0x119e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14EF, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 221

0x119f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14ED, mod = 13, source file = onecore\external\sdk\inc\winnt.h, line = 21637

0x11a0 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14EF, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h, line = 221

0x11a1 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14F5, mod = 13, source file = onecore\external\sdk\inc\winnt.h, line = 25367

0x11a2 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14F6, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 748

0x11a3 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14F6, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 748

0x11a4 : Length = 10, Leaf = 0x1605 LF_STRING_ID
	
	No sub string

0x11a5 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	-FC -MT -c -Zc:wchar_t- -Zl -Zp8 -Gy -W3 -EHs -EHc -GR- -GF -GS -kernel -Ox -Os -Z7 -Zc:alignedNew- -w15043 -Zc:noexceptTypes -Zc:rvalueCast -funcoverride:_guard_check_icall -ZH:SHA_256 -wd4986 -wd4987 -wd4471 -wd4369 -wd4309 -wd4754
	No sub string

0x11a6 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14FD, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 935

0x11a7 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x14FD, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 935

0x11a8 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wd4427 -Wv:19.23 -Zc:tlsGuards- -wl4002 -wl4003 -wl4005 -wl4006 -wl4007 -wl4008 -wl4010 -wl4013 -wl4015 -wl4018 -wl4020 -wl4022 -wl4024 -wl4025 -wl4026 -wl4027 -wl4028 -wl4029 -wl4030 -wl4031 -wl4033 -wl4034 -wl4036 -wl4038 -wl4041
	No sub string

0x11a9 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4042 -wl4045 -wl4047 -wl4048 -wl4049 -wl4055 -wl4056 -wl4066 -wl4067 -wl4068 -wl4073 -wl4074 -wl4075 -wl4076 -wl4077 -wl4079 -wl4080 -wl4081 -wl4083 -wl4085 -wl4086 -wl4087 -wl4088 -wl4089 -wl4090 -wl4091 -wl4094 -wl4096 -wl4097
	No sub string

0x11aa : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1502, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 708

0x11ab : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4098 -wl4099 -wl4101 -wl4102 -wl4103 -wl4109 -wl4112 -wl4113 -wl4114 -wl4115 -wl4116 -wl4117 -wl4119 -wl4120 -wl4122 -wl4124 -wl4129 -wl4133 -wl4138 -wl4141 -wl4142 -wl4143 -wl4144 -wl4145 -wl4146 -wl4150 -wl4153 -wl4154 -wl4155
	No sub string

0x11ac : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1502, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 708

0x11ad : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4156 -wl4157 -wl4158 -wl4159 -wl4160 -wl4161 -wl4162 -wl4163 -wl4164 -wl4166 -wl4167 -wl4168 -wl4172 -wl4174 -wl4175 -wl4176 -wl4177 -wl4178 -wl4180 -wl4182 -wl4183 -wl4185 -wl4186 -wl4187 -wl4190 -wl4192 -wl4197 -wl4200 -wl4215
	No sub string

0x11ae : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4216 -wl4218 -wl4223 -wl4224 -wl4226 -wl4227 -wl4228 -wl4229 -wl4230 -wl4237 -wl4240 -wl4242 -wl4243 -wl4244 -wl4250 -wl4251 -wl4258 -wl4267 -wl4269 -wl4272 -wl4273 -wl4274 -wl4275 -wl4276 -wl4278 -wl4280 -wl4281 -wl4282 -wl4283
	No sub string

0x11af : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4285 -wl4286 -wl4288 -wl4290 -wl4291 -wl4293 -wl4297 -wl4302 -wl4305 -wl4306 -wl4307 -wl4308 -wl4309 -wl4310 -wl4311 -wl4312 -wl4313 -wl4316 -wl4319 -wl4325 -wl4326 -wl4329 -wl4333 -wl4334 -wl4335 -wl4340 -wl4344 -wl4346 -wl4348
	No sub string

0x11b0 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1507, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 861

0x11b1 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1507, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 861

0x11b2 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4353 -wl4356 -wl4357 -wl4358 -wl4359 -wl4364 -wl4368 -wl4369 -wl4373 -wl4374 -wl4375 -wl4376 -wl4377 -wl4378 -wl4379 -wl4381 -wl4382 -wl4383 -wl4384 -wl4390 -wl4391 -wl4392 -wl4393 -wl4394 -wl4395 -wl4396 -wl4397 -wl4398 -wl4399
	No sub string

0x11b3 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4600 -wl4401 -wl4402 -wl4403 -wl4404 -wl4405 -wl4406 -wl4407 -wl4409 -wl4410 -wl4411 -wl4414 -wl4420 -wl4430 -wl4436 -wl4439 -wl4440 -wl4441 -wl4445 -wl4461 -wl4462 -wl4470 -wl4473 -wl4477 -wl4484 -wl4485 -wl4486 -wl4488 -wl4489
	No sub string

0x11b4 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x150D, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32696

0x11b5 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4490 -wl4502 -wl4503 -wl4506 -wl4508 -wl4509 -wl4510 -wl4511 -wl4518 -wl4521 -wl4522 -wl4523 -wl4526 -wl4530 -wl4532 -wl4533 -wl4534 -wl4535 -wl4537 -wl4538 -wl4540 -wl4541 -wl4543 -wl4544 -wl4550 -wl4551 -wl4552 -wl4553 -wl4554
	No sub string

0x11b6 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x150D, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 32696

0x11b7 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4556 -wl4558 -wl4561 -wl4566 -wl4570 -wl4572 -wl4580 -wl4581 -wl4584 -wl4597 -wl4602 -wl4603 -wl4606 -wl4610 -wl4611 -wl4612 -wl4613 -wl4615 -wl4616 -wl4618 -wl4620 -wl4621 -wl4622 -wl4624 -wl4627 -wl4630 -wl4632 -wl4633 -wl4635
	No sub string

0x11b8 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4636 -wl4637 -wl4638 -wl4641 -wl4645 -wl4646 -wl4650 -wl4651 -wl4652 -wl4653 -wl4655 -wl4656 -wl4657 -wl4659 -wl4661 -wl4662 -wl4667 -wl4669 -wl4674 -wl4677 -wl4678 -wl4679 -wl4683 -wl4684 -wl4685 -wl4687 -wl4688 -wl4691 -wl4693
	No sub string

0x11b9 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4694 -wl4698 -wl4700 -wl4701 -wl4703 -wl4711 -wl4715 -wl4716 -wl4717 -wl4722 -wl4723 -wl4724 -wl4727 -wl4730 -wl4731 -wl4733 -wl4739 -wl4742 -wl4743 -wl4744 -wl4747 -wl4750 -wl4756 -wl4768 -wl4772 -wl4788 -wl4789 -wl4793 -wl4794
	No sub string

0x11ba : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1513, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 713

0x11bb : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1513, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 713

0x11bc : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4799 -wl4803 -wl4804 -wl4805 -wl4806 -wl4807 -wl4810 -wl4811 -wl4812 -wl4813 -wl4817 -wl4819 -wl4821 -wl4823 -wl4829 -wl4834 -wl4835 -wl4838 -wl4839 -wl4867 -wl4900 -wl4910 -wl4912 -wl4920 -wl4925 -wl4926 -wl4927 -wl4929 -wl4930
	No sub string

0x11bd : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4935 -wl4936 -wl4939 -wl4944 -wl4945 -wl4947 -wl4948 -wl4949 -wl4950 -wl4951 -wl4952 -wl4953 -wl4956 -wl4957 -wl4958 -wl4959 -wl4961 -wl4964 -wl4965 -wl4972 -wl4984 -wl4995 -wl4996 -wl4997 -wl4999 -wl5033 -wl5037 -wl5046 -wl5050
	No sub string

0x11be : Length = 66, Leaf = 0x1604 LF_SUBSTR_LIST
	String ID's (count = 15): 0x11A5 0x11A8 0x11A9 0x11AB 0x11AD 0x11AE 0x11AF 0x11B2 0x11B3 0x11B5 0x11B7 0x11B8 0x11B9 0x11BC 0x11BD

0x11bf : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x151A, mod = 4, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 763

0x11c0 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x151A, mod = 3, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h, line = 763

0x11c1 : Length = 146, Leaf = 0x1605 LF_STRING_ID
	 -wl5055 -wl5056 -wl5105 -wl5208 -Gw -Zc:checkGwOdr -wd4316 -wd4973 -Brepro -Zc:sizedDealloc- -Qspectre -wd5045 -guard:cf -wd4425 -TC -X
	List of sub string ID's = 0x11BE

0x11c2 : Length = 26, Leaf = 0x1603 LF_BUILDINFO
	String ID's (count = 5): 0x11A4 0x11A4 0x11A4 0x11A4 0x11C1

0x11c3 : Length = 14, Leaf = 0x1605 LF_STRING_ID
	Queue.c
	No sub string

0x11c4 : Length = 18, Leaf = 0x1605 LF_STRING_ID
	Filter.c
	No sub string

0x11c5 : Length = 26, Leaf = 0x1603 LF_BUILDINFO
	String ID's (count = 5): 0x10CB 0x10CC 0x11C3 0x10CE 0x10DE

0x11c6 : Length = 26, Leaf = 0x1603 LF_BUILDINFO
	String ID's (count = 5): 0x10CB 0x10CC 0x11C4 0x10CE 0x10DE

0x11c7 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x151F		Scope = global	_guard_check_icall_nop

0x11c8 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1283		Scope = global	BthPS3PSMEvtIoInternalDeviceControl

0x11c9 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1528		Scope = global	McTemplateK0_EtwWriteTransfer

0x11ca : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x152A		Scope = global	WdfRequestWdmGetIrp

0x11cb : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x11CC		Scope = global	UrbFunctionBulkInTransferCompleted

0x11cc : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x152F		Scope = global	WdfIoQueueGetDevice

0x11cd : Length = 242, Leaf = 0x1605 LF_STRING_ID
	-FC -MT -c -Zc:wchar_t- -Zl -Zp8 -Gy -W4 -EHs- -EHc- -GR- -GF -GS -kernel -Ox -Os -Z7 -Zc:alignedNew- -w15043 -Zc:noexceptTypes -Zc:rvalueCast -ZH:SHA_256 -wd4986 -wd4987 -wd4471 -wd4369 -wd4309 -wd4754 -wd4427 -Wv:19.23 -Zc:tlsGuards-
	No sub string

0x11ce : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4002 -wl4003 -wl4005 -wl4006 -wl4007 -wl4008 -wl4010 -wl4013 -wl4015 -wl4018 -wl4020 -wl4022 -wl4024 -wl4025 -wl4026 -wl4027 -wl4028 -wl4029 -wl4030 -wl4031 -wl4033 -wl4034 -wl4036 -wl4038 -wl4041 -wl4042 -wl4045 -wl4047 -wl4048
	No sub string

0x11cf : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4049 -wl4055 -wl4056 -wl4066 -wl4067 -wl4068 -wl4073 -wl4074 -wl4075 -wl4076 -wl4077 -wl4079 -wl4080 -wl4081 -wl4083 -wl4085 -wl4086 -wl4087 -wl4088 -wl4089 -wl4090 -wl4091 -wl4094 -wl4096 -wl4097 -wl4098 -wl4099 -wl4101 -wl4102
	No sub string

0x11d0 : Length = 26, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1535		Scope = global	WdfRequestSend

0x11d1 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1537		Scope = global	L2CAP_IS_SIGNALLING_COMMAND_CODE

0x11d2 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4103 -wl4109 -wl4112 -wl4113 -wl4114 -wl4115 -wl4116 -wl4117 -wl4119 -wl4120 -wl4122 -wl4124 -wl4129 -wl4133 -wl4138 -wl4141 -wl4142 -wl4143 -wl4144 -wl4145 -wl4146 -wl4150 -wl4153 -wl4154 -wl4155 -wl4156 -wl4157 -wl4158 -wl4159
	No sub string

0x11d3 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4160 -wl4161 -wl4162 -wl4163 -wl4164 -wl4166 -wl4167 -wl4168 -wl4172 -wl4174 -wl4175 -wl4176 -wl4177 -wl4178 -wl4180 -wl4182 -wl4183 -wl4185 -wl4186 -wl4187 -wl4190 -wl4192 -wl4197 -wl4200 -wl4215 -wl4216 -wl4218 -wl4223 -wl4224
	No sub string

0x11d4 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4226 -wl4227 -wl4228 -wl4229 -wl4230 -wl4237 -wl4240 -wl4242 -wl4243 -wl4244 -wl4250 -wl4251 -wl4258 -wl4267 -wl4269 -wl4272 -wl4273 -wl4274 -wl4275 -wl4276 -wl4278 -wl4280 -wl4281 -wl4282 -wl4283 -wl4285 -wl4286 -wl4288 -wl4290
	No sub string

0x11d5 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1539		Scope = global	WdfDeviceGetIoTarget

0x11d6 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x153C		Scope = global	USBPcapURBGetBufferPointer

0x11d7 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4291 -wl4293 -wl4297 -wl4302 -wl4305 -wl4306 -wl4307 -wl4308 -wl4309 -wl4310 -wl4311 -wl4312 -wl4313 -wl4316 -wl4319 -wl4325 -wl4326 -wl4329 -wl4333 -wl4334 -wl4335 -wl4340 -wl4344 -wl4346 -wl4348 -wl4353 -wl4356 -wl4357 -wl4358
	No sub string

0x11d8 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4359 -wl4364 -wl4368 -wl4369 -wl4373 -wl4374 -wl4375 -wl4376 -wl4377 -wl4378 -wl4379 -wl4381 -wl4382 -wl4383 -wl4384 -wl4390 -wl4391 -wl4392 -wl4393 -wl4394 -wl4395 -wl4396 -wl4397 -wl4398 -wl4399 -wl4600 -wl4401 -wl4402 -wl4403
	No sub string

0x11d9 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4404 -wl4405 -wl4406 -wl4407 -wl4409 -wl4410 -wl4411 -wl4414 -wl4420 -wl4430 -wl4436 -wl4439 -wl4440 -wl4441 -wl4445 -wl4461 -wl4462 -wl4470 -wl4473 -wl4477 -wl4484 -wl4485 -wl4486 -wl4488 -wl4489 -wl4490 -wl4502 -wl4503 -wl4506
	No sub string

0x11da : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1540		Scope = global	WdfRequestSetCompletionRoutine

0x11db : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1541		Scope = global	MmGetSystemAddressForMdlSafe

0x11dc : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4508 -wl4509 -wl4510 -wl4511 -wl4518 -wl4521 -wl4522 -wl4523 -wl4526 -wl4530 -wl4532 -wl4533 -wl4534 -wl4535 -wl4537 -wl4538 -wl4540 -wl4541 -wl4543 -wl4544 -wl4550 -wl4551 -wl4552 -wl4553 -wl4554 -wl4556 -wl4558 -wl4561 -wl4566
	No sub string

0x11dd : Length = 50, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12C6		Scope = global	WdfRequestFormatRequestUsingCurrentType

0x11de : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4570 -wl4572 -wl4580 -wl4581 -wl4584 -wl4597 -wl4602 -wl4603 -wl4606 -wl4610 -wl4611 -wl4612 -wl4613 -wl4615 -wl4616 -wl4618 -wl4620 -wl4621 -wl4622 -wl4624 -wl4627 -wl4630 -wl4632 -wl4633 -wl4635 -wl4636 -wl4637 -wl4638 -wl4641
	No sub string

0x11df : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4645 -wl4646 -wl4650 -wl4651 -wl4652 -wl4653 -wl4655 -wl4656 -wl4657 -wl4659 -wl4661 -wl4662 -wl4667 -wl4669 -wl4674 -wl4677 -wl4678 -wl4679 -wl4683 -wl4684 -wl4685 -wl4687 -wl4688 -wl4691 -wl4693 -wl4694 -wl4698 -wl4700 -wl4701
	No sub string

0x11e0 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4703 -wl4711 -wl4715 -wl4716 -wl4717 -wl4722 -wl4723 -wl4724 -wl4727 -wl4730 -wl4731 -wl4733 -wl4739 -wl4742 -wl4743 -wl4744 -wl4747 -wl4750 -wl4756 -wl4768 -wl4772 -wl4788 -wl4789 -wl4793 -wl4794 -wl4799 -wl4803 -wl4804 -wl4805
	No sub string

0x11e1 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4806 -wl4807 -wl4810 -wl4811 -wl4812 -wl4813 -wl4817 -wl4819 -wl4821 -wl4823 -wl4829 -wl4834 -wl4835 -wl4838 -wl4839 -wl4867 -wl4900 -wl4910 -wl4912 -wl4920 -wl4925 -wl4926 -wl4927 -wl4929 -wl4930 -wl4935 -wl4936 -wl4939 -wl4944
	No sub string

0x11e2 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1545		Scope = global	WdfRequestGetStatus

0x11e3 : Length = 242, Leaf = 0x1605 LF_STRING_ID
	 -wl4945 -wl4947 -wl4948 -wl4949 -wl4950 -wl4951 -wl4952 -wl4953 -wl4956 -wl4957 -wl4958 -wl4959 -wl4961 -wl4964 -wl4965 -wl4972 -wl4984 -wl4995 -wl4996 -wl4997 -wl4999 -wl5033 -wl5037 -wl5046 -wl5050 -wl5055 -wl5056 -wl5105 -wl5208
	No sub string

0x11e4 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1549		Scope = global	IoGetCurrentIrpStackLocation

0x11e5 : Length = 66, Leaf = 0x1604 LF_SUBSTR_LIST
	String ID's (count = 15): 0x11CD 0x11CE 0x11CF 0x11D2 0x11D3 0x11D4 0x11D7 0x11D8 0x11D9 0x11DC 0x11DE 0x11DF 0x11E0 0x11E1 0x11E3

0x11e6 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x154D		Scope = global	WDF_REQUEST_SEND_OPTIONS_INIT

0x11e7 : Length = 114, Leaf = 0x1605 LF_STRING_ID
	 -Gw -Zc:checkGwOdr -wd4316 -wd4973 -Brepro -Zc:sizedDealloc- -Qspectre -wd5045 -guard:cf -wd4425 -TC -X
	List of sub string ID's = 0x11E5

0x11e8 : Length = 26, Leaf = 0x1603 LF_BUILDINFO
	String ID's (count = 5): 0x11A4 0x11A4 0x11A4 0x11A4 0x11E7

0x11e9 : Length = 22, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1554		Scope = global	WPP_SF_q

0x11ea : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x11CC		Scope = global	UrbSelectConfigurationCompleted

0x11eb : Length = 22, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1558		Scope = global	RtlFailFast

0x11ec : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x100F		Scope = global	__security_init_cookie

0x11ed : Length = 22, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1561		Scope = global	WPP_SF_dDDq

0x11ee : Length = 22, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1566		Scope = global	WPP_SF_qD

0x11ef : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1585, mod = 2, source file = C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h, line = 39799

0x11f0 : Length = 18, Leaf = 0x1605 LF_STRING_ID
	Driver.c
	No sub string

0x11f1 : Length = 26, Leaf = 0x1603 LF_BUILDINFO
	String ID's (count = 5): 0x10CB 0x10CC 0x11F0 0x10CE 0x10DE

0x11f2 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1282		Scope = global	BthPS3PSM_EvtDeviceAdd

0x11f3 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1087		Scope = global	BthPS3PSM_EvtDriverContextCleanup

0x11f4 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1586		Scope = global	WdfDriverWdmGetDriverObject

0x11f5 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1588		Scope = global	McTemplateK0p_EtwWriteTransfer

0x11f6 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x158A		Scope = global	McGenEventUnregister_EtwUnregister

0x11f7 : Length = 26, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1305		Scope = global	WppCleanupKm

0x11f8 : Length = 22, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12FB		Scope = global	DriverEntry

0x11f9 : Length = 26, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x158D		Scope = global	WdfDriverCreate

0x11fa : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1591		Scope = global	WDF_DRIVER_CONFIG_INIT

0x11fb : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1593		Scope = global	WPP_INIT_CONTROL_ARRAY

0x11fc : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1590, mod = 7, source file = minkernel\crts\crtw32\misc\guard_support.c, line = 198

0x11fd : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1595		Scope = global	WdfCollectionCreate

0x11fe : Length = 242, Leaf = 0x1605 LF_STRING_ID
	-FC -MT -c -Zc:wchar_t- -Zl -Zp8 -Gy -W3 -EHs -EHc -GR- -GF -GS -kernel -Ox -Os -Z7 -Zc:alignedNew- -w15043 -Zc:noexceptTypes -Zc:rvalueCast -ZH:SHA_256 -wd4986 -wd4987 -wd4471 -wd4369 -wd4309 -wd4754 -wd4427 -Wv:19.23 -Zc:tlsGuards-
	No sub string

0x11ff : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1597		Scope = global	WdfWaitLockCreate

0x1200 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x100F		Scope = global	WppLoadTracingSupport

0x1201 : Length = 66, Leaf = 0x1604 LF_SUBSTR_LIST
	String ID's (count = 15): 0x11FE 0x11CE 0x11CF 0x11D2 0x11D3 0x11D4 0x11D7 0x11D8 0x11D9 0x11DC 0x11DE 0x11DF 0x11E0 0x11E1 0x11E3

0x1202 : Length = 114, Leaf = 0x1605 LF_STRING_ID
	 -Gw -Zc:checkGwOdr -wd4316 -wd4973 -Brepro -Zc:sizedDealloc- -Qspectre -wd5045 -guard:cf -wd4425 -TC -X
	List of sub string ID's = 0x1201

0x1203 : Length = 26, Leaf = 0x1603 LF_BUILDINFO
	String ID's (count = 5): 0x11A4 0x11A4 0x11A4 0x11A4 0x1202

0x1204 : Length = 22, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1599		Scope = global	WppInitKm

0x1205 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x159C		Scope = global	McGenEventRegister_EtwRegister

0x1206 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15A0		Scope = global	McTemplateK0pq_EtwWriteTransfer

0x1207 : Length = 26, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15A1		Scope = global	ReadNoFence64

0x1208 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15A3		Scope = global	WPP_CONTROL_ANNOTATION

0x1209 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1321		Scope = global	McGenControlCallbackV2

0x120a : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15A7		Scope = global	McGenLevelKeywordEnabled

0x120b : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15A9		Scope = global	ReadPointerNoFence

0x120c : Length = 50, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1087		Scope = global	__castguard_check_failure_debugbreak

0x120d : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x112A		Scope = global	WppClassicProviderCallback

0x120e : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15AD		Scope = global	__castguard_compat_check

0x120f : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1087		Scope = global	__castguard_check_failure_fastfail

0x1210 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1087		Scope = global	__castguard_check_failure_nop

0x1211 : Length = 50, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1087		Scope = global	__castguard_check_failure_os_handled

0x1212 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x117D		Scope = global	WppTraceCallback

0x1213 : Length = 58, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1087		Scope = global	__castguard_check_failure_os_handled_wrapper

0x1214 : Length = 26, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15B6		Scope = global	WppIsEqualGuid

0x1215 : Length = 50, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15B9		Scope = global	__castguard_slow_path_check_debugbreak

0x1216 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15BA		Scope = global	__castguard_slow_path_compat_check

0x1217 : Length = 50, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15B9		Scope = global	__castguard_slow_path_check_fastfail

0x1218 : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15B9		Scope = global	__castguard_slow_path_check_nop

0x1219 : Length = 50, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15B9		Scope = global	__castguard_slow_path_check_os_handled

0x121a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15BC, mod = 6, source file = onecore\internal\sdk\inc\rtlfeatureconfigtypes.h, line = 54

0x121b : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15BD		Scope = global	_guard_icall_checks_enforced

0x121c : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15BD		Scope = global	_guard_rf_checks_enforced

0x121d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15BF, mod = 6, source file = onecore\internal\sdk\inc\ntpsapi.h, line = 1607

0x121e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15C2, mod = 6, source file = onecore\internal\sdk\inc\ntpsapi.h, line = 1752

0x121f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15C4, mod = 6, source file = onecore\internal\sdk\inc\ntpsapi.h, line = 1785

0x1220 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15C6, mod = 6, source file = onecore\internal\sdk\inc\ntpsapi.h, line = 2636

0x1221 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15CA, mod = 6, source file = onecore\internal\sdk\inc\ntpsapi.h, line = 2653

0x1222 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15C9, mod = 15, source file = minkernel\crts\crtw32\h\internal.h, line = 1926

0x1223 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15CC, mod = 6, source file = onecore\internal\sdk\inc\ntexapi.h, line = 1258

0x1224 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x15BD		Scope = global	__cpu_features_init

0x1225 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15D0, mod = 6, source file = onecore\internal\sdk\inc\ntexapi.h, line = 1456

0x1226 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15D2, mod = 6, source file = onecore\internal\sdk\inc\ntpsapi.h, line = 3425

0x1227 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15D4, mod = 6, source file = onecore\internal\sdk\inc\ntpsapi.h, line = 3496

0x1228 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15D6, mod = 6, source file = onecore\internal\sdk\inc\ntpsapi.h, line = 3506

0x1229 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15D8, mod = 6, source file = onecore\internal\sdk\inc\ntexapi.h, line = 2151

0x122a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15DA, mod = 6, source file = onecore\internal\sdk\inc\ntxcapi.h, line = 232

0x122b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15DC, mod = 6, source file = onecore\internal\sdk\inc\ntexapi.h, line = 5170

0x122c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15DE, mod = 6, source file = onecore\internal\sdk\inc\ntexapi.h, line = 5278

0x122d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15E0, mod = 6, source file = onecore\internal\sdk\inc\ntmmapi_x.h, line = 549

0x122e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15E2, mod = 6, source file = onecore\internal\sdk\inc\ntmmapi.h, line = 200

0x122f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15E4, mod = 6, source file = onecore\internal\sdk\inc\ntseapi.h, line = 702

0x1230 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15E6, mod = 6, source file = onecore\internal\sdk\inc\MinWin\ntioapi_x.h, line = 12388

0x1231 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15E8, mod = 6, source file = onecore\internal\sdk\inc\ntpsapi_x.h, line = 2341

0x1232 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15EA, mod = 6, source file = minkernel\crts\crtw32\h\excpt.h, line = 93

0x1233 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15F0, mod = 6, source file = onecore\internal\sdk\inc\ntkeapi_x.h, line = 259

0x1234 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15F8, mod = 6, source file = onecore\external\sdk\inc\MinWin\rtlsupportapi.h, line = 106

0x1235 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x15FA, mod = 6, source file = onecore\internal\sdk\inc\ntkeapi_x.h, line = 250

0x1236 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1604, mod = 6, source file = onecore\internal\sdk\inc\ntamd64_x.h, line = 1698

0x1237 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1608, mod = 6, source file = onecore\external\sdk\inc\MinWin\rtlsupportapi.h, line = 111

0x1238 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x160E, mod = 6, source file = minkernel\crts\crtw32\misc\amd64\gshandler.c, line = 18

0x1239 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1611, mod = 6, source file = onecore\internal\sdk\inc\ntxcapi_x.h, line = 78

0x123a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1613, mod = 6, source file = onecore\external\ddk\inc\ntimage.h, line = 2310

0x123b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1619, mod = 6, source file = onecore\internal\sdk\inc\ntamd64_x.h, line = 1946

0x123c : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x161B		Scope = global	__GSHandlerCheck

0x123d : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x161D		Scope = global	__GSHandlerCheckCommon

0x123e : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x151F		Scope = global	__security_check_cookie

0x123f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x161F, mod = 10, source file = onecore\external\ifskit\inc\wdm.h, line = 8041

0x1240 : Length = 246, Leaf = 0x1605 LF_STRING_ID
	-FC -MT -c -Zc:wchar_t- -Zl -Zp8 -Gy -W3 -EHs- -EHc- -GR- -GF -GS -kernel -Ox -Os -GL -Z7 -Zc:alignedNew- -w15043 -Zc:noexceptTypes -Zc:rvalueCast -ZH:SHA_256 -wd4986 -wd4987 -wd4471 -wd4369 -wd4309 -wd4754 -wd4427 -Wv:19.23 -Zc:tlsGuards-
	No sub string

0x1241 : Length = 66, Leaf = 0x1604 LF_SUBSTR_LIST
	String ID's (count = 15): 0x1240 0x11CE 0x11CF 0x11D2 0x11D3 0x11D4 0x11D7 0x11D8 0x11D9 0x11DC 0x11DE 0x11DF 0x11E0 0x11E1 0x11E3

0x1242 : Length = 114, Leaf = 0x1605 LF_STRING_ID
	 -Gw -Zc:checkGwOdr -wd4316 -wd4973 -Brepro -Zc:sizedDealloc- -Qspectre -wd5045 -guard:cf -wd4425 -TC -X
	List of sub string ID's = 0x1241

0x1243 : Length = 26, Leaf = 0x1603 LF_BUILDINFO
	String ID's (count = 5): 0x11A4 0x11A4 0x11A4 0x11A4 0x1242

0x1244 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x151F		Scope = global	__report_gsfailure

0x1245 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x100F		Scope = global	__report_rangecheckfailure

0x1246 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1558		Scope = global	__report_securityfailure

0x1247 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1629, mod = 19, source file = onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdriver.h, line = 50

0x1248 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x162B, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 49140

0x1249 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x162D, mod = 19, source file = onecore\external\shared\inc\dpfilter.h, line = 11

0x124a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1632, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 12007

0x124b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1635, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 12725

0x124c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x163B, mod = 19, source file = minkernel\wdf\framework\shared\inc\private\common\fxldr.h, line = 79

0x124d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1645, mod = 19, source file = OneCore\Internal\MinWin\Priv_Sdk\Inc\kmdf\private\FxIFR.h, line = 77

0x124e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1648, mod = 19, source file = OneCore\Internal\MinWin\Priv_Sdk\Inc\kmdf\private\FxIFR.h, line = 78

0x124f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x164A, mod = 19, source file = OneCore\Internal\MinWin\Priv_Sdk\Inc\kmdf\private\FxIFR.h, line = 79

0x1250 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x164F, mod = 20, source file = minkernel\wdf\framework\shared\inc\private\common\fxldr.h, line = 54

0x1251 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1650, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 30292

0x1252 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1654, mod = 19, source file = OneCore\Internal\MinWin\Priv_Sdk\Inc\kmdf\private\FxIFR.h, line = 94

0x1253 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1657, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 32806

0x1254 : Length = 246, Leaf = 0x1605 LF_STRING_ID
	-FC -MT -c -Zc:wchar_t- -Zl -Zp8 -Gy -W4 -EHs- -EHc- -GR- -GF -GS -kernel -Ox -Os -GL -Z7 -Zc:alignedNew- -w15043 -Zc:noexceptTypes -Zc:rvalueCast -ZH:SHA_256 -wd4986 -wd4987 -wd4471 -wd4369 -wd4309 -wd4754 -wd4427 -Wv:19.23 -Zc:tlsGuards-
	No sub string

0x1255 : Length = 66, Leaf = 0x1604 LF_SUBSTR_LIST
	String ID's (count = 15): 0x1254 0x11CE 0x11CF 0x11D2 0x11D3 0x11D4 0x11D7 0x11D8 0x11D9 0x11DC 0x11DE 0x11DF 0x11E0 0x11E1 0x11E3

0x1256 : Length = 122, Leaf = 0x1605 LF_STRING_ID
	 -Gw -Zc:checkGwOdr -wd4316 -wd4973 -Brepro -Zc:sizedDealloc- -Qspectre -wd5045 -guard:cf -wd4425 -std:c++17 -TP -X
	List of sub string ID's = 0x1255

0x1257 : Length = 26, Leaf = 0x1603 LF_BUILDINFO
	String ID's (count = 5): 0x11A4 0x11A4 0x11A4 0x11A4 0x1256

0x1258 : Length = 50, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1667		Scope = global	FxGetNextObjectContextTypeInfo

0x1259 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x163C		Scope = global	FxStubInitTypes

0x125a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1686, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 32818

0x125b : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1695, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 33130

0x125c : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1697, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 33122

0x125d : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16A9, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 32919

0x125e : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16AB, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 32907

0x125f : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16B0, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 32870

0x1260 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16B3, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 32841

0x1261 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16B2, mod = 21, source file = onecore\internal\ddk\inc\wdf\kmdf\1.15\wdfcxbase.h, line = 89

0x1262 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16C0, mod = 21, source file = minkernel\wdf\framework\shared\inc\private\common\fxldr.h, line = 70

0x1263 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16CD, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 12011

0x1264 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16D1, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 12151

0x1265 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16D2, mod = 21, source file = onecore\internal\ddk\inc\wdf\kmdf\1.15\wdfcxbase.h, line = 142

0x1266 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16D3, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 12146

0x1267 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16DA, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 12092

0x1268 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x16DB		Scope = global	FxStubBindClasses

0x1269 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16DC, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 12083

0x126a : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16E2, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 12051

0x126b : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x16E3		Scope = global	FxGetNextClassBindInfo

0x126c : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x16AA		Scope = global	WdfVersionBindClass

0x126d : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x146D		Scope = global	FxStubIsClassBound

0x126e : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x16E9		Scope = global	FxStubUnbindClasses

0x126f : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x16B5		Scope = global	WdfVersionUnbindClass

0x1270 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x16FC, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 12733

0x1271 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x170C, mod = 19, source file = onecore\external\shared\inc\MinWin\ntdef.h, line = 1235

0x1272 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x170F, mod = 19, source file = OneCore\Private\MinWin\Priv_Sdk\Inc\kmdf\private\wdfldr.h, line = 24

0x1273 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1716, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 32163

0x1274 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1719, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 32333

0x1275 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x171D, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 32281

0x1276 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1721, mod = 19, source file = OneCore\Private\MinWin\Priv_Sdk\Inc\kmdf\private\wdfldr.h, line = 144

0x1277 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x172B, mod = 19, source file = onecore\external\ddk\inc\wdm.h, line = 31813

0x1278 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x100F		Scope = global	FxStubDriverEntryFailure

0x1279 : Length = 66, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x172E		Scope = global	WDF_LOADER_INTERFACE_DRIVER_ENTRY_FAILURE_INIT

0x127a : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1730		Scope = global	WdfLdrQueryInterface

0x127b : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x100F		Scope = global	FxStubDriverUnloadCommon

0x127c : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1727		Scope = global	WdfVersionUnbind

0x127d : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12FB		Scope = global	FxDriverEntry

0x127e : Length = 42, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x100F		Scope = global	__security_init_cookie

0x127f : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12FB		Scope = global	FxDriverEntryWorker

0x1280 : Length = 30, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x12FB		Scope = global	DriverEntry

0x1281 : Length = 34, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x16EC		Scope = global	WdfVersionBind

0x1282 : Length = 46, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1722		Scope = global	FxStubDriverMiniportUnload

0x1283 : Length = 38, Leaf = 0x1601 LF_FUNC_ID
	Type = 0x1305		Scope = global	FxStubDriverUnload

0x1284 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1737, mod = 24, source file = onecore\external\sdk\inc\winnt.h, line = 21008

0x1285 : Length = 16, Leaf = 0x1607 LF_UDT_MOD_SRC_LINE
	type = 0x1739, mod = 24, source file = onecore\external\sdk\inc\winnt.h, line = 20745


*** MODULES

0001 "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"
0002 "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"
0003 "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"
0004 "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"
0005 "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"
0006 "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj"
0007 "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj"
0008 "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj"
0009 "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj"
000A "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj"
000B "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "ntoskrnl.exe"
000C "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj"
000D "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj"
000E "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj"
000F "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj"
0010 "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib" "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj"
0011 "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib" "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj"
0012 "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib" "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj"
0013 "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib" "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj"
0014 "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib" "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj"
0015 "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib" "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj"
0016 "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj"
0017 "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib" "WDFLDR.SYS"
0018 "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib" "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj"
0019 "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"
001A "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib" "Import:ntoskrnl.exe"
001B "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib" "Import:WDFLDR.SYS"
001C "" "* Linker *"

*** PUBLICS

S_PUB32: [0003:000003B0], Flags: 00000000, WdfDriverGlobals
S_PUB32: [0009:00014500], Flags: 00000000, __guard_flags
S_PUB32: [0001:000006B0], Flags: 00000002, UrbFunctionBulkInTransferCompleted
S_PUB32: [0002:000000A8], Flags: 00000000, __guard_xfg_dispatch_icall_fptr
S_PUB32: [0001:000020EC], Flags: 00000002, ?FxStubInitTypes@@YAJXZ
S_PUB32: [0001:00000640], Flags: 00000002, WppClassicProviderCallback
S_PUB32: [0001:00002B80], Flags: 00000000, ??_C@_1CO@OCFJNMNL@?$AAW?$AAd?$AAf?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AAA?$AAs?$AAs?$AAi@FNODOBFM@
S_PUB32: [0002:00000190], Flags: 00000000, SetPatchStatusForDeviceInstance
S_PUB32: [0005:00001980], Flags: 00000000, ??_C@_1DM@CMHABJLB@?$AAB?$AAt?$AAh?$AAP?$AAS?$AA3?$AAP?$AAS?$AAM?$AA_?$AAC?$AAr?$AAe?$AAa?$AAt@NNGAKEGL@
S_PUB32: [0002:00000180], Flags: 00000000, GetPatchStatusForDeviceInstance
S_PUB32: [0003:000000C8], Flags: 00000000, __security_cookie_complement
S_PUB32: [0005:00000E20], Flags: 00000002, WppTraceCallback
S_PUB32: [0002:00000020], Flags: 00000000, __imp_WdfVersionUnbindClass
S_PUB32: [0002:000001F0], Flags: 00000000, WPP_d561fdd84a6b334c0c998bd67f784ac3_Traceguids
S_PUB32: [0002:00000048], Flags: 00000000, __imp_RtlInitUnicodeString
S_PUB32: [0005:00001820], Flags: 00000000, ??_C@_0BH@KBPMIOEN@BthPS3PSM_CreateDevice@NNGAKEGL@
S_PUB32: [0001:00002470], Flags: 00000002, _guard_dispatch_icall_nop
S_PUB32: [0001:00000248], Flags: 00000002, McTemplateK0qz_EtwWriteTransfer
S_PUB32: [0001:00002340], Flags: 00000002, ?FxStubUnbindClasses@@YAXPEAU_WDF_BIND_INFO@@@Z
S_PUB32: [0009:00000000], Flags: 00000000, __guard_longjmp_count
S_PUB32: [0001:000029E0], Flags: 00000000, ??_C@_1BE@DJCFELKD@?$AAB?$AAl?$AAu?$AAe?$AAt?$AAo?$AAo?$AAt?$AAh@FNODOBFM@
S_PUB32: [0001:00001EA8], Flags: 00000002, ?FxStubDriverEntryFailure@@YAXXZ
S_PUB32: [0003:00000130], Flags: 00000000, ?__KMDF_TYPE_INIT_END@@3PEAXEA
S_PUB32: [0002:000001C8], Flags: 00000000, DEVPKEY_Device_InstanceId
S_PUB32: [0001:0000242C], Flags: 00000002, WdfVersionUnbind
S_PUB32: [0002:00000098], Flags: 00000000, __guard_dispatch_icall_fptr
S_PUB32: [0001:00002A60], Flags: 00000000, ??_C@_13BLAPAIAM@?$AA?$AI@FNODOBFM@
S_PUB32: [0001:000029B0], Flags: 00000000, ??_C@_19CIJIHAKK@?$AAN?$AAU?$AAL?$AAL@FNODOBFM@
S_PUB32: [0001:000020B0], Flags: 00000002, FxStubDriverMiniportUnload
S_PUB32: [0002:00000268], Flags: 00000000, SDDL_DEVOBJ_SYS_ALL_ADM_ALL
S_PUB32: [0002:00000068], Flags: 00000000, __imp_MmGetSystemRoutineAddress
S_PUB32: [0006:000003E8], Flags: 00000000, __IMPORT_DESCRIPTOR_WDFLDR
S_PUB32: [0005:00001098], Flags: 00000002, BthPS3PSM_QueueInitialize
S_PUB32: [0005:00001A30], Flags: 00000000, ??_C@_1DC@DOCOAJH@?$AAW?$AAm?$AAi?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAn@NNGAKEGL@
S_PUB32: [0001:00002A00], Flags: 00000000, ??_C@_1CI@FDMCKIGH@?$AAW?$AAd?$AAf?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAG?$AAe?$AAt?$AAS?$AAt@FNODOBFM@
S_PUB32: [0003:000003C8], Flags: 00000000, FilterDeviceCollectionLock
S_PUB32: [0009:00000000], Flags: 00000000, __guard_iat_table
S_PUB32: [0001:00002500], Flags: 00000002, memcpy
S_PUB32: [0002:00000470], Flags: 00000000, ??_C@_0GB@LEIJHLCM@FxStubBindClasses?3?5ClientBindCl@
S_PUB32: [0002:000000B0], Flags: 00000000, __guard_xfg_table_dispatch_icall_fptr
S_PUB32: [0001:00002B50], Flags: 00000000, ??_C@_1CM@GJDHBPBB@?$AAB?$AAt?$AAh?$AAP?$AAS?$AA3?$AAP?$AAS?$AAM?$AAP?$AAa?$AAt?$AAc?$AAh?$AAE@FNODOBFM@
S_PUB32: [0003:000000D0], Flags: 00000000, WdfBindInfo
S_PUB32: [0003:00000160], Flags: 00000000, pfnWppGetVersion
S_PUB32: [0005:000018C0], Flags: 00000000, ??_C@_1DC@IKKCFJKC@?$AAW?$AAd?$AAf?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAO?$AAp?$AAe?$AAn?$AAR?$AAe@NNGAKEGL@
S_PUB32: [0005:00001B30], Flags: 00000000, ??_C@_1DK@EBHCCAHD@?$AA?2?$AAD?$AAo?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?2?$AAB?$AAt?$AAh@NNGAKEGL@
S_PUB32: [0001:00002440], Flags: 00000002, WdfVersionBindClass
S_PUB32: [0001:00002500], Flags: 00000002, memmove
S_PUB32: [0002:000001E0], Flags: 00000000, ??_C@_0P@MOOEKOCE@DEVICE_CONTEXT@
S_PUB32: [0002:00000050], Flags: 00000000, __imp_RtlCopyUnicodeString
S_PUB32: [0002:000001C0], Flags: 00000000, Nefarius_Bluetooth_PS_Filter_ServiceLevels
S_PUB32: [0002:00000450], Flags: 00000000, ??_C@_0BP@CNINNJGL@FxGetNextClassBindInfo?5failed?6@
S_PUB32: [0001:00001D64], Flags: 00000002, __GSHandlerCheckCommon
S_PUB32: [0001:00002AB0], Flags: 00000000, ??_C@_0CC@CNJHBGLN@BthPS3PSM_SidebandIoDeviceContr@FNODOBFM@
S_PUB32: [0009:00000000], Flags: 00000000, __guard_eh_cont_count
S_PUB32: [0001:00002490], Flags: 00000002, _guard_xfg_dispatch_icall_nop
S_PUB32: [0003:000003E0], Flags: 00000000, WPP_MAIN_CB
S_PUB32: [0002:00000278], Flags: 00000000, ??_C@_1BI@BJCKEEDJ@?$AAK?$AAm?$AAd?$AAf?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAy@
S_PUB32: [0001:00002900], Flags: 00000002, __memset_repmovs
S_PUB32: [0001:00002B10], Flags: 00000000, ??_C@_1DO@GDFNJCJF@?$AAW?$AAd?$AAf?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAR?$AAe?$AAt?$AAr?$AAi@FNODOBFM@
S_PUB32: [0002:00000028], Flags: 00000000, WDFLDR_NULL_THUNK_DATA
S_PUB32: [0001:00002420], Flags: 00000002, WdfVersionBind
S_PUB32: [0002:00000150], Flags: 00000000, StartEvent
S_PUB32: [0001:000002F4], Flags: 00000002, McTemplateK0szq_EtwWriteTransfer
S_PUB32: [0001:00001460], Flags: 00000002, BthPS3PSM_SidebandIoDeviceControl
S_PUB32: [0005:000017E0], Flags: 00000000, ??_C@_1EA@FIILJLCH@?$AAB?$AAt?$AAh?$AAP?$AAS?$AA3?$AAP?$AAS?$AAM?$AA_?$AAG?$AAe?$AAt?$AAP?$AAr@NNGAKEGL@
S_PUB32: [0005:000011A4], Flags: 00000002, BthPS3PSM_CreateControlDevice
S_PUB32: [0006:00000370], Flags: 00000000, ??_C@_0M@GIPELPKM@DriverEntry@PBOPGDP@
S_PUB32: [0002:000004E0], Flags: 00000000, ??_C@_0FO@DJFFLMAP@FxStubBindClasses?3?5VersionBindC@
S_PUB32: [0003:00000388], Flags: 00000000, WdfDriverMiniportUnloadOverride
S_PUB32: [0003:00000100], Flags: 00000000, ?__KMDF_CLASS_BIND_START@@3U_MARKER_TYPE@@A
S_PUB32: [0001:000029C0], Flags: 00000000, ??_C@_04HIBGFPH@NULL@FNODOBFM@
S_PUB32: [0005:00001AD0], Flags: 00000000, ??_C@_0BK@EHDOBPAP@BthPS3PSM_QueueInitialize@NNGAKEGL@
S_PUB32: [0003:00000010], Flags: 00000000, DriverControlGuid_Context
S_PUB32: [0003:00000140], Flags: 00000000, pfnWppQueryTraceInformation
S_PUB32: [0001:00001F5C], Flags: 00000002, FxDriverEntryWorker
S_PUB32: [0001:00002A30], Flags: 00000000, ??_C@_0CE@FJKLFPHL@BthPS3PSMEvtIoInternalDeviceCon@FNODOBFM@
S_PUB32: [0002:00000070], Flags: 00000000, __imp_EtwWriteTransfer
S_PUB32: [0005:00001890], Flags: 00000000, ??_C@_1CC@KGPOBCAK@?$AAW?$AAd?$AAf?$AAC?$AAo?$AAl?$AAl?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AAA?$AAd@NNGAKEGL@
S_PUB32: [0001:00000098], Flags: 00000002, BthPS3PSM_IsBthUsbDevice
S_PUB32: [0005:00000B80], Flags: 00000002, BthPS3PSM_EvtDriverContextCleanup
S_PUB32: [0001:00001DE0], Flags: 00000002, __cpu_features_init
S_PUB32: [0001:00001D44], Flags: 00000002, __GSHandlerCheck
S_PUB32: [0005:00001BD0], Flags: 00000000, ??_C@_1DI@CPHDGJPF@?$AAW?$AAd?$AAf?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe@NNGAKEGL@
S_PUB32: [0002:000000A0], Flags: 00000000, __guard_xfg_check_icall_fptr
S_PUB32: [0001:00000588], Flags: 00000002, McTemplateK0p_EtwWriteTransfer
S_PUB32: [0001:00000560], Flags: 00000002, McGenEventUnregister_EtwUnregister
S_PUB32: [0002:00000200], Flags: 00000000, WPP_9fd9018fc07b3383a12a2352710d4d14_Traceguids
S_PUB32: [0003:00000080], Flags: 00000000, __isa_info
S_PUB32: [0003:00000158], Flags: 00000000, pfnEtwRegisterClassicProvider
S_PUB32: [0001:000021B0], Flags: 00000002, ?FxStubBindClasses@@YAJPEAU_WDF_BIND_INFO@@@Z
S_PUB32: [0001:00002450], Flags: 00000002, WdfVersionUnbindClass
S_PUB32: [0001:00001C6C], Flags: 00000002, WPP_SF_Zd
S_PUB32: [0005:00001780], Flags: 00000000, ??_C@_1CM@GJDHBPBB@?$AAB?$AAt?$AAh?$AAP?$AAS?$AA3?$AAP?$AAS?$AAM?$AAP?$AAa?$AAt?$AAc?$AAh?$AAE@NNGAKEGL@
S_PUB32: [0005:00000AF0], Flags: 00000002, BthPS3PSM_EvtDeviceAdd
S_PUB32: [0001:000003D0], Flags: 00000002, WPP_SF_
S_PUB32: [0005:00001860], Flags: 00000000, ??_C@_1CG@CBDEOJGI@?$AAW?$AAd?$AAf?$AAW?$AAa?$AAi?$AAt?$AAL?$AAo?$AAc?$AAk?$AAA?$AAc?$AAq?$AAu@NNGAKEGL@
S_PUB32: [0005:00001704], Flags: 00000002, BthPS3PSM_DeleteControlDevice
S_PUB32: [0006:00000350], Flags: 00000000, ??_C@_1CA@EOGPCDBL@?$AAW?$AAd?$AAf?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe@PBOPGDP@
S_PUB32: [0003:00000150], Flags: 00000000, pfnEtwUnregister
S_PUB32: [0002:00000008], Flags: 00000000, __imp_WdfVersionUnbind
S_PUB32: [0002:00000090], Flags: 00000000, __guard_check_icall_fptr
S_PUB32: [0002:00000160], Flags: 00000000, UnloadEvent
S_PUB32: [0003:00000170], Flags: 00000000, ControlDevice
S_PUB32: [0002:00000018], Flags: 00000000, __imp_WdfVersionBind
S_PUB32: [0002:000002B8], Flags: 00000000, GUID_WDF_LOADER_INTERFACE_DRIVER_ENTRY_FAILURE
S_PUB32: [0001:000001F8], Flags: 00000002, McGenEventWrite_EtwWriteTransfer
S_PUB32: [0001:000009A0], Flags: 00000002, UrbSelectConfigurationCompleted
S_PUB32: [0006:00000380], Flags: 00000000, ??_C@_1CI@GNHEKIIO@?$AAW?$AAd?$AAf?$AAC?$AAo?$AAl?$AAl?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AAC?$AAr@PBOPGDP@
S_PUB32: [0003:00000000], Flags: 00000000, WPP_GLOBAL_Control
S_PUB32: [0001:000003F8], Flags: 00000002, WPP_SF_D
S_PUB32: [0001:000003F8], Flags: 00000002, WPP_SF_d
S_PUB32: [0001:000011D0], Flags: 00000002, BthPS3PSM_EvtSaveConfigToRegistry
S_PUB32: [0001:00002BB0], Flags: 00000000, ??_C@_0CC@NJFPLIOE@BthPS3PSM_EvtSaveConfigToRegist@FNODOBFM@
S_PUB32: [0001:000024E0], Flags: 00000002, _guard_dispatch_icall
S_PUB32: [0002:00000078], Flags: 00000000, __imp_RtlCompareUnicodeString
S_PUB32: [0001:0000232C], Flags: 00000002, ?FxStubIsClassBound@@YAEXZ
S_PUB32: [0001:000024B0], Flags: 00000002, __security_check_cookie
S_PUB32: [0002:00000170], Flags: 00000000, FailedWithNTStatus
S_PUB32: [0003:00000420], Flags: 00000000, Nefarius_Bluetooth_PS_Filter_ServiceEnableBits
S_PUB32: [0006:000003D4], Flags: 00000000, __IMPORT_DESCRIPTOR_ntoskrnl
S_PUB32: [0001:00000CC0], Flags: 00000002, BthPS3PSMEvtIoInternalDeviceControl
S_PUB32: [0005:00001950], Flags: 00000000, ??_C@_1CO@LBBKDAKB@?$AAW?$AAd?$AAf?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AAQ?$AAu?$AAe?$AAr@NNGAKEGL@
S_PUB32: [0002:00000140], Flags: 00000000, DriverControlGuid
S_PUB32: [0003:00000390], Flags: 00000000, typeWDF_IFR_HEADER
S_PUB32: [0001:000005D8], Flags: 00000002, McTemplateK0pq_EtwWriteTransfer
S_PUB32: [0001:00000670], Flags: 00000002, McTemplateK0_EtwWriteTransfer
S_PUB32: [0005:00001C10], Flags: 00000000, ??_C@_1CC@ELLNLDEE@?$AAW?$AAd?$AAf?$AAI?$AAo?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAC?$AAr?$AAe?$AAa?$AAt@NNGAKEGL@
S_PUB32: [0009:00000015], Flags: 00000000, __guard_fids_count
S_PUB32: [0005:00001BB0], Flags: 00000000, ??_C@_0BO@BJENCBEH@BthPS3PSM_CreateControlDevice@NNGAKEGL@
S_PUB32: [0005:00000C18], Flags: 00000002, WppCleanupKm
S_PUB32: [0002:00000030], Flags: 00000000, __imp_EtwUnregister
S_PUB32: [0002:000000C0], Flags: 00000000, __guard_fids_table
S_PUB32: [0005:000019F0], Flags: 00000000, ??_C@_1BK@DHLDGJM@?$AAP?$AAs?$AAG?$AAe?$AAt?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn@NNGAKEGL@
S_PUB32: [0002:00000540], Flags: 00000000, _load_config_used
S_PUB32: [0001:000020C0], Flags: 00000002, FxStubDriverUnload
S_PUB32: [0002:000001A0], Flags: 00000000, FailedToFindBulkInPipe
S_PUB32: [0005:00001930], Flags: 00000000, ??_C@_1CA@FIPPNLPG@?$AAW?$AAd?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe@NNGAKEGL@
S_PUB32: [0002:000001B0], Flags: 00000000, Nefarius_Bluetooth_PS_Filter_ServiceKeywords
S_PUB32: [0002:000002D0], Flags: 00000000, ??_C@_0KH@DJLKAFDB@FxStubInitTypes?3?5invalid?5driver@
S_PUB32: [0003:00000110], Flags: 00000000, ?__KMDF_CLASS_BIND_END@@3PEAXEA
S_PUB32: [0001:00002426], Flags: 00000002, WdfLdrQueryInterface
S_PUB32: [0005:00000000], Flags: 00000002, BthPS3PSM_CreateDevice
S_PUB32: [0001:00001DD0], Flags: 00000002, _guard_check_icall_nop
S_PUB32: [0002:00000038], Flags: 00000000, __imp_MmMapLockedPagesSpecifyCache
S_PUB32: [0009:00000000], Flags: 00000000, __guard_iat_count
S_PUB32: [0001:00002AE0], Flags: 00000000, ??_C@_1CE@OPEAHOPL@?$AAW?$AAd?$AAf?$AAW?$AAo?$AAr?$AAk?$AAI?$AAt?$AAe?$AAm?$AAC?$AAr?$AAe?$AAa@FNODOBFM@
S_PUB32: [0002:00000130], Flags: 00000000, WPP_ca66b9c097d737763daf3296492866aa_Traceguids
S_PUB32: [0002:00000220], Flags: 00000000, WPP_03fb1cb41c8130e950db4ecb4f47594e_Traceguids
S_PUB32: [0005:00000D1C], Flags: 00000002, WppLoadTracingSupport
S_PUB32: [0002:00000060], Flags: 00000000, __imp_IoWMIRegistrationControl
S_PUB32: [0001:00001F00], Flags: 00000002, ?FxStubDriverUnloadCommon@@YAXXZ
S_PUB32: [0003:00000058], Flags: 00000000, _WDF_DEVICE_CONTEXT_TYPE_INFO
S_PUB32: [0002:000003A0], Flags: 00000000, ??_C@_0KL@EAFAJNMK@FxStubBindClasses?3?5invalid?5driv@
S_PUB32: [0005:00001B70], Flags: 00000000, ??_C@_1DK@MFJPDFKK@?$AAW?$AAd?$AAf?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAD?$AAe?$AAv?$AAi?$AAc@NNGAKEGL@
S_PUB32: [0003:00000120], Flags: 00000000, ?__KMDF_TYPE_INIT_START@@3U_MARKER_TYPE@@A
S_PUB32: [0005:000008C0], Flags: 00000002, BthPS3PSM_EvtDeviceContextCleanup
S_PUB32: [0001:00001F30], Flags: 00000002, FxDriverEntry
S_PUB32: [0002:000000B8], Flags: 00000000, __castguard_check_failure_os_handled_fptr
S_PUB32: [0003:000000C0], Flags: 00000000, __security_cookie
S_PUB32: [0001:00000BFC], Flags: 00000002, WPP_SF_dDDq
S_PUB32: [0006:000003B0], Flags: 00000000, ??_C@_1CE@LCNBGFGJ@?$AAW?$AAd?$AAf?$AAW?$AAa?$AAi?$AAt?$AAL?$AAo?$AAc?$AAk?$AAC?$AAr?$AAe?$AAa@PBOPGDP@
S_PUB32: [0009:00000000], Flags: 00000000, __guard_eh_cont_table
S_PUB32: [0005:00001A10], Flags: 00000000, ??_C@_1CA@OFIBBPKJ@?$AAW?$AAm?$AAi?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@NNGAKEGL@
S_PUB32: [0002:00000230], Flags: 00000000, SDDL_DEVOBJ_SYS_ALL_ADM_ALL_buffer
S_PUB32: [0001:00000440], Flags: 00000002, McGenControlCallbackV2
S_PUB32: [0002:00000058], Flags: 00000000, __imp_DbgPrintEx
S_PUB32: [0001:00000548], Flags: 00000002, McGenEventRegister_EtwRegister
S_PUB32: [0001:00000C64], Flags: 00000002, WPP_SF_qD
S_PUB32: [0002:00000010], Flags: 00000000, __imp_WdfLdrQueryInterface
S_PUB32: [0002:00000210], Flags: 00000000, WPP_324ed36d69493aa1d5813e2dc9652ec2_Traceguids
S_PUB32: [0006:0000031C], Flags: 00000002, __security_init_cookie
S_PUB32: [0001:0000118C], Flags: 00000002, WPP_SF_q
S_PUB32: [0002:00000040], Flags: 00000000, __imp_EtwRegister
S_PUB32: [0003:00000168], Flags: 00000000, WPPTraceSuite
S_PUB32: [0003:000003A8], Flags: 00000000, WdfFunctions_01015
S_PUB32: [0005:00001900], Flags: 00000000, ??_C@_1CM@OBJIKGFP@?$AAW?$AAd?$AAf?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AAQ?$AAu?$AAe?$AAr@NNGAKEGL@
S_PUB32: [0001:00002A70], Flags: 00000000, ??_C@_1DM@BEADGEFP@?$AAW?$AAd?$AAf?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAR?$AAe?$AAt?$AAr?$AAi@FNODOBFM@
S_PUB32: [0005:00001A70], Flags: 00000000, ??_C@_1DG@PFOPAIND@?$AAE?$AAt?$AAw?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAC?$AAl?$AAa?$AAs@NNGAKEGL@
S_PUB32: [0002:00000290], Flags: 00000000, ??_C@_0CI@FGGECOFJ@DriverEntry?5failed?50x?$CFx?5for?5dri@
S_PUB32: [0001:00001EA0], Flags: 00000002, __report_gsfailure
S_PUB32: [0005:00001840], Flags: 00000000, ??_C@_1CA@PMIKJIDK@?$AAW?$AAd?$AAf?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe@NNGAKEGL@
S_PUB32: [0002:00000080], Flags: 00000000, __imp_KeGetCurrentIrql
S_PUB32: [0001:00000000], Flags: 00000002, BthPS3PSM_GetPropertyInstanceId
S_PUB32: [0001:000029D0], Flags: 00000000, ??_C@_17DMBMDHNL@?$AAU?$AAS?$AAB@FNODOBFM@
S_PUB32: [0003:000003D0], Flags: 00000000, FilterDeviceCollection
S_PUB32: [0002:00000000], Flags: 00000000, __imp_WdfVersionBindClass
S_PUB32: [0002:00000088], Flags: 00000000, ntoskrnl_NULL_THUNK_DATA
S_PUB32: [0005:000019C0], Flags: 00000000, ??_C@_0CC@MJJIGILC@BthPS3PSM_EvtDeviceContextClean@NNGAKEGL@
S_PUB32: [0006:00000000], Flags: 00000002, DriverEntry
S_PUB32: [0002:00000120], Flags: 00000000, WPP_ThisDir_CTLGUID_BthPS3PSMTraceGuid
S_PUB32: [0005:000017B0], Flags: 00000000, ??_C@_1CC@MFJKLKFF@?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAi?$AAc?$AAL?$AAi?$AAn?$AAk?$AAN?$AAa?$AAm@NNGAKEGL@
S_PUB32: [0009:00000000], Flags: 00000000, __guard_longjmp_table
S_PUB32: [0003:00000148], Flags: 00000000, pfnWppTraceMessage
S_PUB32: [0002:00000378], Flags: 00000000, ??_C@_0CH@JKHNJGFB@FxGetNextObjectContextTypeInfo?5@
S_PUB32: [0005:00000C90], Flags: 00000002, WppInitKm
S_PUB32: [0001:00002980], Flags: 00000002, __memset_query
S_PUB32: [0001:00001D04], Flags: 00000002, WPP_SF_c
S_PUB32: [0001:000027C0], Flags: 00000002, memset
S_PUB32: [0006:000003FC], Flags: 00000000, __NULL_IMPORT_DESCRIPTOR
S_PUB32: [0005:00001AF0], Flags: 00000000, ??_C@_1DC@DOEJJIBB@?$AA?2?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?2?$AAB?$AAt?$AAh?$AAP?$AAS?$AA3?$AAP@NNGAKEGL@
S_PUB32: [0005:00001AB0], Flags: 00000000, ??_C@_1BM@CJMKDOJH@?$AAE?$AAt?$AAw?$AAU?$AAn?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr@NNGAKEGL@


*** TYPES

0x1000 : Length = 54, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'NotificationEvent'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'SynchronizationEvent'

0x1001 : Length = 46, Leaf = 0x1507 LF_ENUM
	# members = 2,  type = T_INT4(0074) field list type 0x1000
	enum name = _EVENT_TYPE, UDT(0x00001001)

0x1002 : Length = 142, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WppTraceDisabledSuite'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WppTraceWin2K'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WppTraceWinXP'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WppTraceTraceLH'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WppTraceServer08'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'WppTraceMaxSuite'

0x1003 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x1002
	enum name = _WPP_TRACE_API_SUITE, UDT(0x00001003)

0x1004 : Length = 58, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WPP_CTL_BthPS3PSMTraceGuid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WPP_LAST_CTL'

0x1005 : Length = 50, Leaf = 0x1507 LF_ENUM
	# members = 2,  type = T_INT4(0074) field list type 0x1004
	enum name = WPP_CTL_NAMES, UDT(0x00001005)

0x1006 : Length = 290, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WPP_BLOCK_START_BthPS3PSMTraceGuid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WPP_BIT_MYDRIVER_ALL_INFO'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WPP_BIT_TRACE_DRIVER'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WPP_BIT_TRACE_DEVICE'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WPP_BIT_TRACE_QUEUE'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'WPP_BIT_TRACE_FILTER'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'WPP_BIT_TRACE_DIAG'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'WPP_BIT_TRACE_SIDEBAND'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'WPP_BLOCK_END_BthPS3PSMTraceGuid'

0x1007 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 9,  type = T_INT4(0074) field list type 0x1006
	enum name = WPP_DEFINE_BIT_NAMES, UDT(0x00001007)

0x1008 : Length = 22, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'WPP_FLAG_LEN'

0x1009 : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 1,  type = T_INT4(0074) field list type 0x1008
	enum name = _WPP_FLAG_LEN_ENUM, UDT(0x00001009)

0x100a : Length = 26, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 43, name = 'WPP_TRACE_OPTIONS'

0x100b : Length = 34, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'WPP_MAX_FLAG_LEN_CHECK'

0x100c : Length = 90, Leaf = 0x1507 LF_ENUM
	# members = 1,  type = T_INT4(0074) field list type 0x100a
	enum name = <unnamed-enum-WPP_TRACE_OPTIONS>, UDT(0x0000100c)

0x100d : Length = 70, Leaf = 0x1507 LF_ENUM
	# members = 1,  type = T_INT4(0074) field list type 0x100b
	enum name = _WPP_FLAG_LEN_ENUM_MAX, UDT(0x0000100d)

0x100e : Length = 6, Leaf = 0x1201 LF_ARGLIST argument count = 0

0x100f : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 0, Arg list type = 0x100e

0x1010 : Length = 10, Leaf = 0x1002 LF_POINTER
	const Pointer (__ptr64), Size: 8
	Element type : 0x100F

0x1011 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1010

0x1012 : Length = 70, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'ResultNegative'
	list[1] = LF_ENUMERATE, public, value = 0, name = 'ResultZero'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'ResultPositive'

0x1013 : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 3,  type = T_INT4(0074) field list type 0x1012
	enum name = _INTERLOCKED_RESULT, UDT(0x00001013)

0x1014 : Length = 54, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfFalse'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfTrue'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfUseDefault'

0x1015 : Length = 54, Leaf = 0x1507 LF_ENUM
	# members = 3,  type = T_INT4(0074) field list type 0x1014
	enum name = _WDF_TRI_STATE, UDT(0x00001015)

0x1016 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_DRIVER_GLOBALS, unique name = .?AU_WDF_DRIVER_GLOBALS@@, UDT(0x000011ff)

0x1017 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1016

0x1018 : Length = 70, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, FORWARD REF, Size = 0	,class name = WPP_PROJECT_CONTROL_BLOCK, unique name = .?ATWPP_PROJECT_CONTROL_BLOCK@@, UDT(0x00001173)

0x1019 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x1018
	Index type = T_UQUAD(0023)
	length = 64
	Name = 

0x101a : Length = 20802, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfChildListCreateTableIndex'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfChildListGetDeviceTableIndex'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfChildListRetrievePdoTableIndex'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfChildListRetrieveAddressDescriptionTableIndex'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WdfChildListBeginScanTableIndex'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'WdfChildListEndScanTableIndex'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'WdfChildListBeginIterationTableIndex'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'WdfChildListRetrieveNextDeviceTableIndex'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'WdfChildListEndIterationTableIndex'
	list[9] = LF_ENUMERATE, public, value = 9, name = 'WdfChildListAddOrUpdateChildDescriptionAsPresentTableIndex'
	list[10] = LF_ENUMERATE, public, value = 10, name = 'WdfChildListUpdateChildDescriptionAsMissingTableIndex'
	list[11] = LF_ENUMERATE, public, value = 11, name = 'WdfChildListUpdateAllChildDescriptionsAsPresentTableIndex'
	list[12] = LF_ENUMERATE, public, value = 12, name = 'WdfChildListRequestChildEjectTableIndex'
	list[13] = LF_ENUMERATE, public, value = 13, name = 'WdfCollectionCreateTableIndex'
	list[14] = LF_ENUMERATE, public, value = 14, name = 'WdfCollectionGetCountTableIndex'
	list[15] = LF_ENUMERATE, public, value = 15, name = 'WdfCollectionAddTableIndex'
	list[16] = LF_ENUMERATE, public, value = 16, name = 'WdfCollectionRemoveTableIndex'
	list[17] = LF_ENUMERATE, public, value = 17, name = 'WdfCollectionRemoveItemTableIndex'
	list[18] = LF_ENUMERATE, public, value = 18, name = 'WdfCollectionGetItemTableIndex'
	list[19] = LF_ENUMERATE, public, value = 19, name = 'WdfCollectionGetFirstItemTableIndex'
	list[20] = LF_ENUMERATE, public, value = 20, name = 'WdfCollectionGetLastItemTableIndex'
	list[21] = LF_ENUMERATE, public, value = 21, name = 'WdfCommonBufferCreateTableIndex'
	list[22] = LF_ENUMERATE, public, value = 22, name = 'WdfCommonBufferGetAlignedVirtualAddressTableIndex'
	list[23] = LF_ENUMERATE, public, value = 23, name = 'WdfCommonBufferGetAlignedLogicalAddressTableIndex'
	list[24] = LF_ENUMERATE, public, value = 24, name = 'WdfCommonBufferGetLengthTableIndex'
	list[25] = LF_ENUMERATE, public, value = 25, name = 'WdfControlDeviceInitAllocateTableIndex'
	list[26] = LF_ENUMERATE, public, value = 26, name = 'WdfControlDeviceInitSetShutdownNotificationTableIndex'
	list[27] = LF_ENUMERATE, public, value = 27, name = 'WdfControlFinishInitializingTableIndex'
	list[28] = LF_ENUMERATE, public, value = 28, name = 'WdfDeviceGetDeviceStateTableIndex'
	list[29] = LF_ENUMERATE, public, value = 29, name = 'WdfDeviceSetDeviceStateTableIndex'
	list[30] = LF_ENUMERATE, public, value = 30, name = 'WdfWdmDeviceGetWdfDeviceHandleTableIndex'
	list[31] = LF_ENUMERATE, public, value = 31, name = 'WdfDeviceWdmGetDeviceObjectTableIndex'
	list[32] = LF_ENUMERATE, public, value = 32, name = 'WdfDeviceWdmGetAttachedDeviceTableIndex'
	list[33] = LF_ENUMERATE, public, value = 33, name = 'WdfDeviceWdmGetPhysicalDeviceTableIndex'
	list[34] = LF_ENUMERATE, public, value = 34, name = 'WdfDeviceWdmDispatchPreprocessedIrpTableIndex'
	list[35] = LF_ENUMERATE, public, value = 35, name = 'WdfDeviceAddDependentUsageDeviceObjectTableIndex'
	list[36] = LF_ENUMERATE, public, value = 36, name = 'WdfDeviceAddRemovalRelationsPhysicalDeviceTableIndex'
	list[37] = LF_ENUMERATE, public, value = 37, name = 'WdfDeviceRemoveRemovalRelationsPhysicalDeviceTableIndex'
	list[38] = LF_ENUMERATE, public, value = 38, name = 'WdfDeviceClearRemovalRelationsDevicesTableIndex'
	list[39] = LF_ENUMERATE, public, value = 39, name = 'WdfDeviceGetDriverTableIndex'
	list[40] = LF_ENUMERATE, public, value = 40, name = 'WdfDeviceRetrieveDeviceNameTableIndex'
	list[41] = LF_ENUMERATE, public, value = 41, name = 'WdfDeviceAssignMofResourceNameTableIndex'
	list[42] = LF_ENUMERATE, public, value = 42, name = 'WdfDeviceGetIoTargetTableIndex'
	list[43] = LF_ENUMERATE, public, value = 43, name = 'WdfDeviceGetDevicePnpStateTableIndex'
	list[44] = LF_ENUMERATE, public, value = 44, name = 'WdfDeviceGetDevicePowerStateTableIndex'
	list[45] = LF_ENUMERATE, public, value = 45, name = 'WdfDeviceGetDevicePowerPolicyStateTableIndex'
	list[46] = LF_ENUMERATE, public, value = 46, name = 'WdfDeviceAssignS0IdleSettingsTableIndex'
	list[47] = LF_ENUMERATE, public, value = 47, name = 'WdfDeviceAssignSxWakeSettingsTableIndex'
	list[48] = LF_ENUMERATE, public, value = 48, name = 'WdfDeviceOpenRegistryKeyTableIndex'
	list[49] = LF_ENUMERATE, public, value = 49, name = 'WdfDeviceSetSpecialFileSupportTableIndex'
	list[50] = LF_ENUMERATE, public, value = 50, name = 'WdfDeviceSetCharacteristicsTableIndex'
	list[51] = LF_ENUMERATE, public, value = 51, name = 'WdfDeviceGetCharacteristicsTableIndex'
	list[52] = LF_ENUMERATE, public, value = 52, name = 'WdfDeviceGetAlignmentRequirementTableIndex'
	list[53] = LF_ENUMERATE, public, value = 53, name = 'WdfDeviceSetAlignmentRequirementTableIndex'
	list[54] = LF_ENUMERATE, public, value = 54, name = 'WdfDeviceInitFreeTableIndex'
	list[55] = LF_ENUMERATE, public, value = 55, name = 'WdfDeviceInitSetPnpPowerEventCallbacksTableIndex'
	list[56] = LF_ENUMERATE, public, value = 56, name = 'WdfDeviceInitSetPowerPolicyEventCallbacksTableIndex'
	list[57] = LF_ENUMERATE, public, value = 57, name = 'WdfDeviceInitSetPowerPolicyOwnershipTableIndex'
	list[58] = LF_ENUMERATE, public, value = 58, name = 'WdfDeviceInitRegisterPnpStateChangeCallbackTableIndex'
	list[59] = LF_ENUMERATE, public, value = 59, name = 'WdfDeviceInitRegisterPowerStateChangeCallbackTableIndex'
	list[60] = LF_ENUMERATE, public, value = 60, name = 'WdfDeviceInitRegisterPowerPolicyStateChangeCallbackTableIndex'
	list[61] = LF_ENUMERATE, public, value = 61, name = 'WdfDeviceInitSetIoTypeTableIndex'
	list[62] = LF_ENUMERATE, public, value = 62, name = 'WdfDeviceInitSetExclusiveTableIndex'
	list[63] = LF_ENUMERATE, public, value = 63, name = 'WdfDeviceInitSetPowerNotPageableTableIndex'
	list[64] = LF_ENUMERATE, public, value = 64, name = 'WdfDeviceInitSetPowerPageableTableIndex'
	list[65] = LF_ENUMERATE, public, value = 65, name = 'WdfDeviceInitSetPowerInrushTableIndex'
	list[66] = LF_ENUMERATE, public, value = 66, name = 'WdfDeviceInitSetDeviceTypeTableIndex'
	list[67] = LF_ENUMERATE, public, value = 67, name = 'WdfDeviceInitAssignNameTableIndex'
	list[68] = LF_ENUMERATE, public, value = 68, name = 'WdfDeviceInitAssignSDDLStringTableIndex'
	list[69] = LF_ENUMERATE, public, value = 69, name = 'WdfDeviceInitSetDeviceClassTableIndex'
	list[70] = LF_ENUMERATE, public, value = 70, name = 'WdfDeviceInitSetCharacteristicsTableIndex'
	list[71] = LF_ENUMERATE, public, value = 71, name = 'WdfDeviceInitSetFileObjectConfigTableIndex'
	list[72] = LF_ENUMERATE, public, value = 72, name = 'WdfDeviceInitSetRequestAttributesTableIndex'
	list[73] = LF_ENUMERATE, public, value = 73, name = 'WdfDeviceInitAssignWdmIrpPreprocessCallbackTableIndex'
	list[74] = LF_ENUMERATE, public, value = 74, name = 'WdfDeviceInitSetIoInCallerContextCallbackTableIndex'
	list[75] = LF_ENUMERATE, public, value = 75, name = 'WdfDeviceCreateTableIndex'
	list[76] = LF_ENUMERATE, public, value = 76, name = 'WdfDeviceSetStaticStopRemoveTableIndex'
	list[77] = LF_ENUMERATE, public, value = 77, name = 'WdfDeviceCreateDeviceInterfaceTableIndex'
	list[78] = LF_ENUMERATE, public, value = 78, name = 'WdfDeviceSetDeviceInterfaceStateTableIndex'
	list[79] = LF_ENUMERATE, public, value = 79, name = 'WdfDeviceRetrieveDeviceInterfaceStringTableIndex'
	list[80] = LF_ENUMERATE, public, value = 80, name = 'WdfDeviceCreateSymbolicLinkTableIndex'
	list[81] = LF_ENUMERATE, public, value = 81, name = 'WdfDeviceQueryPropertyTableIndex'
	list[82] = LF_ENUMERATE, public, value = 82, name = 'WdfDeviceAllocAndQueryPropertyTableIndex'
	list[83] = LF_ENUMERATE, public, value = 83, name = 'WdfDeviceSetPnpCapabilitiesTableIndex'
	list[84] = LF_ENUMERATE, public, value = 84, name = 'WdfDeviceSetPowerCapabilitiesTableIndex'
	list[85] = LF_ENUMERATE, public, value = 85, name = 'WdfDeviceSetBusInformationForChildrenTableIndex'
	list[86] = LF_ENUMERATE, public, value = 86, name = 'WdfDeviceIndicateWakeStatusTableIndex'
	list[87] = LF_ENUMERATE, public, value = 87, name = 'WdfDeviceSetFailedTableIndex'
	list[88] = LF_ENUMERATE, public, value = 88, name = 'WdfDeviceStopIdleNoTrackTableIndex'
	list[89] = LF_ENUMERATE, public, value = 89, name = 'WdfDeviceResumeIdleNoTrackTableIndex'
	list[90] = LF_ENUMERATE, public, value = 90, name = 'WdfDeviceGetFileObjectTableIndex'
	list[91] = LF_ENUMERATE, public, value = 91, name = 'WdfDeviceEnqueueRequestTableIndex'
	list[92] = LF_ENUMERATE, public, value = 92, name = 'WdfDeviceGetDefaultQueueTableIndex'
	list[93] = LF_ENUMERATE, public, value = 93, name = 'WdfDeviceConfigureRequestDispatchingTableIndex'
	list[94] = LF_ENUMERATE, public, value = 94, name = 'WdfDmaEnablerCreateTableIndex'
	list[95] = LF_ENUMERATE, public, value = 95, name = 'WdfDmaEnablerGetMaximumLengthTableIndex'
	list[96] = LF_ENUMERATE, public, value = 96, name = 'WdfDmaEnablerGetMaximumScatterGatherElementsTableIndex'
	list[97] = LF_ENUMERATE, public, value = 97, name = 'WdfDmaEnablerSetMaximumScatterGatherElementsTableIndex'
	list[98] = LF_ENUMERATE, public, value = 98, name = 'WdfDmaTransactionCreateTableIndex'
	list[99] = LF_ENUMERATE, public, value = 99, name = 'WdfDmaTransactionInitializeTableIndex'
	list[100] = LF_ENUMERATE, public, value = 100, name = 'WdfDmaTransactionInitializeUsingRequestTableIndex'
	list[101] = LF_ENUMERATE, public, value = 101, name = 'WdfDmaTransactionExecuteTableIndex'
	list[102] = LF_ENUMERATE, public, value = 102, name = 'WdfDmaTransactionReleaseTableIndex'
	list[103] = LF_ENUMERATE, public, value = 103, name = 'WdfDmaTransactionDmaCompletedTableIndex'
	list[104] = LF_ENUMERATE, public, value = 104, name = 'WdfDmaTransactionDmaCompletedWithLengthTableIndex'
	list[105] = LF_ENUMERATE, public, value = 105, name = 'WdfDmaTransactionDmaCompletedFinalTableIndex'
	list[106] = LF_ENUMERATE, public, value = 106, name = 'WdfDmaTransactionGetBytesTransferredTableIndex'
	list[107] = LF_ENUMERATE, public, value = 107, name = 'WdfDmaTransactionSetMaximumLengthTableIndex'
	list[108] = LF_ENUMERATE, public, value = 108, name = 'WdfDmaTransactionGetRequestTableIndex'
	list[109] = LF_ENUMERATE, public, value = 109, name = 'WdfDmaTransactionGetCurrentDmaTransferLengthTableIndex'
	list[110] = LF_ENUMERATE, public, value = 110, name = 'WdfDmaTransactionGetDeviceTableIndex'
	list[111] = LF_ENUMERATE, public, value = 111, name = 'WdfDpcCreateTableIndex'
	list[112] = LF_ENUMERATE, public, value = 112, name = 'WdfDpcEnqueueTableIndex'
	list[113] = LF_ENUMERATE, public, value = 113, name = 'WdfDpcCancelTableIndex'
	list[114] = LF_ENUMERATE, public, value = 114, name = 'WdfDpcGetParentObjectTableIndex'
	list[115] = LF_ENUMERATE, public, value = 115, name = 'WdfDpcWdmGetDpcTableIndex'
	list[116] = LF_ENUMERATE, public, value = 116, name = 'WdfDriverCreateTableIndex'
	list[117] = LF_ENUMERATE, public, value = 117, name = 'WdfDriverGetRegistryPathTableIndex'
	list[118] = LF_ENUMERATE, public, value = 118, name = 'WdfDriverWdmGetDriverObjectTableIndex'
	list[119] = LF_ENUMERATE, public, value = 119, name = 'WdfDriverOpenParametersRegistryKeyTableIndex'
	list[120] = LF_ENUMERATE, public, value = 120, name = 'WdfWdmDriverGetWdfDriverHandleTableIndex'
	list[121] = LF_ENUMERATE, public, value = 121, name = 'WdfDriverRegisterTraceInfoTableIndex'
	list[122] = LF_ENUMERATE, public, value = 122, name = 'WdfDriverRetrieveVersionStringTableIndex'
	list[123] = LF_ENUMERATE, public, value = 123, name = 'WdfDriverIsVersionAvailableTableIndex'
	list[124] = LF_ENUMERATE, public, value = 124, name = 'WdfFdoInitWdmGetPhysicalDeviceTableIndex'
	list[125] = LF_ENUMERATE, public, value = 125, name = 'WdfFdoInitOpenRegistryKeyTableIndex'
	list[126] = LF_ENUMERATE, public, value = 126, name = 'WdfFdoInitQueryPropertyTableIndex'
	list[127] = LF_ENUMERATE, public, value = 127, name = 'WdfFdoInitAllocAndQueryPropertyTableIndex'
	list[128] = LF_ENUMERATE, public, value = 128, name = 'WdfFdoInitSetEventCallbacksTableIndex'
	list[129] = LF_ENUMERATE, public, value = 129, name = 'WdfFdoInitSetFilterTableIndex'
	list[130] = LF_ENUMERATE, public, value = 130, name = 'WdfFdoInitSetDefaultChildListConfigTableIndex'
	list[131] = LF_ENUMERATE, public, value = 131, name = 'WdfFdoQueryForInterfaceTableIndex'
	list[132] = LF_ENUMERATE, public, value = 132, name = 'WdfFdoGetDefaultChildListTableIndex'
	list[133] = LF_ENUMERATE, public, value = 133, name = 'WdfFdoAddStaticChildTableIndex'
	list[134] = LF_ENUMERATE, public, value = 134, name = 'WdfFdoLockStaticChildListForIterationTableIndex'
	list[135] = LF_ENUMERATE, public, value = 135, name = 'WdfFdoRetrieveNextStaticChildTableIndex'
	list[136] = LF_ENUMERATE, public, value = 136, name = 'WdfFdoUnlockStaticChildListFromIterationTableIndex'
	list[137] = LF_ENUMERATE, public, value = 137, name = 'WdfFileObjectGetFileNameTableIndex'
	list[138] = LF_ENUMERATE, public, value = 138, name = 'WdfFileObjectGetFlagsTableIndex'
	list[139] = LF_ENUMERATE, public, value = 139, name = 'WdfFileObjectGetDeviceTableIndex'
	list[140] = LF_ENUMERATE, public, value = 140, name = 'WdfFileObjectWdmGetFileObjectTableIndex'
	list[141] = LF_ENUMERATE, public, value = 141, name = 'WdfInterruptCreateTableIndex'
	list[142] = LF_ENUMERATE, public, value = 142, name = 'WdfInterruptQueueDpcForIsrTableIndex'
	list[143] = LF_ENUMERATE, public, value = 143, name = 'WdfInterruptSynchronizeTableIndex'
	list[144] = LF_ENUMERATE, public, value = 144, name = 'WdfInterruptAcquireLockTableIndex'
	list[145] = LF_ENUMERATE, public, value = 145, name = 'WdfInterruptReleaseLockTableIndex'
	list[146] = LF_ENUMERATE, public, value = 146, name = 'WdfInterruptEnableTableIndex'
	list[147] = LF_ENUMERATE, public, value = 147, name = 'WdfInterruptDisableTableIndex'
	list[148] = LF_ENUMERATE, public, value = 148, name = 'WdfInterruptWdmGetInterruptTableIndex'
	list[149] = LF_ENUMERATE, public, value = 149, name = 'WdfInterruptGetInfoTableIndex'
	list[150] = LF_ENUMERATE, public, value = 150, name = 'WdfInterruptSetPolicyTableIndex'
	list[151] = LF_ENUMERATE, public, value = 151, name = 'WdfInterruptGetDeviceTableIndex'
	list[152] = LF_ENUMERATE, public, value = 152, name = 'WdfIoQueueCreateTableIndex'
	list[153] = LF_ENUMERATE, public, value = 153, name = 'WdfIoQueueGetStateTableIndex'
	list[154] = LF_ENUMERATE, public, value = 154, name = 'WdfIoQueueStartTableIndex'
	list[155] = LF_ENUMERATE, public, value = 155, name = 'WdfIoQueueStopTableIndex'
	list[156] = LF_ENUMERATE, public, value = 156, name = 'WdfIoQueueStopSynchronouslyTableIndex'
	list[157] = LF_ENUMERATE, public, value = 157, name = 'WdfIoQueueGetDeviceTableIndex'
	list[158] = LF_ENUMERATE, public, value = 158, name = 'WdfIoQueueRetrieveNextRequestTableIndex'
	list[159] = LF_ENUMERATE, public, value = 159, name = 'WdfIoQueueRetrieveRequestByFileObjectTableIndex'
	list[160] = LF_ENUMERATE, public, value = 160, name = 'WdfIoQueueFindRequestTableIndex'
	list[161] = LF_ENUMERATE, public, value = 161, name = 'WdfIoQueueRetrieveFoundRequestTableIndex'
	list[162] = LF_ENUMERATE, public, value = 162, name = 'WdfIoQueueDrainSynchronouslyTableIndex'
	list[163] = LF_ENUMERATE, public, value = 163, name = 'WdfIoQueueDrainTableIndex'
	list[164] = LF_ENUMERATE, public, value = 164, name = 'WdfIoQueuePurgeSynchronouslyTableIndex'
	list[165] = LF_ENUMERATE, public, value = 165, name = 'WdfIoQueuePurgeTableIndex'
	list[166] = LF_ENUMERATE, public, value = 166, name = 'WdfIoQueueReadyNotifyTableIndex'
	list[167] = LF_ENUMERATE, public, value = 167, name = 'WdfIoTargetCreateTableIndex'
	list[168] = LF_ENUMERATE, public, value = 168, name = 'WdfIoTargetOpenTableIndex'
	list[169] = LF_ENUMERATE, public, value = 169, name = 'WdfIoTargetCloseForQueryRemoveTableIndex'
	list[170] = LF_ENUMERATE, public, value = 170, name = 'WdfIoTargetCloseTableIndex'
	list[171] = LF_ENUMERATE, public, value = 171, name = 'WdfIoTargetStartTableIndex'
	list[172] = LF_ENUMERATE, public, value = 172, name = 'WdfIoTargetStopTableIndex'
	list[173] = LF_ENUMERATE, public, value = 173, name = 'WdfIoTargetGetStateTableIndex'
	list[174] = LF_ENUMERATE, public, value = 174, name = 'WdfIoTargetGetDeviceTableIndex'
	list[175] = LF_ENUMERATE, public, value = 175, name = 'WdfIoTargetQueryTargetPropertyTableIndex'
	list[176] = LF_ENUMERATE, public, value = 176, name = 'WdfIoTargetAllocAndQueryTargetPropertyTableIndex'
	list[177] = LF_ENUMERATE, public, value = 177, name = 'WdfIoTargetQueryForInterfaceTableIndex'
	list[178] = LF_ENUMERATE, public, value = 178, name = 'WdfIoTargetWdmGetTargetDeviceObjectTableIndex'
	list[179] = LF_ENUMERATE, public, value = 179, name = 'WdfIoTargetWdmGetTargetPhysicalDeviceTableIndex'
	list[180] = LF_ENUMERATE, public, value = 180, name = 'WdfIoTargetWdmGetTargetFileObjectTableIndex'
	list[181] = LF_ENUMERATE, public, value = 181, name = 'WdfIoTargetWdmGetTargetFileHandleTableIndex'
	list[182] = LF_ENUMERATE, public, value = 182, name = 'WdfIoTargetSendReadSynchronouslyTableIndex'
	list[183] = LF_ENUMERATE, public, value = 183, name = 'WdfIoTargetFormatRequestForReadTableIndex'
	list[184] = LF_ENUMERATE, public, value = 184, name = 'WdfIoTargetSendWriteSynchronouslyTableIndex'
	list[185] = LF_ENUMERATE, public, value = 185, name = 'WdfIoTargetFormatRequestForWriteTableIndex'
	list[186] = LF_ENUMERATE, public, value = 186, name = 'WdfIoTargetSendIoctlSynchronouslyTableIndex'
	list[187] = LF_ENUMERATE, public, value = 187, name = 'WdfIoTargetFormatRequestForIoctlTableIndex'
	list[188] = LF_ENUMERATE, public, value = 188, name = 'WdfIoTargetSendInternalIoctlSynchronouslyTableIndex'
	list[189] = LF_ENUMERATE, public, value = 189, name = 'WdfIoTargetFormatRequestForInternalIoctlTableIndex'
	list[190] = LF_ENUMERATE, public, value = 190, name = 'WdfIoTargetSendInternalIoctlOthersSynchronouslyTableIndex'
	list[191] = LF_ENUMERATE, public, value = 191, name = 'WdfIoTargetFormatRequestForInternalIoctlOthersTableIndex'
	list[192] = LF_ENUMERATE, public, value = 192, name = 'WdfMemoryCreateTableIndex'
	list[193] = LF_ENUMERATE, public, value = 193, name = 'WdfMemoryCreatePreallocatedTableIndex'
	list[194] = LF_ENUMERATE, public, value = 194, name = 'WdfMemoryGetBufferTableIndex'
	list[195] = LF_ENUMERATE, public, value = 195, name = 'WdfMemoryAssignBufferTableIndex'
	list[196] = LF_ENUMERATE, public, value = 196, name = 'WdfMemoryCopyToBufferTableIndex'
	list[197] = LF_ENUMERATE, public, value = 197, name = 'WdfMemoryCopyFromBufferTableIndex'
	list[198] = LF_ENUMERATE, public, value = 198, name = 'WdfLookasideListCreateTableIndex'
	list[199] = LF_ENUMERATE, public, value = 199, name = 'WdfMemoryCreateFromLookasideTableIndex'
	list[200] = LF_ENUMERATE, public, value = 200, name = 'WdfDeviceMiniportCreateTableIndex'
	list[201] = LF_ENUMERATE, public, value = 201, name = 'WdfDriverMiniportUnloadTableIndex'
	list[202] = LF_ENUMERATE, public, value = 202, name = 'WdfObjectGetTypedContextWorkerTableIndex'
	list[203] = LF_ENUMERATE, public, value = 203, name = 'WdfObjectAllocateContextTableIndex'
	list[204] = LF_ENUMERATE, public, value = 204, name = 'WdfObjectContextGetObjectTableIndex'
	list[205] = LF_ENUMERATE, public, value = 205, name = 'WdfObjectReferenceActualTableIndex'
	list[206] = LF_ENUMERATE, public, value = 206, name = 'WdfObjectDereferenceActualTableIndex'
	list[207] = LF_ENUMERATE, public, value = 207, name = 'WdfObjectCreateTableIndex'
	list[208] = LF_ENUMERATE, public, value = 208, name = 'WdfObjectDeleteTableIndex'
	list[209] = LF_ENUMERATE, public, value = 209, name = 'WdfObjectQueryTableIndex'
	list[210] = LF_ENUMERATE, public, value = 210, name = 'WdfPdoInitAllocateTableIndex'
	list[211] = LF_ENUMERATE, public, value = 211, name = 'WdfPdoInitSetEventCallbacksTableIndex'
	list[212] = LF_ENUMERATE, public, value = 212, name = 'WdfPdoInitAssignDeviceIDTableIndex'
	list[213] = LF_ENUMERATE, public, value = 213, name = 'WdfPdoInitAssignInstanceIDTableIndex'
	list[214] = LF_ENUMERATE, public, value = 214, name = 'WdfPdoInitAddHardwareIDTableIndex'
	list[215] = LF_ENUMERATE, public, value = 215, name = 'WdfPdoInitAddCompatibleIDTableIndex'
	list[216] = LF_ENUMERATE, public, value = 216, name = 'WdfPdoInitAddDeviceTextTableIndex'
	list[217] = LF_ENUMERATE, public, value = 217, name = 'WdfPdoInitSetDefaultLocaleTableIndex'
	list[218] = LF_ENUMERATE, public, value = 218, name = 'WdfPdoInitAssignRawDeviceTableIndex'
	list[219] = LF_ENUMERATE, public, value = 219, name = 'WdfPdoMarkMissingTableIndex'
	list[220] = LF_ENUMERATE, public, value = 220, name = 'WdfPdoRequestEjectTableIndex'
	list[221] = LF_ENUMERATE, public, value = 221, name = 'WdfPdoGetParentTableIndex'
	list[222] = LF_ENUMERATE, public, value = 222, name = 'WdfPdoRetrieveIdentificationDescriptionTableIndex'
	list[223] = LF_ENUMERATE, public, value = 223, name = 'WdfPdoRetrieveAddressDescriptionTableIndex'
	list[224] = LF_ENUMERATE, public, value = 224, name = 'WdfPdoUpdateAddressDescriptionTableIndex'
	list[225] = LF_ENUMERATE, public, value = 225, name = 'WdfPdoAddEjectionRelationsPhysicalDeviceTableIndex'
	list[226] = LF_ENUMERATE, public, value = 226, name = 'WdfPdoRemoveEjectionRelationsPhysicalDeviceTableIndex'
	list[227] = LF_ENUMERATE, public, value = 227, name = 'WdfPdoClearEjectionRelationsDevicesTableIndex'
	list[228] = LF_ENUMERATE, public, value = 228, name = 'WdfDeviceAddQueryInterfaceTableIndex'
	list[229] = LF_ENUMERATE, public, value = 229, name = 'WdfRegistryOpenKeyTableIndex'
	list[230] = LF_ENUMERATE, public, value = 230, name = 'WdfRegistryCreateKeyTableIndex'
	list[231] = LF_ENUMERATE, public, value = 231, name = 'WdfRegistryCloseTableIndex'
	list[232] = LF_ENUMERATE, public, value = 232, name = 'WdfRegistryWdmGetHandleTableIndex'
	list[233] = LF_ENUMERATE, public, value = 233, name = 'WdfRegistryRemoveKeyTableIndex'
	list[234] = LF_ENUMERATE, public, value = 234, name = 'WdfRegistryRemoveValueTableIndex'
	list[235] = LF_ENUMERATE, public, value = 235, name = 'WdfRegistryQueryValueTableIndex'
	list[236] = LF_ENUMERATE, public, value = 236, name = 'WdfRegistryQueryMemoryTableIndex'
	list[237] = LF_ENUMERATE, public, value = 237, name = 'WdfRegistryQueryMultiStringTableIndex'
	list[238] = LF_ENUMERATE, public, value = 238, name = 'WdfRegistryQueryUnicodeStringTableIndex'
	list[239] = LF_ENUMERATE, public, value = 239, name = 'WdfRegistryQueryStringTableIndex'
	list[240] = LF_ENUMERATE, public, value = 240, name = 'WdfRegistryQueryULongTableIndex'
	list[241] = LF_ENUMERATE, public, value = 241, name = 'WdfRegistryAssignValueTableIndex'
	list[242] = LF_ENUMERATE, public, value = 242, name = 'WdfRegistryAssignMemoryTableIndex'
	list[243] = LF_ENUMERATE, public, value = 243, name = 'WdfRegistryAssignMultiStringTableIndex'
	list[244] = LF_ENUMERATE, public, value = 244, name = 'WdfRegistryAssignUnicodeStringTableIndex'
	list[245] = LF_ENUMERATE, public, value = 245, name = 'WdfRegistryAssignStringTableIndex'
	list[246] = LF_ENUMERATE, public, value = 246, name = 'WdfRegistryAssignULongTableIndex'
	list[247] = LF_ENUMERATE, public, value = 247, name = 'WdfRequestCreateTableIndex'
	list[248] = LF_ENUMERATE, public, value = 248, name = 'WdfRequestCreateFromIrpTableIndex'
	list[249] = LF_ENUMERATE, public, value = 249, name = 'WdfRequestReuseTableIndex'
	list[250] = LF_ENUMERATE, public, value = 250, name = 'WdfRequestChangeTargetTableIndex'
	list[251] = LF_ENUMERATE, public, value = 251, name = 'WdfRequestFormatRequestUsingCurrentTypeTableIndex'
	list[252] = LF_ENUMERATE, public, value = 252, name = 'WdfRequestWdmFormatUsingStackLocationTableIndex'
	list[253] = LF_ENUMERATE, public, value = 253, name = 'WdfRequestSendTableIndex'
	list[254] = LF_ENUMERATE, public, value = 254, name = 'WdfRequestGetStatusTableIndex'
	list[255] = LF_ENUMERATE, public, value = 255, name = 'WdfRequestMarkCancelableTableIndex'
	list[256] = LF_ENUMERATE, public, value = 256, name = 'WdfRequestUnmarkCancelableTableIndex'
	list[257] = LF_ENUMERATE, public, value = 257, name = 'WdfRequestIsCanceledTableIndex'
	list[258] = LF_ENUMERATE, public, value = 258, name = 'WdfRequestCancelSentRequestTableIndex'
	list[259] = LF_ENUMERATE, public, value = 259, name = 'WdfRequestIsFrom32BitProcessTableIndex'
	list[260] = LF_ENUMERATE, public, value = 260, name = 'WdfRequestSetCompletionRoutineTableIndex'
	list[261] = LF_ENUMERATE, public, value = 261, name = 'WdfRequestGetCompletionParamsTableIndex'
	list[262] = LF_ENUMERATE, public, value = 262, name = 'WdfRequestAllocateTimerTableIndex'
	list[263] = LF_ENUMERATE, public, value = 263, name = 'WdfRequestCompleteTableIndex'
	list[264] = LF_ENUMERATE, public, value = 264, name = 'WdfRequestCompleteWithPriorityBoostTableIndex'
	list[265] = LF_ENUMERATE, public, value = 265, name = 'WdfRequestCompleteWithInformationTableIndex'
	list[266] = LF_ENUMERATE, public, value = 266, name = 'WdfRequestGetParametersTableIndex'
	list[267] = LF_ENUMERATE, public, value = 267, name = 'WdfRequestRetrieveInputMemoryTableIndex'
	list[268] = LF_ENUMERATE, public, value = 268, name = 'WdfRequestRetrieveOutputMemoryTableIndex'
	list[269] = LF_ENUMERATE, public, value = 269, name = 'WdfRequestRetrieveInputBufferTableIndex'
	list[270] = LF_ENUMERATE, public, value = 270, name = 'WdfRequestRetrieveOutputBufferTableIndex'
	list[271] = LF_ENUMERATE, public, value = 271, name = 'WdfRequestRetrieveInputWdmMdlTableIndex'
	list[272] = LF_ENUMERATE, public, value = 272, name = 'WdfRequestRetrieveOutputWdmMdlTableIndex'
	list[273] = LF_ENUMERATE, public, value = 273, name = 'WdfRequestRetrieveUnsafeUserInputBufferTableIndex'
	list[274] = LF_ENUMERATE, public, value = 274, name = 'WdfRequestRetrieveUnsafeUserOutputBufferTableIndex'
	list[275] = LF_ENUMERATE, public, value = 275, name = 'WdfRequestSetInformationTableIndex'
	list[276] = LF_ENUMERATE, public, value = 276, name = 'WdfRequestGetInformationTableIndex'
	list[277] = LF_ENUMERATE, public, value = 277, name = 'WdfRequestGetFileObjectTableIndex'
	list[278] = LF_ENUMERATE, public, value = 278, name = 'WdfRequestProbeAndLockUserBufferForReadTableIndex'
	list[279] = LF_ENUMERATE, public, value = 279, name = 'WdfRequestProbeAndLockUserBufferForWriteTableIndex'
	list[280] = LF_ENUMERATE, public, value = 280, name = 'WdfRequestGetRequestorModeTableIndex'
	list[281] = LF_ENUMERATE, public, value = 281, name = 'WdfRequestForwardToIoQueueTableIndex'
	list[282] = LF_ENUMERATE, public, value = 282, name = 'WdfRequestGetIoQueueTableIndex'
	list[283] = LF_ENUMERATE, public, value = 283, name = 'WdfRequestRequeueTableIndex'
	list[284] = LF_ENUMERATE, public, value = 284, name = 'WdfRequestStopAcknowledgeTableIndex'
	list[285] = LF_ENUMERATE, public, value = 285, name = 'WdfRequestWdmGetIrpTableIndex'
	list[286] = LF_ENUMERATE, public, value = 286, name = 'WdfIoResourceRequirementsListSetSlotNumberTableIndex'
	list[287] = LF_ENUMERATE, public, value = 287, name = 'WdfIoResourceRequirementsListSetInterfaceTypeTableIndex'
	list[288] = LF_ENUMERATE, public, value = 288, name = 'WdfIoResourceRequirementsListAppendIoResListTableIndex'
	list[289] = LF_ENUMERATE, public, value = 289, name = 'WdfIoResourceRequirementsListInsertIoResListTableIndex'
	list[290] = LF_ENUMERATE, public, value = 290, name = 'WdfIoResourceRequirementsListGetCountTableIndex'
	list[291] = LF_ENUMERATE, public, value = 291, name = 'WdfIoResourceRequirementsListGetIoResListTableIndex'
	list[292] = LF_ENUMERATE, public, value = 292, name = 'WdfIoResourceRequirementsListRemoveTableIndex'
	list[293] = LF_ENUMERATE, public, value = 293, name = 'WdfIoResourceRequirementsListRemoveByIoResListTableIndex'
	list[294] = LF_ENUMERATE, public, value = 294, name = 'WdfIoResourceListCreateTableIndex'
	list[295] = LF_ENUMERATE, public, value = 295, name = 'WdfIoResourceListAppendDescriptorTableIndex'
	list[296] = LF_ENUMERATE, public, value = 296, name = 'WdfIoResourceListInsertDescriptorTableIndex'
	list[297] = LF_ENUMERATE, public, value = 297, name = 'WdfIoResourceListUpdateDescriptorTableIndex'
	list[298] = LF_ENUMERATE, public, value = 298, name = 'WdfIoResourceListGetCountTableIndex'
	list[299] = LF_ENUMERATE, public, value = 299, name = 'WdfIoResourceListGetDescriptorTableIndex'
	list[300] = LF_ENUMERATE, public, value = 300, name = 'WdfIoResourceListRemoveTableIndex'
	list[301] = LF_ENUMERATE, public, value = 301, name = 'WdfIoResourceListRemoveByDescriptorTableIndex'
	list[302] = LF_ENUMERATE, public, value = 302, name = 'WdfCmResourceListAppendDescriptorTableIndex'
	list[303] = LF_ENUMERATE, public, value = 303, name = 'WdfCmResourceListInsertDescriptorTableIndex'
	list[304] = LF_ENUMERATE, public, value = 304, name = 'WdfCmResourceListGetCountTableIndex'
	list[305] = LF_ENUMERATE, public, value = 305, name = 'WdfCmResourceListGetDescriptorTableIndex'
	list[306] = LF_ENUMERATE, public, value = 306, name = 'WdfCmResourceListRemoveTableIndex'
	list[307] = LF_ENUMERATE, public, value = 307, name = 'WdfCmResourceListRemoveByDescriptorTableIndex'
	list[308] = LF_ENUMERATE, public, value = 308, name = 'WdfStringCreateTableIndex'
	list[309] = LF_ENUMERATE, public, value = 309, name = 'WdfStringGetUnicodeStringTableIndex'
	list[310] = LF_ENUMERATE, public, value = 310, name = 'WdfObjectAcquireLockTableIndex'
	list[311] = LF_ENUMERATE, public, value = 311, name = 'WdfObjectReleaseLockTableIndex'
	list[312] = LF_ENUMERATE, public, value = 312, name = 'WdfWaitLockCreateTableIndex'
	list[313] = LF_ENUMERATE, public, value = 313, name = 'WdfWaitLockAcquireTableIndex'
	list[314] = LF_ENUMERATE, public, value = 314, name = 'WdfWaitLockReleaseTableIndex'
	list[315] = LF_ENUMERATE, public, value = 315, name = 'WdfSpinLockCreateTableIndex'
	list[316] = LF_ENUMERATE, public, value = 316, name = 'WdfSpinLockAcquireTableIndex'
	list[317] = LF_ENUMERATE, public, value = 317, name = 'WdfSpinLockReleaseTableIndex'
	list[318] = LF_ENUMERATE, public, value = 318, name = 'WdfTimerCreateTableIndex'
	list[319] = LF_ENUMERATE, public, value = 319, name = 'WdfTimerStartTableIndex'
	list[320] = LF_ENUMERATE, public, value = 320, name = 'WdfTimerStopTableIndex'
	list[321] = LF_ENUMERATE, public, value = 321, name = 'WdfTimerGetParentObjectTableIndex'
	list[322] = LF_ENUMERATE, public, value = 322, name = 'WdfUsbTargetDeviceCreateTableIndex'
	list[323] = LF_ENUMERATE, public, value = 323, name = 'WdfUsbTargetDeviceRetrieveInformationTableIndex'
	list[324] = LF_ENUMERATE, public, value = 324, name = 'WdfUsbTargetDeviceGetDeviceDescriptorTableIndex'
	list[325] = LF_ENUMERATE, public, value = 325, name = 'WdfUsbTargetDeviceRetrieveConfigDescriptorTableIndex'
	list[326] = LF_ENUMERATE, public, value = 326, name = 'WdfUsbTargetDeviceQueryStringTableIndex'
	list[327] = LF_ENUMERATE, public, value = 327, name = 'WdfUsbTargetDeviceAllocAndQueryStringTableIndex'
	list[328] = LF_ENUMERATE, public, value = 328, name = 'WdfUsbTargetDeviceFormatRequestForStringTableIndex'
	list[329] = LF_ENUMERATE, public, value = 329, name = 'WdfUsbTargetDeviceGetNumInterfacesTableIndex'
	list[330] = LF_ENUMERATE, public, value = 330, name = 'WdfUsbTargetDeviceSelectConfigTableIndex'
	list[331] = LF_ENUMERATE, public, value = 331, name = 'WdfUsbTargetDeviceWdmGetConfigurationHandleTableIndex'
	list[332] = LF_ENUMERATE, public, value = 332, name = 'WdfUsbTargetDeviceRetrieveCurrentFrameNumberTableIndex'
	list[333] = LF_ENUMERATE, public, value = 333, name = 'WdfUsbTargetDeviceSendControlTransferSynchronouslyTableIndex'
	list[334] = LF_ENUMERATE, public, value = 334, name = 'WdfUsbTargetDeviceFormatRequestForControlTransferTableIndex'
	list[335] = LF_ENUMERATE, public, value = 335, name = 'WdfUsbTargetDeviceIsConnectedSynchronousTableIndex'
	list[336] = LF_ENUMERATE, public, value = 336, name = 'WdfUsbTargetDeviceResetPortSynchronouslyTableIndex'
	list[337] = LF_ENUMERATE, public, value = 337, name = 'WdfUsbTargetDeviceCyclePortSynchronouslyTableIndex'
	list[338] = LF_ENUMERATE, public, value = 338, name = 'WdfUsbTargetDeviceFormatRequestForCyclePortTableIndex'
	list[339] = LF_ENUMERATE, public, value = 339, name = 'WdfUsbTargetDeviceSendUrbSynchronouslyTableIndex'
	list[340] = LF_ENUMERATE, public, value = 340, name = 'WdfUsbTargetDeviceFormatRequestForUrbTableIndex'
	list[341] = LF_ENUMERATE, public, value = 341, name = 'WdfUsbTargetPipeGetInformationTableIndex'
	list[342] = LF_ENUMERATE, public, value = 342, name = 'WdfUsbTargetPipeIsInEndpointTableIndex'
	list[343] = LF_ENUMERATE, public, value = 343, name = 'WdfUsbTargetPipeIsOutEndpointTableIndex'
	list[344] = LF_ENUMERATE, public, value = 344, name = 'WdfUsbTargetPipeGetTypeTableIndex'
	list[345] = LF_ENUMERATE, public, value = 345, name = 'WdfUsbTargetPipeSetNoMaximumPacketSizeCheckTableIndex'
	list[346] = LF_ENUMERATE, public, value = 346, name = 'WdfUsbTargetPipeWriteSynchronouslyTableIndex'
	list[347] = LF_ENUMERATE, public, value = 347, name = 'WdfUsbTargetPipeFormatRequestForWriteTableIndex'
	list[348] = LF_ENUMERATE, public, value = 348, name = 'WdfUsbTargetPipeReadSynchronouslyTableIndex'
	list[349] = LF_ENUMERATE, public, value = 349, name = 'WdfUsbTargetPipeFormatRequestForReadTableIndex'
	list[350] = LF_ENUMERATE, public, value = 350, name = 'WdfUsbTargetPipeConfigContinuousReaderTableIndex'
	list[351] = LF_ENUMERATE, public, value = 351, name = 'WdfUsbTargetPipeAbortSynchronouslyTableIndex'
	list[352] = LF_ENUMERATE, public, value = 352, name = 'WdfUsbTargetPipeFormatRequestForAbortTableIndex'
	list[353] = LF_ENUMERATE, public, value = 353, name = 'WdfUsbTargetPipeResetSynchronouslyTableIndex'
	list[354] = LF_ENUMERATE, public, value = 354, name = 'WdfUsbTargetPipeFormatRequestForResetTableIndex'
	list[355] = LF_ENUMERATE, public, value = 355, name = 'WdfUsbTargetPipeSendUrbSynchronouslyTableIndex'
	list[356] = LF_ENUMERATE, public, value = 356, name = 'WdfUsbTargetPipeFormatRequestForUrbTableIndex'
	list[357] = LF_ENUMERATE, public, value = 357, name = 'WdfUsbInterfaceGetInterfaceNumberTableIndex'
	list[358] = LF_ENUMERATE, public, value = 358, name = 'WdfUsbInterfaceGetNumEndpointsTableIndex'
	list[359] = LF_ENUMERATE, public, value = 359, name = 'WdfUsbInterfaceGetDescriptorTableIndex'
	list[360] = LF_ENUMERATE, public, value = 360, name = 'WdfUsbInterfaceSelectSettingTableIndex'
	list[361] = LF_ENUMERATE, public, value = 361, name = 'WdfUsbInterfaceGetEndpointInformationTableIndex'
	list[362] = LF_ENUMERATE, public, value = 362, name = 'WdfUsbTargetDeviceGetInterfaceTableIndex'
	list[363] = LF_ENUMERATE, public, value = 363, name = 'WdfUsbInterfaceGetConfiguredSettingIndexTableIndex'
	list[364] = LF_ENUMERATE, public, value = 364, name = 'WdfUsbInterfaceGetNumConfiguredPipesTableIndex'
	list[365] = LF_ENUMERATE, public, value = 365, name = 'WdfUsbInterfaceGetConfiguredPipeTableIndex'
	list[366] = LF_ENUMERATE, public, value = 366, name = 'WdfUsbTargetPipeWdmGetPipeHandleTableIndex'
	list[367] = LF_ENUMERATE, public, value = 367, name = 'WdfVerifierDbgBreakPointTableIndex'
	list[368] = LF_ENUMERATE, public, value = 368, name = 'WdfVerifierKeBugCheckTableIndex'
	list[369] = LF_ENUMERATE, public, value = 369, name = 'WdfWmiProviderCreateTableIndex'
	list[370] = LF_ENUMERATE, public, value = 370, name = 'WdfWmiProviderGetDeviceTableIndex'
	list[371] = LF_ENUMERATE, public, value = 371, name = 'WdfWmiProviderIsEnabledTableIndex'
	list[372] = LF_ENUMERATE, public, value = 372, name = 'WdfWmiProviderGetTracingHandleTableIndex'
	list[373] = LF_ENUMERATE, public, value = 373, name = 'WdfWmiInstanceCreateTableIndex'
	list[374] = LF_ENUMERATE, public, value = 374, name = 'WdfWmiInstanceRegisterTableIndex'
	list[375] = LF_ENUMERATE, public, value = 375, name = 'WdfWmiInstanceDeregisterTableIndex'
	list[376] = LF_ENUMERATE, public, value = 376, name = 'WdfWmiInstanceGetDeviceTableIndex'
	list[377] = LF_ENUMERATE, public, value = 377, name = 'WdfWmiInstanceGetProviderTableIndex'
	list[378] = LF_ENUMERATE, public, value = 378, name = 'WdfWmiInstanceFireEventTableIndex'
	list[379] = LF_ENUMERATE, public, value = 379, name = 'WdfWorkItemCreateTableIndex'
	list[380] = LF_ENUMERATE, public, value = 380, name = 'WdfWorkItemEnqueueTableIndex'
	list[381] = LF_ENUMERATE, public, value = 381, name = 'WdfWorkItemGetParentObjectTableIndex'
	list[382] = LF_ENUMERATE, public, value = 382, name = 'WdfWorkItemFlushTableIndex'
	list[383] = LF_ENUMERATE, public, value = 383, name = 'WdfCommonBufferCreateWithConfigTableIndex'
	list[384] = LF_ENUMERATE, public, value = 384, name = 'WdfDmaEnablerGetFragmentLengthTableIndex'
	list[385] = LF_ENUMERATE, public, value = 385, name = 'WdfDmaEnablerWdmGetDmaAdapterTableIndex'
	list[386] = LF_ENUMERATE, public, value = 386, name = 'WdfUsbInterfaceGetNumSettingsTableIndex'
	list[387] = LF_ENUMERATE, public, value = 387, name = 'WdfDeviceRemoveDependentUsageDeviceObjectTableIndex'
	list[388] = LF_ENUMERATE, public, value = 388, name = 'WdfDeviceGetSystemPowerActionTableIndex'
	list[389] = LF_ENUMERATE, public, value = 389, name = 'WdfInterruptSetExtendedPolicyTableIndex'
	list[390] = LF_ENUMERATE, public, value = 390, name = 'WdfIoQueueAssignForwardProgressPolicyTableIndex'
	list[391] = LF_ENUMERATE, public, value = 391, name = 'WdfPdoInitAssignContainerIDTableIndex'
	list[392] = LF_ENUMERATE, public, value = 392, name = 'WdfPdoInitAllowForwardingRequestToParentTableIndex'
	list[393] = LF_ENUMERATE, public, value = 393, name = 'WdfRequestMarkCancelableExTableIndex'
	list[394] = LF_ENUMERATE, public, value = 394, name = 'WdfRequestIsReservedTableIndex'
	list[395] = LF_ENUMERATE, public, value = 395, name = 'WdfRequestForwardToParentDeviceIoQueueTableIndex'
	list[396] = LF_ENUMERATE, public, value = 396, name = 'WdfCxDeviceInitAllocateTableIndex'
	list[397] = LF_ENUMERATE, public, value = 397, name = 'WdfCxDeviceInitAssignWdmIrpPreprocessCallbackTableIndex'
	list[398] = LF_ENUMERATE, public, value = 398, name = 'WdfCxDeviceInitSetIoInCallerContextCallbackTableIndex'
	list[399] = LF_ENUMERATE, public, value = 399, name = 'WdfCxDeviceInitSetRequestAttributesTableIndex'
	list[400] = LF_ENUMERATE, public, value = 400, name = 'WdfCxDeviceInitSetFileObjectConfigTableIndex'
	list[401] = LF_ENUMERATE, public, value = 401, name = 'WdfDeviceWdmDispatchIrpTableIndex'
	list[402] = LF_ENUMERATE, public, value = 402, name = 'WdfDeviceWdmDispatchIrpToIoQueueTableIndex'
	list[403] = LF_ENUMERATE, public, value = 403, name = 'WdfDeviceInitSetRemoveLockOptionsTableIndex'
	list[404] = LF_ENUMERATE, public, value = 404, name = 'WdfDeviceConfigureWdmIrpDispatchCallbackTableIndex'
	list[405] = LF_ENUMERATE, public, value = 405, name = 'WdfDmaEnablerConfigureSystemProfileTableIndex'
	list[406] = LF_ENUMERATE, public, value = 406, name = 'WdfDmaTransactionInitializeUsingOffsetTableIndex'
	list[407] = LF_ENUMERATE, public, value = 407, name = 'WdfDmaTransactionGetTransferInfoTableIndex'
	list[408] = LF_ENUMERATE, public, value = 408, name = 'WdfDmaTransactionSetChannelConfigurationCallbackTableIndex'
	list[409] = LF_ENUMERATE, public, value = 409, name = 'WdfDmaTransactionSetTransferCompleteCallbackTableIndex'
	list[410] = LF_ENUMERATE, public, value = 410, name = 'WdfDmaTransactionSetImmediateExecutionTableIndex'
	list[411] = LF_ENUMERATE, public, value = 411, name = 'WdfDmaTransactionAllocateResourcesTableIndex'
	list[412] = LF_ENUMERATE, public, value = 412, name = 'WdfDmaTransactionSetDeviceAddressOffsetTableIndex'
	list[413] = LF_ENUMERATE, public, value = 413, name = 'WdfDmaTransactionFreeResourcesTableIndex'
	list[414] = LF_ENUMERATE, public, value = 414, name = 'WdfDmaTransactionCancelTableIndex'
	list[415] = LF_ENUMERATE, public, value = 415, name = 'WdfDmaTransactionWdmGetTransferContextTableIndex'
	list[416] = LF_ENUMERATE, public, value = 416, name = 'WdfInterruptQueueWorkItemForIsrTableIndex'
	list[417] = LF_ENUMERATE, public, value = 417, name = 'WdfInterruptTryToAcquireLockTableIndex'
	list[418] = LF_ENUMERATE, public, value = 418, name = 'WdfIoQueueStopAndPurgeTableIndex'
	list[419] = LF_ENUMERATE, public, value = 419, name = 'WdfIoQueueStopAndPurgeSynchronouslyTableIndex'
	list[420] = LF_ENUMERATE, public, value = 420, name = 'WdfIoTargetPurgeTableIndex'
	list[421] = LF_ENUMERATE, public, value = 421, name = 'WdfUsbTargetDeviceCreateWithParametersTableIndex'
	list[422] = LF_ENUMERATE, public, value = 422, name = 'WdfUsbTargetDeviceQueryUsbCapabilityTableIndex'
	list[423] = LF_ENUMERATE, public, value = 423, name = 'WdfUsbTargetDeviceCreateUrbTableIndex'
	list[424] = LF_ENUMERATE, public, value = 424, name = 'WdfUsbTargetDeviceCreateIsochUrbTableIndex'
	list[425] = LF_ENUMERATE, public, value = 425, name = 'WdfDeviceWdmAssignPowerFrameworkSettingsTableIndex'
	list[426] = LF_ENUMERATE, public, value = 426, name = 'WdfDmaTransactionStopSystemTransferTableIndex'
	list[427] = LF_ENUMERATE, public, value = 427, name = 'WdfCxVerifierKeBugCheckTableIndex'
	list[428] = LF_ENUMERATE, public, value = 428, name = 'WdfInterruptReportActiveTableIndex'
	list[429] = LF_ENUMERATE, public, value = 429, name = 'WdfInterruptReportInactiveTableIndex'
	list[430] = LF_ENUMERATE, public, value = 430, name = 'WdfDeviceInitSetReleaseHardwareOrderOnFailureTableIndex'
	list[431] = LF_ENUMERATE, public, value = 431, name = 'WdfGetTriageInfoTableIndex'
	list[432] = LF_ENUMERATE, public, value = 432, name = 'WdfDeviceInitSetIoTypeExTableIndex'
	list[433] = LF_ENUMERATE, public, value = 433, name = 'WdfDeviceQueryPropertyExTableIndex'
	list[434] = LF_ENUMERATE, public, value = 434, name = 'WdfDeviceAllocAndQueryPropertyExTableIndex'
	list[435] = LF_ENUMERATE, public, value = 435, name = 'WdfDeviceAssignPropertyTableIndex'
	list[436] = LF_ENUMERATE, public, value = 436, name = 'WdfFdoInitQueryPropertyExTableIndex'
	list[437] = LF_ENUMERATE, public, value = 437, name = 'WdfFdoInitAllocAndQueryPropertyExTableIndex'
	list[438] = LF_ENUMERATE, public, value = 438, name = 'WdfDeviceStopIdleActualTableIndex'
	list[439] = LF_ENUMERATE, public, value = 439, name = 'WdfDeviceResumeIdleActualTableIndex'
	list[440] = LF_ENUMERATE, public, value = 440, name = 'WdfDeviceGetSelfIoTargetTableIndex'
	list[441] = LF_ENUMERATE, public, value = 441, name = 'WdfDeviceInitAllowSelfIoTargetTableIndex'
	list[442] = LF_ENUMERATE, public, value = 442, name = 'WdfIoTargetSelfAssignDefaultIoQueueTableIndex'
	list[443] = LF_ENUMERATE, public, value = 443, name = 'WdfDeviceOpenDevicemapKeyTableIndex'
	list[444] = LF_ENUMERATE, public, value = 444, name = 'WdfFunctionTableNumEntries'

0x101b : Length = 50, Leaf = 0x1507 LF_ENUM
	# members = 445,  type = T_INT4(0074) field list type 0x101a
	enum name = _WDFFUNCENUM, UDT(0x0000101b)

0x101c : Length = 142, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfExecutionLevelInvalid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfExecutionLevelInheritFromParent'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfExecutionLevelPassive'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfExecutionLevelDispatch'

0x101d : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x101c
	enum name = _WDF_EXECUTION_LEVEL, UDT(0x0000101d)

0x101e : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_ULONG(0022)
	Index type = T_UQUAD(0023)
	length = 4
	Name = 

0x101f : Length = 198, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfSynchronizationScopeInvalid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfSynchronizationScopeInheritFromParent'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfSynchronizationScopeDevice'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfSynchronizationScopeQueue'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WdfSynchronizationScopeNone'

0x1020 : Length = 78, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x101f
	enum name = _WDF_SYNCHRONIZATION_SCOPE, UDT(0x00001020)

0x1021 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFCOLLECTION__, unique name = .?AUWDFCOLLECTION__@@, UDT(0x0000113d)

0x1022 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1021

0x1023 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFWAITLOCK__, unique name = .?AUWDFWAITLOCK__@@, UDT(0x00001179)

0x1024 : Length = 150, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfMemoryDescriptorTypeInvalid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfMemoryDescriptorTypeBuffer'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfMemoryDescriptorTypeMdl'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfMemoryDescriptorTypeHandle'

0x1025 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1023

0x1026 : Length = 78, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x1024
	enum name = _WDF_MEMORY_DESCRIPTOR_TYPE, UDT(0x00001026)

0x1027 : Length = 206, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfRetrieveUnspecified'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfRetrievePresentChildren'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfRetrieveMissingChildren'
	list[3] = LF_ENUMERATE, public, value = 4, name = 'WdfRetrievePendingChildren'
	list[4] = LF_ENUMERATE, public, value = 5, name = 'WdfRetrieveAddedChildren'
	list[5] = LF_ENUMERATE, public, value = 7, name = 'WdfRetrieveAllChildren'

0x1028 : Length = 74, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x1027
	enum name = _WDF_RETRIEVE_CHILD_FLAGS, UDT(0x00001028)

0x1029 : Length = 526, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'TraceIdClass'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'TraceHandleClass'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'TraceEnableFlagsClass'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'TraceEnableLevelClass'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'GlobalLoggerHandleClass'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'EventLoggerHandleClass'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'AllLoggerHandlesClass'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'TraceHandleByNameClass'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'LoggerEventsLostClass'
	list[9] = LF_ENUMERATE, public, value = 9, name = 'TraceSessionSettingsClass'
	list[10] = LF_ENUMERATE, public, value = 10, name = 'LoggerEventsLoggedClass'
	list[11] = LF_ENUMERATE, public, value = 11, name = 'DiskIoNotifyRoutinesClass'
	list[12] = LF_ENUMERATE, public, value = 12, name = 'TraceInformationClassReserved1'
	list[13] = LF_ENUMERATE, public, value = 13, name = 'FltIoNotifyRoutinesClass'
	list[14] = LF_ENUMERATE, public, value = 14, name = 'TraceInformationClassReserved2'
	list[15] = LF_ENUMERATE, public, value = 15, name = 'WdfNotifyRoutinesClass'
	list[16] = LF_ENUMERATE, public, value = 16, name = 'MaxTraceInformationClass'

0x102a : Length = 74, Leaf = 0x1507 LF_ENUM
	# members = 17,  type = T_INT4(0074) field list type 0x1029
	enum name = _TRACE_INFORMATION_CLASS, UDT(0x0000102a)

0x102b : Length = 26, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = (LF_USHORT) 32768, name = 'WdfDevStateNP'

0x102c : Length = 70, Leaf = 0x1507 LF_ENUM
	# members = 1,  type = T_INT4(0074) field list type 0x102b
	enum name = _WDF_DEVICE_STATE_FLAGS, UDT(0x0000102c)

0x102d : Length = 182, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'StateNotificationInvalid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'StateNotificationEnterState'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'StateNotificationPostProcessState'
	list[3] = LF_ENUMERATE, public, value = 4, name = 'StateNotificationLeaveState'
	list[4] = LF_ENUMERATE, public, value = 7, name = 'StateNotificationAllStates'

0x102e : Length = 82, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x102d
	enum name = _WDF_STATE_NOTIFICATION_TYPE, UDT(0x0000102e)

0x102f : Length = 842, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'DevicePropertyDeviceDescription'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'DevicePropertyHardwareID'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'DevicePropertyCompatibleIDs'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'DevicePropertyBootConfiguration'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'DevicePropertyBootConfigurationTranslated'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'DevicePropertyClassName'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'DevicePropertyClassGuid'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'DevicePropertyDriverKeyName'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'DevicePropertyManufacturer'
	list[9] = LF_ENUMERATE, public, value = 9, name = 'DevicePropertyFriendlyName'
	list[10] = LF_ENUMERATE, public, value = 10, name = 'DevicePropertyLocationInformation'
	list[11] = LF_ENUMERATE, public, value = 11, name = 'DevicePropertyPhysicalDeviceObjectName'
	list[12] = LF_ENUMERATE, public, value = 12, name = 'DevicePropertyBusTypeGuid'
	list[13] = LF_ENUMERATE, public, value = 13, name = 'DevicePropertyLegacyBusType'
	list[14] = LF_ENUMERATE, public, value = 14, name = 'DevicePropertyBusNumber'
	list[15] = LF_ENUMERATE, public, value = 15, name = 'DevicePropertyEnumeratorName'
	list[16] = LF_ENUMERATE, public, value = 16, name = 'DevicePropertyAddress'
	list[17] = LF_ENUMERATE, public, value = 17, name = 'DevicePropertyUINumber'
	list[18] = LF_ENUMERATE, public, value = 18, name = 'DevicePropertyInstallState'
	list[19] = LF_ENUMERATE, public, value = 19, name = 'DevicePropertyRemovalPolicy'
	list[20] = LF_ENUMERATE, public, value = 20, name = 'DevicePropertyResourceRequirements'
	list[21] = LF_ENUMERATE, public, value = 21, name = 'DevicePropertyAllocatedResources'
	list[22] = LF_ENUMERATE, public, value = 22, name = 'DevicePropertyContainerID'

0x1030 : Length = 74, Leaf = 0x1507 LF_ENUM
	# members = 23,  type = T_INT4(0074) field list type 0x102f
	enum name = DEVICE_REGISTRY_PROPERTY, UDT(0x00001030)

0x1031 : Length = 110, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'IdleCapsInvalid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'IdleCannotWakeFromS0'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'IdleCanWakeFromS0'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'IdleUsbSelectiveSuspend'

0x1032 : Length = 102, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x1031
	enum name = _WDF_POWER_POLICY_S0_IDLE_CAPABILITIES, UDT(0x00001032)

0x1033 : Length = 94, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'IdleUserControlInvalid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'IdleDoNotAllowUserControl'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'IdleAllowUserControl'

0x1034 : Length = 102, Leaf = 0x1507 LF_ENUM
	# members = 3,  type = T_INT4(0074) field list type 0x1033
	enum name = _WDF_POWER_POLICY_S0_IDLE_USER_CONTROL, UDT(0x00001034)

0x1035 : Length = 38, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'IdleTimeoutDefaultConstant'

0x1036 : Length = 106, Leaf = 0x1507 LF_ENUM
	# members = 1,  type = T_INT4(0074) field list type 0x1035
	enum name = _WDF_POWER_POLICY_IDLE_TIMEOUT_CONSTANTS, UDT(0x00001036)

0x1037 : Length = 94, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WakeUserControlInvalid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WakeDoNotAllowUserControl'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WakeAllowUserControl'

0x1038 : Length = 102, Leaf = 0x1507 LF_ENUM
	# members = 3,  type = T_INT4(0074) field list type 0x1037
	enum name = _WDF_POWER_POLICY_SX_WAKE_USER_CONTROL, UDT(0x00001038)

0x1039 : Length = 174, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfDeviceIoUndefined'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfDeviceIoNeither'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfDeviceIoBuffered'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfDeviceIoDirect'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WdfDeviceIoBufferedOrDirect'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'WdfDeviceIoMaximum'

0x103a : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x1039
	enum name = _WDF_DEVICE_IO_TYPE, UDT(0x0000103a)

0x103b : Length = 198, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'DeviceWakeDepthNotWakeable'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'DeviceWakeDepthD0'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'DeviceWakeDepthD1'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'DeviceWakeDepthD2'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'DeviceWakeDepthD3hot'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'DeviceWakeDepthD3cold'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'DeviceWakeDepthMaximum'

0x103c : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 7,  type = T_INT4(0074) field list type 0x103b
	enum name = _DEVICE_WAKE_DEPTH, UDT(0x0000103c)

0x103d : Length = 226, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfFileObjectInvalid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfFileObjectNotRequired'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfFileObjectWdfCanUseFsContext'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfFileObjectWdfCanUseFsContext2'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WdfFileObjectWdfCannotUseFsContexts'
	list[5] = LF_ENUMERATE, public, value = (LF_LONG) -2147483648, name = 'WdfFileObjectCanBeOptional'

0x103e : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x103d
	enum name = _WDF_FILEOBJECT_CLASS, UDT(0x0000103e)

0x103f : Length = 106, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'DriverManagedIdleTimeout'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'SystemManagedIdleTimeout'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'SystemManagedIdleTimeoutWithHint'

0x1040 : Length = 94, Leaf = 0x1507 LF_ENUM
	# members = 3,  type = T_INT4(0074) field list type 0x103f
	enum name = _WDF_POWER_POLICY_IDLE_TIMEOUT_TYPE, UDT(0x00001040)

0x1041 : Length = 230, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PowerSystemUnspecified'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'PowerSystemWorking'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PowerSystemSleeping1'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'PowerSystemSleeping2'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'PowerSystemSleeping3'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'PowerSystemHibernate'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'PowerSystemShutdown'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'PowerSystemMaximum'

0x1042 : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 8,  type = T_INT4(0074) field list type 0x1041
	enum name = _SYSTEM_POWER_STATE, UDT(0x00001042)

0x1043 : Length = 142, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PowerDeviceUnspecified'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'PowerDeviceD0'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PowerDeviceD1'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'PowerDeviceD2'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'PowerDeviceD3'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'PowerDeviceMaximum'

0x1044 : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x1043
	enum name = _DEVICE_POWER_STATE, UDT(0x00001044)

0x1045 : Length = 126, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PowerUserPresent'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'PowerUserNotPresent'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PowerUserInactive'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'PowerUserMaximum'
	list[4] = LF_ENUMERATE, public, value = 3, name = 'PowerUserInvalid'

0x1046 : Length = 70, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x1045
	enum name = _USER_ACTIVITY_PRESENCE, UDT(0x00001046)

0x1047 : Length = 250, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfIrqPolicyMachineDefault'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfIrqPolicyAllCloseProcessors'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfIrqPolicyOneCloseProcessor'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfIrqPolicyAllProcessorsInMachine'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WdfIrqPolicySpecifiedProcessors'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'WdfIrqPolicySpreadMessagesAcrossAllProcessors'

0x1048 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x1047
	enum name = _WDF_INTERRUPT_POLICY, UDT(0x00001048)

0x1049 : Length = 114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfIrqPriorityUndefined'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfIrqPriorityLow'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfIrqPriorityNormal'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfIrqPriorityHigh'

0x104a : Length = 70, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x1049
	enum name = _WDF_INTERRUPT_PRIORITY, UDT(0x0000104a)

0x104b : Length = 1058, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfRequestTypeCreate'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfRequestTypeCreateNamedPipe'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfRequestTypeClose'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfRequestTypeRead'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WdfRequestTypeWrite'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'WdfRequestTypeQueryInformation'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'WdfRequestTypeSetInformation'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'WdfRequestTypeQueryEA'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'WdfRequestTypeSetEA'
	list[9] = LF_ENUMERATE, public, value = 9, name = 'WdfRequestTypeFlushBuffers'
	list[10] = LF_ENUMERATE, public, value = 10, name = 'WdfRequestTypeQueryVolumeInformation'
	list[11] = LF_ENUMERATE, public, value = 11, name = 'WdfRequestTypeSetVolumeInformation'
	list[12] = LF_ENUMERATE, public, value = 12, name = 'WdfRequestTypeDirectoryControl'
	list[13] = LF_ENUMERATE, public, value = 13, name = 'WdfRequestTypeFileSystemControl'
	list[14] = LF_ENUMERATE, public, value = 14, name = 'WdfRequestTypeDeviceControl'
	list[15] = LF_ENUMERATE, public, value = 15, name = 'WdfRequestTypeDeviceControlInternal'
	list[16] = LF_ENUMERATE, public, value = 16, name = 'WdfRequestTypeShutdown'
	list[17] = LF_ENUMERATE, public, value = 17, name = 'WdfRequestTypeLockControl'
	list[18] = LF_ENUMERATE, public, value = 18, name = 'WdfRequestTypeCleanup'
	list[19] = LF_ENUMERATE, public, value = 19, name = 'WdfRequestTypeCreateMailSlot'
	list[20] = LF_ENUMERATE, public, value = 20, name = 'WdfRequestTypeQuerySecurity'
	list[21] = LF_ENUMERATE, public, value = 21, name = 'WdfRequestTypeSetSecurity'
	list[22] = LF_ENUMERATE, public, value = 22, name = 'WdfRequestTypePower'
	list[23] = LF_ENUMERATE, public, value = 23, name = 'WdfRequestTypeSystemControl'
	list[24] = LF_ENUMERATE, public, value = 24, name = 'WdfRequestTypeDeviceChange'
	list[25] = LF_ENUMERATE, public, value = 25, name = 'WdfRequestTypeQueryQuota'
	list[26] = LF_ENUMERATE, public, value = 26, name = 'WdfRequestTypeSetQuota'
	list[27] = LF_ENUMERATE, public, value = 27, name = 'WdfRequestTypePnp'
	list[28] = LF_ENUMERATE, public, value = 28, name = 'WdfRequestTypeOther'
	list[29] = LF_ENUMERATE, public, value = 64, name = 'WdfRequestTypeUsb'
	list[30] = LF_ENUMERATE, public, value = 255, name = 'WdfRequestTypeNoFormat'
	list[31] = LF_ENUMERATE, public, value = 256, name = 'WdfRequestTypeMax'

0x104c : Length = 58, Leaf = 0x1507 LF_ENUM
	# members = 32,  type = T_INT4(0074) field list type 0x104b
	enum name = _WDF_REQUEST_TYPE, UDT(0x0000104c)

0x104d : Length = 74, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WDF_REQUEST_REUSE_NO_FLAGS'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WDF_REQUEST_REUSE_SET_NEW_IRP'

0x104e : Length = 74, Leaf = 0x1507 LF_ENUM
	# members = 2,  type = T_INT4(0074) field list type 0x104d
	enum name = _WDF_REQUEST_REUSE_FLAGS, UDT(0x0000104e)

0x104f : Length = 306, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'WDF_REQUEST_SEND_OPTION_TIMEOUT'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'WDF_REQUEST_SEND_OPTION_SYNCHRONOUS'
	list[2] = LF_ENUMERATE, public, value = 4, name = 'WDF_REQUEST_SEND_OPTION_IGNORE_TARGET_STATE'
	list[3] = LF_ENUMERATE, public, value = 8, name = 'WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET'
	list[4] = LF_ENUMERATE, public, value = (LF_ULONG) 65536, name = 'WDF_REQUEST_SEND_OPTION_IMPERSONATE_CLIENT'
	list[5] = LF_ENUMERATE, public, value = (LF_ULONG) 131072, name = 'WDF_REQUEST_SEND_OPTION_IMPERSONATION_IGNORE_FAILURE'

0x1050 : Length = 86, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x104f
	enum name = _WDF_REQUEST_SEND_OPTIONS_FLAGS, UDT(0x00001050)

0x1051 : Length = 554, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WheaErrSrcTypeMCE'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WheaErrSrcTypeCMC'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WheaErrSrcTypeCPE'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WheaErrSrcTypeNMI'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WheaErrSrcTypePCIe'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'WheaErrSrcTypeGeneric'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'WheaErrSrcTypeINIT'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'WheaErrSrcTypeBOOT'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'WheaErrSrcTypeSCIGeneric'
	list[9] = LF_ENUMERATE, public, value = 9, name = 'WheaErrSrcTypeIPFMCA'
	list[10] = LF_ENUMERATE, public, value = 10, name = 'WheaErrSrcTypeIPFCMC'
	list[11] = LF_ENUMERATE, public, value = 11, name = 'WheaErrSrcTypeIPFCPE'
	list[12] = LF_ENUMERATE, public, value = 12, name = 'WheaErrSrcTypeGenericV2'
	list[13] = LF_ENUMERATE, public, value = 13, name = 'WheaErrSrcTypeSCIGenericV2'
	list[14] = LF_ENUMERATE, public, value = 14, name = 'WheaErrSrcTypeBMC'
	list[15] = LF_ENUMERATE, public, value = 15, name = 'WheaErrSrcTypePMEM'
	list[16] = LF_ENUMERATE, public, value = 16, name = 'WheaErrSrcTypeDeviceDriver'
	list[17] = LF_ENUMERATE, public, value = 17, name = 'WheaErrSrcTypeSea'
	list[18] = LF_ENUMERATE, public, value = 18, name = 'WheaErrSrcTypeSei'
	list[19] = LF_ENUMERATE, public, value = 19, name = 'WheaErrSrcTypeMax'

0x1052 : Length = 70, Leaf = 0x1507 LF_ENUM
	# members = 20,  type = T_INT4(0074) field list type 0x1051
	enum name = _WHEA_ERROR_SOURCE_TYPE, UDT(0x00001052)

0x1053 : Length = 382, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PoEffectivePowerModeBatterySaver'
	list[1] = LF_ENUMERATE, public, value = 0, name = 'PoEffectivePowerModeEnergySaverHighSavings'
	list[2] = LF_ENUMERATE, public, value = 1, name = 'PoEffectivePowerModeBetterBattery'
	list[3] = LF_ENUMERATE, public, value = 1, name = 'PoEffectivePowerModeEnergySaverStandard'
	list[4] = LF_ENUMERATE, public, value = 2, name = 'PoEffectivePowerModeBalanced'
	list[5] = LF_ENUMERATE, public, value = 3, name = 'PoEffectivePowerModeHighPerformance'
	list[6] = LF_ENUMERATE, public, value = 4, name = 'PoEffectivePowerModeMaxPerformance'
	list[7] = LF_ENUMERATE, public, value = 5, name = 'PoEffectivePowerModeGameMode'
	list[8] = LF_ENUMERATE, public, value = 6, name = 'PoEffectivePowerModeMixedReality'

0x1054 : Length = 74, Leaf = 0x1507 LF_ENUM
	# members = 9,  type = T_INT4(0074) field list type 0x1053
	enum name = _PO_EFFECTIVE_POWER_MODE, UDT(0x00001054)

0x1055 : Length = 54, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'WDF_REQUEST_FORWARD_OPTION_SEND_AND_FORGET'

0x1056 : Length = 94, Leaf = 0x1507 LF_ENUM
	# members = 1,  type = T_INT4(0074) field list type 0x1055
	enum name = _WDF_REQUEST_FORWARD_OPTIONS_FLAGS, UDT(0x00001056)

0x1057 : Length = 170, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfIoTargetOpenUndefined'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfIoTargetOpenUseExistingDevice'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfIoTargetOpenByName'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfIoTargetOpenReopen'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WdfIoTargetOpenLocalTargetByFile'

0x1058 : Length = 74, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x1057
	enum name = _WDF_IO_TARGET_OPEN_TYPE, UDT(0x00001058)

0x1059 : Length = 166, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfIoQueueDispatchInvalid'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfIoQueueDispatchSequential'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfIoQueueDispatchParallel'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfIoQueueDispatchManual'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WdfIoQueueDispatchMax'

0x105a : Length = 78, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x1059
	enum name = _WDF_IO_QUEUE_DISPATCH_TYPE, UDT(0x0000105a)

0x105b : Length = 58, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'KernelMode'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'UserMode'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'MaximumMode'

0x105c : Length = 34, Leaf = 0x1507 LF_ENUM
	# members = 3,  type = T_INT4(0074) field list type 0x105b
	enum name = _MODE, UDT(0x0000105c)

0x105d : Length = 158, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'WdfIoQueueAcceptRequests'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'WdfIoQueueDispatchRequests'
	list[2] = LF_ENUMERATE, public, value = 4, name = 'WdfIoQueueNoRequests'
	list[3] = LF_ENUMERATE, public, value = 8, name = 'WdfIoQueueDriverNoRequests'
	list[4] = LF_ENUMERATE, public, value = 16, name = 'WdfIoQueuePnpHeld'

0x105e : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x105d
	enum name = _WDF_IO_QUEUE_STATE, UDT(0x0000105e)

0x105f : Length = 214, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WdfIoForwardProgressInvalidPolicy'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WdfIoForwardProgressReservedPolicyAlwaysUseReservedRequest'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WdfIoForwardProgressReservedPolicyUseExamine'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WdfIoForwardProgressReservedPolicyPagingIO'

0x1060 : Length = 106, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x105f
	enum name = _WDF_IO_FORWARD_PROGRESS_RESERVED_POLICY, UDT(0x00001060)

0x1061 : Length = 250, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'InterruptPolarityUnknown'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'InterruptActiveHigh'
	list[2] = LF_ENUMERATE, public, value = 1, name = 'InterruptRisingEdge'
	list[3] = LF_ENUMERATE, public, value = 2, name = 'InterruptActiveLow'
	list[4] = LF_ENUMERATE, public, value = 2, name = 'InterruptFallingEdge'
	list[5] = LF_ENUMERATE, public, value = 3, name = 'InterruptActiveBoth'
	list[6] = LF_ENUMERATE, public, value = 3, name = 'InterruptActiveBothTriggerLow'
	list[7] = LF_ENUMERATE, public, value = 4, name = 'InterruptActiveBothTriggerHigh'

0x1062 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 8,  type = T_INT4(0074) field list type 0x1061
	enum name = _KINTERRUPT_POLARITY, UDT(0x00001062)

0x1063 : Length = 126, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'WdfWmiProviderEventOnly'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'WdfWmiProviderExpensive'
	list[2] = LF_ENUMERATE, public, value = 4, name = 'WdfWmiProviderTracing'
	list[3] = LF_ENUMERATE, public, value = 7, name = 'WdfWmiProviderValidFlags'

0x1064 : Length = 70, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x1063
	enum name = _WDF_WMI_PROVIDER_FLAGS, UDT(0x00001064)

0x1065 : Length = 30, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 2, name = 'MmFrameBufferCached'

0x1066 : Length = 74, Leaf = 0x1507 LF_ENUM
	# members = 1,  type = T_INT4(0074) field list type 0x1065
	enum name = _MEMORY_CACHING_TYPE_ORIG, UDT(0x00001066)

0x1067 : Length = 190, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'MmNonCached'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'MmCached'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'MmWriteCombined'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'MmHardwareCoherentCached'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'MmNonCachedUnordered'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'MmUSWCCached'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'MmMaximumCacheType'
	list[7] = LF_ENUMERATE, public, value = (LF_CHAR) -1(0xFF), name = 'MmNotMapped'

0x1068 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 8,  type = T_INT4(0074) field list type 0x1067
	enum name = _MEMORY_CACHING_TYPE, UDT(0x00001068)

0x1069 : Length = 706, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'NonPagedPool'
	list[1] = LF_ENUMERATE, public, value = 0, name = 'NonPagedPoolExecute'
	list[2] = LF_ENUMERATE, public, value = 1, name = 'PagedPool'
	list[3] = LF_ENUMERATE, public, value = 2, name = 'NonPagedPoolMustSucceed'
	list[4] = LF_ENUMERATE, public, value = 3, name = 'DontUseThisType'
	list[5] = LF_ENUMERATE, public, value = 4, name = 'NonPagedPoolCacheAligned'
	list[6] = LF_ENUMERATE, public, value = 5, name = 'PagedPoolCacheAligned'
	list[7] = LF_ENUMERATE, public, value = 6, name = 'NonPagedPoolCacheAlignedMustS'
	list[8] = LF_ENUMERATE, public, value = 7, name = 'MaxPoolType'
	list[9] = LF_ENUMERATE, public, value = 0, name = 'NonPagedPoolBase'
	list[10] = LF_ENUMERATE, public, value = 2, name = 'NonPagedPoolBaseMustSucceed'
	list[11] = LF_ENUMERATE, public, value = 4, name = 'NonPagedPoolBaseCacheAligned'
	list[12] = LF_ENUMERATE, public, value = 6, name = 'NonPagedPoolBaseCacheAlignedMustS'
	list[13] = LF_ENUMERATE, public, value = 32, name = 'NonPagedPoolSession'
	list[14] = LF_ENUMERATE, public, value = 33, name = 'PagedPoolSession'
	list[15] = LF_ENUMERATE, public, value = 34, name = 'NonPagedPoolMustSucceedSession'
	list[16] = LF_ENUMERATE, public, value = 35, name = 'DontUseThisTypeSession'
	list[17] = LF_ENUMERATE, public, value = 36, name = 'NonPagedPoolCacheAlignedSession'
	list[18] = LF_ENUMERATE, public, value = 37, name = 'PagedPoolCacheAlignedSession'
	list[19] = LF_ENUMERATE, public, value = 38, name = 'NonPagedPoolCacheAlignedMustSSession'
	list[20] = LF_ENUMERATE, public, value = 512, name = 'NonPagedPoolNx'
	list[21] = LF_ENUMERATE, public, value = 516, name = 'NonPagedPoolNxCacheAligned'
	list[22] = LF_ENUMERATE, public, value = 544, name = 'NonPagedPoolSessionNx'

0x106a : Length = 46, Leaf = 0x1507 LF_ENUM
	# members = 23,  type = T_INT4(0074) field list type 0x1069
	enum name = _POOL_TYPE, UDT(0x0000106a)

0x106b : Length = 1794, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'RegNtDeleteKey'
	list[1] = LF_ENUMERATE, public, value = 0, name = 'RegNtPreDeleteKey'
	list[2] = LF_ENUMERATE, public, value = 1, name = 'RegNtSetValueKey'
	list[3] = LF_ENUMERATE, public, value = 1, name = 'RegNtPreSetValueKey'
	list[4] = LF_ENUMERATE, public, value = 2, name = 'RegNtDeleteValueKey'
	list[5] = LF_ENUMERATE, public, value = 2, name = 'RegNtPreDeleteValueKey'
	list[6] = LF_ENUMERATE, public, value = 3, name = 'RegNtSetInformationKey'
	list[7] = LF_ENUMERATE, public, value = 3, name = 'RegNtPreSetInformationKey'
	list[8] = LF_ENUMERATE, public, value = 4, name = 'RegNtRenameKey'
	list[9] = LF_ENUMERATE, public, value = 4, name = 'RegNtPreRenameKey'
	list[10] = LF_ENUMERATE, public, value = 5, name = 'RegNtEnumerateKey'
	list[11] = LF_ENUMERATE, public, value = 5, name = 'RegNtPreEnumerateKey'
	list[12] = LF_ENUMERATE, public, value = 6, name = 'RegNtEnumerateValueKey'
	list[13] = LF_ENUMERATE, public, value = 6, name = 'RegNtPreEnumerateValueKey'
	list[14] = LF_ENUMERATE, public, value = 7, name = 'RegNtQueryKey'
	list[15] = LF_ENUMERATE, public, value = 7, name = 'RegNtPreQueryKey'
	list[16] = LF_ENUMERATE, public, value = 8, name = 'RegNtQueryValueKey'
	list[17] = LF_ENUMERATE, public, value = 8, name = 'RegNtPreQueryValueKey'
	list[18] = LF_ENUMERATE, public, value = 9, name = 'RegNtQueryMultipleValueKey'
	list[19] = LF_ENUMERATE, public, value = 9, name = 'RegNtPreQueryMultipleValueKey'
	list[20] = LF_ENUMERATE, public, value = 10, name = 'RegNtPreCreateKey'
	list[21] = LF_ENUMERATE, public, value = 11, name = 'RegNtPostCreateKey'
	list[22] = LF_ENUMERATE, public, value = 12, name = 'RegNtPreOpenKey'
	list[23] = LF_ENUMERATE, public, value = 13, name = 'RegNtPostOpenKey'
	list[24] = LF_ENUMERATE, public, value = 14, name = 'RegNtKeyHandleClose'
	list[25] = LF_ENUMERATE, public, value = 14, name = 'RegNtPreKeyHandleClose'
	list[26] = LF_ENUMERATE, public, value = 15, name = 'RegNtPostDeleteKey'
	list[27] = LF_ENUMERATE, public, value = 16, name = 'RegNtPostSetValueKey'
	list[28] = LF_ENUMERATE, public, value = 17, name = 'RegNtPostDeleteValueKey'
	list[29] = LF_ENUMERATE, public, value = 18, name = 'RegNtPostSetInformationKey'
	list[30] = LF_ENUMERATE, public, value = 19, name = 'RegNtPostRenameKey'
	list[31] = LF_ENUMERATE, public, value = 20, name = 'RegNtPostEnumerateKey'
	list[32] = LF_ENUMERATE, public, value = 21, name = 'RegNtPostEnumerateValueKey'
	list[33] = LF_ENUMERATE, public, value = 22, name = 'RegNtPostQueryKey'
	list[34] = LF_ENUMERATE, public, value = 23, name = 'RegNtPostQueryValueKey'
	list[35] = LF_ENUMERATE, public, value = 24, name = 'RegNtPostQueryMultipleValueKey'
	list[36] = LF_ENUMERATE, public, value = 25, name = 'RegNtPostKeyHandleClose'
	list[37] = LF_ENUMERATE, public, value = 26, name = 'RegNtPreCreateKeyEx'
	list[38] = LF_ENUMERATE, public, value = 27, name = 'RegNtPostCreateKeyEx'
	list[39] = LF_ENUMERATE, public, value = 28, name = 'RegNtPreOpenKeyEx'
	list[40] = LF_ENUMERATE, public, value = 29, name = 'RegNtPostOpenKeyEx'
	list[41] = LF_ENUMERATE, public, value = 30, name = 'RegNtPreFlushKey'
	list[42] = LF_ENUMERATE, public, value = 31, name = 'RegNtPostFlushKey'
	list[43] = LF_ENUMERATE, public, value = 32, name = 'RegNtPreLoadKey'
	list[44] = LF_ENUMERATE, public, value = 33, name = 'RegNtPostLoadKey'
	list[45] = LF_ENUMERATE, public, value = 34, name = 'RegNtPreUnLoadKey'
	list[46] = LF_ENUMERATE, public, value = 35, name = 'RegNtPostUnLoadKey'
	list[47] = LF_ENUMERATE, public, value = 36, name = 'RegNtPreQueryKeySecurity'
	list[48] = LF_ENUMERATE, public, value = 37, name = 'RegNtPostQueryKeySecurity'
	list[49] = LF_ENUMERATE, public, value = 38, name = 'RegNtPreSetKeySecurity'
	list[50] = LF_ENUMERATE, public, value = 39, name = 'RegNtPostSetKeySecurity'
	list[51] = LF_ENUMERATE, public, value = 40, name = 'RegNtCallbackObjectContextCleanup'
	list[52] = LF_ENUMERATE, public, value = 41, name = 'RegNtPreRestoreKey'
	list[53] = LF_ENUMERATE, public, value = 42, name = 'RegNtPostRestoreKey'
	list[54] = LF_ENUMERATE, public, value = 43, name = 'RegNtPreSaveKey'
	list[55] = LF_ENUMERATE, public, value = 44, name = 'RegNtPostSaveKey'
	list[56] = LF_ENUMERATE, public, value = 45, name = 'RegNtPreReplaceKey'
	list[57] = LF_ENUMERATE, public, value = 46, name = 'RegNtPostReplaceKey'
	list[58] = LF_ENUMERATE, public, value = 47, name = 'RegNtPreQueryKeyName'
	list[59] = LF_ENUMERATE, public, value = 48, name = 'RegNtPostQueryKeyName'
	list[60] = LF_ENUMERATE, public, value = 49, name = 'RegNtPreSaveMergedKey'
	list[61] = LF_ENUMERATE, public, value = 50, name = 'RegNtPostSaveMergedKey'
	list[62] = LF_ENUMERATE, public, value = 51, name = 'MaxRegNtNotifyClass'

0x106c : Length = 58, Leaf = 0x1507 LF_ENUM
	# members = 63,  type = T_INT4(0074) field list type 0x106b
	enum name = _REG_NOTIFY_CLASS, UDT(0x0000106c)

0x106d : Length = 78, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'LowPagePriority'
	list[1] = LF_ENUMERATE, public, value = 16, name = 'NormalPagePriority'
	list[2] = LF_ENUMERATE, public, value = 32, name = 'HighPagePriority'

0x106e : Length = 114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'UsbdPipeTypeControl'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'UsbdPipeTypeIsochronous'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'UsbdPipeTypeBulk'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'UsbdPipeTypeInterrupt'

0x106f : Length = 58, Leaf = 0x1507 LF_ENUM
	# members = 3,  type = T_INT4(0074) field list type 0x106d
	enum name = _MM_PAGE_PRIORITY, UDT(0x0000106f)

0x1070 : Length = 54, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x106e
	enum name = _USBD_PIPE_TYPE, UDT(0x00001070)

0x1071 : Length = 386, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'L2CAP_Reserved'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'L2CAP_Command_Reject'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'L2CAP_Connection_Request'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'L2CAP_Connection_Response'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'L2CAP_Configuration_Request'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'L2CAP_Configuration_Response'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'L2CAP_Disconnection_Request'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'L2CAP_Disconnection_Response'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'L2CAP_Echo_Request'
	list[9] = LF_ENUMERATE, public, value = 9, name = 'L2CAP_Echo_Response'
	list[10] = LF_ENUMERATE, public, value = 10, name = 'L2CAP_Information_Request'
	list[11] = LF_ENUMERATE, public, value = 11, name = 'L2CAP_Information_Response'

0x1072 : Length = 86, Leaf = 0x1507 LF_ENUM
	# members = 12,  type = T_INT4(0074) field list type 0x1071
	enum name = _L2CAP_SIGNALLING_COMMAND_CODE, UDT(0x00001072)

0x1073 : Length = 50, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, FORWARD REF, Size = 0	,class name = _LARGE_INTEGER, unique name = .?AT_LARGE_INTEGER@@, UDT(0x0000170c)

0x1074 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = T_UQUAD(0023)

0x1075 : Length = 38, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1073, offset = 0
		member name = 'Start'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Length'

0x1076 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1074

0x1077 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1075, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1078 : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type T_UQUAD(0023)

0x1079 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1078

0x107a : Length = 58, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Level'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Vector'
	list[2] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'Affinity'

0x107b : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type T_UCHAR(0020)

0x107c : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x107a, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x107d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x107B

0x107e : Length = 86, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Reserved'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'MessageCount'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Vector'
	list[3] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'Affinity'

0x107f : Length = 286, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 0
		member name = 'RegistrationHandle'
	list[1] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'Logger'
	list[2] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 16
		member name = 'MatchAnyKeyword'
	list[3] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 24
		member name = 'MatchAllKeyword'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'Flags'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'IsEnabled'
	list[6] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 40
		member name = 'Level'
	list[7] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 41
		member name = 'Reserve'
	list[8] = LF_MEMBER, public, type = T_USHORT(0021), offset = 42
		member name = 'EnableBitsCount'
	list[9] = LF_MEMBER, public, type = T_64PULONG(0622), offset = 48
		member name = 'EnableBitMask'
	list[10] = LF_MEMBER, public, type = 0x1079, offset = 56
		member name = 'EnableKeyWords'
	list[11] = LF_MEMBER, public, type = 0x107D, offset = 64
		member name = 'EnableLevel'

0x1080 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x107e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1081 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 12,  field list type 0x107f, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 72, class name = _MCGEN_TRACE_CONTEXT, unique name = .?AU_MCGEN_TRACE_CONTEXT@@, UDT(0x00001081)

0x1082 : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1080, offset = 0
		member name = 'Raw'
	list[1] = LF_MEMBER, public, type = 0x107C, offset = 0
		member name = 'Translated'

0x1083 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1082, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1084 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1076

0x1085 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = T_64PVOID(0603)

0x1086 : Length = 58, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Channel'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Port'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Reserved1'

0x1087 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1085

0x1088 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1086, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1089 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _UNICODE_STRING, unique name = .?AU_UNICODE_STRING@@, UDT(0x000010b7)

0x108a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1089

0x108b : Length = 130, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Channel'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'RequestLine'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 8
		member name = 'TransferWidth'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 9
		member name = 'Reserved1'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 10
		member name = 'Reserved2'
	list[5] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 11
		member name = 'Reserved3'

0x108c : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = T_64PULONG(0622)
	list[1] = T_64PULONG(0622)
	list[2] = T_64PULONG(0622)
	list[3] = 0x108A

0x108d : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 6,  field list type 0x108b, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x108e : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x108c

0x108f : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_ULONG(0022)
	Index type = T_UQUAD(0023)
	length = 12
	Name = 

0x1090 : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type T_RCHAR(0070)

0x1091 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1090

0x1092 : Length = 18, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x108F, offset = 0
		member name = 'Data'

0x1093 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_OBJECT_CONTEXT_TYPE_INFO, unique name = .?AU_WDF_OBJECT_CONTEXT_TYPE_INFO@@, UDT(0x0000109e)

0x1094 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1092, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1095 : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type 0x1093

0x1096 : Length = 58, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Start'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Length'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Reserved'

0x1097 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1095

0x1098 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1096, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1099 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x1097, Call type = C Near
	Func attr = none
	# Parms = 0, Arg list type = 0x100e

0x109a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1099

0x109b : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'DataSize'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Reserved1'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Reserved2'

0x109c : Length = 130, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = 0x1091, offset = 8
		member name = 'ContextName'
	list[2] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 16
		member name = 'ContextSize'
	list[3] = LF_MEMBER, public, type = 0x1097, offset = 24
		member name = 'UniqueType'
	list[4] = LF_MEMBER, public, type = 0x109A, offset = 32
		member name = 'EvtDriverGetUniqueContextType'

0x109d : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x109b, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x109e : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x109c, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 40, class name = _WDF_OBJECT_CONTEXT_TYPE_INFO, unique name = .?AU_WDF_OBJECT_CONTEXT_TYPE_INFO@@, UDT(0x0000109e)

0x109f : Length = 38, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1073, offset = 0
		member name = 'Start'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Length40'

0x10a0 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x109f, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x10a1 : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _EVENT_DATA_DESCRIPTOR, unique name = .?AU_EVENT_DATA_DESCRIPTOR@@, UDT(0x000010f1)

0x10a2 : Length = 38, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1073, offset = 0
		member name = 'Start'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Length48'

0x10a3 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10A1

0x10a4 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x10a2, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x10a5 : Length = 46, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFKEY__, unique name = .?AUWDFKEY__@@, UDT(0x000011c7)

0x10a6 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10A5

0x10a7 : Length = 38, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1073, offset = 0
		member name = 'Start'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Length64'

0x10a8 : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type 0x1089

0x10a9 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x10a7, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x10aa : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10A8

0x10ab : Length = 118, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'Class'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'Type'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'Reserved1'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'Reserved2'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'IdLowPart'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'IdHighPart'

0x10ac : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFSTRING__, unique name = .?AUWDFSTRING__@@, UDT(0x000011ea)

0x10ad : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 6,  field list type 0x10ab, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x10ae : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10AC

0x10af : Length = 298, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1077, offset = 0
		member name = 'Generic'
	list[1] = LF_MEMBER, public, type = 0x1077, offset = 0
		member name = 'Port'
	list[2] = LF_MEMBER, public, type = 0x107C, offset = 0
		member name = 'Interrupt'
	list[3] = LF_MEMBER, public, type = 0x1083, offset = 0
		member name = 'MessageInterrupt'
	list[4] = LF_MEMBER, public, type = 0x1077, offset = 0
		member name = 'Memory'
	list[5] = LF_MEMBER, public, type = 0x1088, offset = 0
		member name = 'Dma'
	list[6] = LF_MEMBER, public, type = 0x108D, offset = 0
		member name = 'DmaV3'
	list[7] = LF_MEMBER, public, type = 0x1094, offset = 0
		member name = 'DevicePrivate'
	list[8] = LF_MEMBER, public, type = 0x1098, offset = 0
		member name = 'BusNumber'
	list[9] = LF_MEMBER, public, type = 0x109D, offset = 0
		member name = 'DeviceSpecificData'
	list[10] = LF_MEMBER, public, type = 0x10A0, offset = 0
		member name = 'Memory40'
	list[11] = LF_MEMBER, public, type = 0x10A4, offset = 0
		member name = 'Memory48'
	list[12] = LF_MEMBER, public, type = 0x10A9, offset = 0
		member name = 'Memory64'
	list[13] = LF_MEMBER, public, type = 0x10AD, offset = 0
		member name = 'Connection'

0x10b0 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1017
	list[1] = 0x10A6
	list[2] = 0x10AA
	list[3] = 0x10AE

0x10b1 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x10b0

0x10b2 : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 14,  field list type 0x10af, SEALED, Size = 16	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x10b3 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10B1

0x10b4 : Length = 74, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'ShareDisposition'
	list[2] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Flags'
	list[3] = LF_MEMBER, public, type = 0x10B2, offset = 4
		member name = 'u'

0x10b5 : Length = 66, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'MaximumLength'
	list[2] = LF_MEMBER, public, type = T_64PWCHAR(0671), offset = 8
		member name = 'Buffer'

0x10b6 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x10b4, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 20, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR, unique name = .?AU_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x00001632)

0x10b7 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x10b5, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _UNICODE_STRING, unique name = .?AU_UNICODE_STRING@@, UDT(0x000010b7)

0x10b8 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFDEVICE__, unique name = .?AUWDFDEVICE__@@, UDT(0x000010cc)

0x10b9 : Length = 114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'SecurityAnonymous'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'SecurityIdentification'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'SecurityImpersonation'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'SecurityDelegation'

0x10ba : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10B8

0x10bb : Length = 82, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x10b9
	enum name = _SECURITY_IMPERSONATION_LEVEL, UDT(0x000010bb)

0x10bc : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x10BA

0x10bd : Length = 110, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'ClientToken'
	list[1] = LF_MEMBER, public, type = 0x10BB, offset = 8
		member name = 'ImpersonationLevel'
	list[2] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 16
		member name = 'PrimaryToken'
	list[3] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'ProcessAuditId'

0x10be : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x10bc

0x10bf : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFDEVICE_INIT, unique name = .?AUWDFDEVICE_INIT@@

0x10c0 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x10bd, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _SECURITY_SUBJECT_CONTEXT, unique name = .?AU_SECURITY_SUBJECT_CONTEXT@@, UDT(0x000010c0)

0x10c1 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10BF

0x10c2 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1017
	list[1] = 0x10C1

0x10c3 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x10c2

0x10c4 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR, unique name = .?AU_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x00001632)

0x10c5 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10C3

0x10c6 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _POWER_SEQUENCE, unique name = .?AU_POWER_SEQUENCE@@, UDT(0x00001435)

0x10c7 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x10C4
	Index type = T_UQUAD(0023)
	length = 20
	Name = 

0x10c8 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10C6

0x10c9 : Length = 90, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Version'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Revision'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Count'
	list[3] = LF_MEMBER, public, type = 0x10C7, offset = 8
		member name = 'PartialDescriptors'

0x10ca : Length = 22, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_INT4(0074), offset = 0
		member name = 'unused'

0x10cb : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x10c9, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 28, class name = _CM_PARTIAL_RESOURCE_LIST, unique name = .?AU_CM_PARTIAL_RESOURCE_LIST@@, UDT(0x000010cb)

0x10cc : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFDEVICE__, unique name = .?AUWDFDEVICE__@@, UDT(0x000010cc)

0x10cd : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Offset'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Length'
	list[2] = LF_MEMBER, public, type = T_LONG(0012), offset = 8
		member name = 'Status'

0x10ce : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10BE

0x10cf : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _LUID_AND_ATTRIBUTES, unique name = .?AU_LUID_AND_ATTRIBUTES@@, UDT(0x000010f2)

0x10d0 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x10bc

0x10d1 : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x10cd, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _USBD_ISO_PACKET_DESCRIPTOR, unique name = .?AU_USBD_ISO_PACKET_DESCRIPTOR@@, UDT(0x000010d1)

0x10d2 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10D0

0x10d3 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x10CF
	Index type = T_UQUAD(0023)
	length = 12
	Name = 

0x10d4 : Length = 70, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'PrivilegeCount'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Control'
	list[2] = LF_MEMBER, public, type = 0x10D3, offset = 8
		member name = 'Privilege'

0x10d5 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _GUID, unique name = .?AU_GUID@@, UDT(0x000010f8)

0x10d6 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x10d4, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 20, class name = _PRIVILEGE_SET, unique name = .?AU_PRIVILEGE_SET@@, UDT(0x000010d6)

0x10d7 : Length = 34, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x10D5, offset = 0
		member name = 'fmtid'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'pid'

0x10d8 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x10d7, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 20, class name = _DEVPROPKEY, unique name = .?AU_DEVPROPKEY@@, UDT(0x000010d8)

0x10d9 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x10CF
	Index type = T_UQUAD(0023)
	length = 36
	Name = 

0x10da : Length = 70, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'PrivilegeCount'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Control'
	list[2] = LF_MEMBER, public, type = 0x10D9, offset = 8
		member name = 'Privilege'

0x10db : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x10da, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 44, class name = _INITIAL_PRIVILEGE_SET, unique name = .?AU_INITIAL_PRIVILEGE_SET@@, UDT(0x000010db)

0x10dc : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DEVPROPKEY, unique name = .?AU_DEVPROPKEY@@, UDT(0x000010d8)

0x10dd : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type 0x10DC

0x10de : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10DD

0x10df : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DRIVER_OBJECT, unique name = .?AU_DRIVER_OBJECT@@, UDT(0x0000130c)

0x10e0 : Length = 74, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = 0x10DE, offset = 8
		member name = 'PropertyKey'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'Lcid'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 20
		member name = 'Flags'

0x10e1 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10DF

0x10e2 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x10e0, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _WDF_DEVICE_PROPERTY_DATA, unique name = .?AU_WDF_DEVICE_PROPERTY_DATA@@, UDT(0x000010e2)

0x10e3 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DEVICE_OBJECT, unique name = .?AU_DEVICE_OBJECT@@, UDT(0x0000172b)

0x10e4 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10E3

0x10e5 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = T_64PVOID(0603)
	list[2] = 0x1097

0x10e6 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x10e5

0x10e7 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10E1
	list[1] = 0x10E4

0x10e8 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10E6

0x10e9 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x10e7

0x10ea : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1087

0x10eb : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10E9

0x10ec : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_REQUIREMENTS_LIST, unique name = .?AU_IO_RESOURCE_REQUIREMENTS_LIST@@, UDT(0x0000144f)

0x10ed : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10EC

0x10ee : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _LUID, unique name = .?AU_LUID@@, UDT(0x000013ad)

0x10ef : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x10EE, offset = 0
		member name = 'Luid'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Attributes'

0x10f0 : Length = 110, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 0
		member name = 'Ptr'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'Reserved'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 12
		member name = 'Type'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 13
		member name = 'Reserved1'
	list[5] = LF_MEMBER, public, type = T_USHORT(0021), offset = 14
		member name = 'Reserved2'

0x10f1 : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 6,  field list type 0x10f0, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _EVENT_DATA_DESCRIPTOR, unique name = .?AU_EVENT_DATA_DESCRIPTOR@@, UDT(0x000010f1)

0x10f2 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x10ef, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _LUID_AND_ATTRIBUTES, unique name = .?AU_LUID_AND_ATTRIBUTES@@, UDT(0x000010f2)

0x10f3 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x100F

0x10f4 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_UCHAR(0020)
	Index type = T_UQUAD(0023)
	length = 8
	Name = 

0x10f5 : Length = 354, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = (LF_CHAR) -1(0xFF), name = 'InterfaceTypeUndefined'
	list[1] = LF_ENUMERATE, public, value = 0, name = 'Internal'
	list[2] = LF_ENUMERATE, public, value = 1, name = 'Isa'
	list[3] = LF_ENUMERATE, public, value = 2, name = 'Eisa'
	list[4] = LF_ENUMERATE, public, value = 3, name = 'MicroChannel'
	list[5] = LF_ENUMERATE, public, value = 4, name = 'TurboChannel'
	list[6] = LF_ENUMERATE, public, value = 5, name = 'PCIBus'
	list[7] = LF_ENUMERATE, public, value = 6, name = 'VMEBus'
	list[8] = LF_ENUMERATE, public, value = 7, name = 'NuBus'
	list[9] = LF_ENUMERATE, public, value = 8, name = 'PCMCIABus'
	list[10] = LF_ENUMERATE, public, value = 9, name = 'CBus'
	list[11] = LF_ENUMERATE, public, value = 10, name = 'MPIBus'
	list[12] = LF_ENUMERATE, public, value = 11, name = 'MPSABus'
	list[13] = LF_ENUMERATE, public, value = 12, name = 'ProcessorInternal'
	list[14] = LF_ENUMERATE, public, value = 13, name = 'InternalPowerBus'
	list[15] = LF_ENUMERATE, public, value = 14, name = 'PNPISABus'
	list[16] = LF_ENUMERATE, public, value = 15, name = 'PNPBus'
	list[17] = LF_ENUMERATE, public, value = 16, name = 'Vmcs'
	list[18] = LF_ENUMERATE, public, value = 17, name = 'ACPIBus'
	list[19] = LF_ENUMERATE, public, value = 18, name = 'MaximumInterfaceType'

0x10f6 : Length = 54, Leaf = 0x1507 LF_ENUM
	# members = 20,  type = T_INT4(0074) field list type 0x10f5
	enum name = _INTERFACE_TYPE, UDT(0x000010f6)

0x10f7 : Length = 66, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Data1'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 4
		member name = 'Data2'
	list[2] = LF_MEMBER, public, type = T_USHORT(0021), offset = 6
		member name = 'Data3'
	list[3] = LF_MEMBER, public, type = 0x10F4, offset = 8
		member name = 'Data4'

0x10f8 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x10f7, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _GUID, unique name = .?AU_GUID@@, UDT(0x000010f8)

0x10f9 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_LIST, unique name = .?AU_CM_PARTIAL_RESOURCE_LIST@@, UDT(0x000010cb)

0x10fa : Length = 78, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x10F6, offset = 0
		member name = 'InterfaceType'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'BusNumber'
	list[2] = LF_MEMBER, public, type = 0x10F9, offset = 8
		member name = 'PartialResourceList'

0x10fb : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x10fa, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 36, class name = _CM_FULL_RESOURCE_DESCRIPTOR, unique name = .?AU_CM_FULL_RESOURCE_DESCRIPTOR@@, UDT(0x000010fb)

0x10fc : Length = 130, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Id'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'Version'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'Channel'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 4
		member name = 'Level'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 5
		member name = 'Opcode'
	list[5] = LF_MEMBER, public, type = T_USHORT(0021), offset = 6
		member name = 'Task'
	list[6] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'Keyword'

0x10fd : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 7,  field list type 0x10fc, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _EVENT_DESCRIPTOR, unique name = .?AU_EVENT_DESCRIPTOR@@, UDT(0x000010fd)

0x10fe : Length = 174, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'MaximumPacketSize'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'EndpointAddress'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'Interval'
	list[3] = LF_MEMBER, public, type = 0x1070, offset = 4
		member name = 'PipeType'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'PipeHandle'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'MaximumTransferSize'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 20
		member name = 'PipeFlags'

0x10ff : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR, unique name = .?AU_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001635)

0x1100 : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 7,  field list type 0x10fe, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _USBD_PIPE_INFORMATION, unique name = .?AU_USBD_PIPE_INFORMATION@@, UDT(0x00001100)

0x1101 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x10FF
	Index type = T_UQUAD(0023)
	length = 32
	Name = 

0x1102 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_DEVICE_PROPERTY_DATA, unique name = .?AU_WDF_DEVICE_PROPERTY_DATA@@, UDT(0x000010e2)

0x1103 : Length = 82, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Version'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Revision'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Count'
	list[3] = LF_MEMBER, public, type = 0x1101, offset = 8
		member name = 'Descriptors'

0x1104 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1102

0x1105 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x1022
	list[2] = T_ULONG(0022)

0x1106 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1103, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 40, class name = _IO_RESOURCE_LIST, unique name = .?AU_IO_RESOURCE_LIST@@, UDT(0x00001106)

0x1107 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1105

0x1108 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1107

0x1109 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _FILE_OBJECT, unique name = .?AU_FILE_OBJECT@@, UDT(0x000013c4)

0x110a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1109

0x110b : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_OBJECT_ATTRIBUTES, unique name = .?AU_WDF_OBJECT_ATTRIBUTES@@, UDT(0x00001177)

0x110c : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _MDL, unique name = .?AU_MDL@@, UDT(0x000014b6)

0x110d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x110B

0x110e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x110C

0x110f : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFMEMORY__, unique name = .?AUWDFMEMORY__@@, UDT(0x000011d9)

0x1110 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x110A
	list[1] = 0x110E
	list[2] = 0x10E4

0x1111 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x110F

0x1112 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1110

0x1113 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1111

0x1114 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1073

0x1115 : Length = 34, Leaf = 0x1201 LF_ARGLIST argument count = 7
	list[0] = 0x1017
	list[1] = 0x10C1
	list[2] = 0x1104
	list[3] = 0x106A
	list[4] = 0x110D
	list[5] = 0x1113
	list[6] = T_64PULONG(0622)

0x1116 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x110E

0x1117 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 7, Arg list type = 0x1115

0x1118 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STATUS_BLOCK, unique name = .?AU_IO_STATUS_BLOCK@@, UDT(0x000012a5)

0x1119 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1117

0x111a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1118

0x111b : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _MCGEN_TRACE_CONTEXT, unique name = .?AU_MCGEN_TRACE_CONTEXT@@, UDT(0x00001081)

0x111c : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x111B

0x111d : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _COMPRESSED_DATA_INFO, unique name = .?AU_COMPRESSED_DATA_INFO@@

0x111e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x111D

0x111f : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1017
	list[1] = T_64PVOID(0603)

0x1120 : Length = 46, Leaf = 0x1201 LF_ARGLIST argument count = 10
	list[0] = 0x110A
	list[1] = 0x1114
	list[2] = T_ULONG(0022)
	list[3] = T_ULONG(0022)
	list[4] = T_64PVOID(0603)
	list[5] = 0x1116
	list[6] = 0x111A
	list[7] = 0x111E
	list[8] = T_ULONG(0022)
	list[9] = 0x10E4

0x1121 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x111f

0x1122 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 10, Arg list type = 0x1120

0x1123 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1121

0x1124 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x110A
	list[1] = 0x10E4

0x1125 : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type 0x10D5

0x1126 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1125

0x1127 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1126
	list[1] = T_UCHAR(0020)
	list[2] = T_64PVOID(0603)
	list[3] = T_64PVOID(0603)

0x1128 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1124

0x1129 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1128

0x112a : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1127

0x112b : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x112A

0x112c : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _USB_CONFIGURATION_DESCRIPTOR, unique name = .?AU_USB_CONFIGURATION_DESCRIPTOR@@, UDT(0x00001332)

0x112d : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IRP, unique name = .?AU_IRP@@, UDT(0x00001716)

0x112e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x112C

0x112f : Length = 46, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _EPROCESS, unique name = .?AU_EPROCESS@@

0x1130 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x112D

0x1131 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x112F

0x1132 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _SCATTER_GATHER_LIST, unique name = .?AU_SCATTER_GATHER_LIST@@

0x1133 : Length = 42, Leaf = 0x1201 LF_ARGLIST argument count = 9
	list[0] = 0x110A
	list[1] = 0x1114
	list[2] = 0x1114
	list[3] = 0x1131
	list[4] = T_ULONG(0022)
	list[5] = T_UCHAR(0020)
	list[6] = T_UCHAR(0020)
	list[7] = 0x111A
	list[8] = 0x10E4

0x1134 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1132

0x1135 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 9, Arg list type = 0x1133

0x1136 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x10E4
	list[1] = 0x1130
	list[2] = 0x1134
	list[3] = T_64PVOID(0603)

0x1137 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1136

0x1138 : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _USBD_PIPE_INFORMATION, unique name = .?AU_USBD_PIPE_INFORMATION@@, UDT(0x00001100)

0x1139 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x110A

0x113a : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x1138
	Index type = T_UQUAD(0023)
	length = 24
	Name = 

0x113b : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1137

0x113c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1139

0x113d : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFCOLLECTION__, unique name = .?AUWDFCOLLECTION__@@, UDT(0x0000113d)

0x113e : Length = 222, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'InterfaceNumber'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'AlternateSetting'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 4
		member name = 'Class'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 5
		member name = 'SubClass'
	list[5] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 6
		member name = 'Protocol'
	list[6] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 7
		member name = 'Reserved'
	list[7] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'InterfaceHandle'
	list[8] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'NumberOfPipes'
	list[9] = LF_MEMBER, public, type = 0x113A, offset = 24
		member name = 'Pipes'

0x113f : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 10,  field list type 0x113e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 48, class name = _USBD_INTERFACE_INFORMATION, unique name = .?AU_USBD_INTERFACE_INFORMATION@@, UDT(0x0000113f)

0x1140 : Length = 42, Leaf = 0x1201 LF_ARGLIST argument count = 9
	list[0] = 0x110A
	list[1] = T_UCHAR(0020)
	list[2] = T_64PVOID(0603)
	list[3] = T_ULONG(0022)
	list[4] = T_64PVOID(0603)
	list[5] = T_ULONG(0022)
	list[6] = T_ULONG(0022)
	list[7] = 0x111A
	list[8] = 0x10E4

0x1141 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10AE

0x1142 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 9, Arg list type = 0x1140

0x1143 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1017
	list[1] = 0x10AA
	list[2] = 0x110D
	list[3] = 0x1141

0x1144 : Length = 110, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = 0x10BB, offset = 4
		member name = 'ImpersonationLevel'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 8
		member name = 'ContextTrackingMode'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 9
		member name = 'EffectiveOnly'

0x1145 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1143

0x1146 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1145

0x1147 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1144, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _SECURITY_QUALITY_OF_SERVICE, unique name = .?AU_SECURITY_QUALITY_OF_SERVICE@@, UDT(0x00001147)

0x1148 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = T_UQUAD(0023)
	list[1] = T_ULONG(0022)
	list[2] = 0x1126
	list[3] = T_USHORT(0021)
	list[4] = T_NOTYPE(0000)

0x1149 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x1148

0x114a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1149

0x114b : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _SECURITY_SUBJECT_CONTEXT, unique name = .?AU_SECURITY_SUBJECT_CONTEXT@@, UDT(0x000010c0)

0x114c : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type T_WCHAR(0071)

0x114d : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _INITIAL_PRIVILEGE_SET, unique name = .?AU_INITIAL_PRIVILEGE_SET@@, UDT(0x000010db)

0x114e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x114C

0x114f : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _PRIVILEGE_SET, unique name = .?AU_PRIVILEGE_SET@@, UDT(0x000010d6)

0x1150 : Length = 66, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'DeviceTextDescription'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'DeviceTextLocationInformation'

0x1151 : Length = 58, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x114D, offset = 0
		member name = 'InitialPrivilegeSet'
	list[1] = LF_MEMBER, public, type = 0x114F, offset = 0
		member name = 'PrivilegeSet'

0x1152 : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 2,  field list type 0x1151, SEALED, Size = 44	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x1153 : Length = 450, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x10EE, offset = 0
		member name = 'OperationID'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 8
		member name = 'SecurityEvaluated'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 9
		member name = 'GenerateAudit'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 10
		member name = 'GenerateOnClose'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 11
		member name = 'PrivilegesAllocated'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'Flags'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'RemainingDesiredAccess'
	list[7] = LF_MEMBER, public, type = T_ULONG(0022), offset = 20
		member name = 'PreviouslyGrantedAccess'
	list[8] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'OriginalDesiredAccess'
	list[9] = LF_MEMBER, public, type = 0x114B, offset = 32
		member name = 'SubjectSecurityContext'
	list[10] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 64
		member name = 'SecurityDescriptor'
	list[11] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 72
		member name = 'AuxData'
	list[12] = LF_MEMBER, public, type = 0x1152, offset = 80
		member name = 'Privileges'
	list[13] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 124
		member name = 'AuditPrivileges'
	list[14] = LF_MEMBER, public, type = 0x1089, offset = 128
		member name = 'ObjectName'
	list[15] = LF_MEMBER, public, type = 0x1089, offset = 144
		member name = 'ObjectTypeName'

0x1154 : Length = 58, Leaf = 0x1507 LF_ENUM
	# members = 2,  type = T_INT4(0074) field list type 0x1150
	enum name = DEVICE_TEXT_TYPE, UDT(0x00001154)

0x1155 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 16,  field list type 0x1153, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 160, class name = _ACCESS_STATE, unique name = .?AU_ACCESS_STATE@@, UDT(0x00001650)

0x1156 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10C1

0x1157 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10E4
	list[1] = 0x10E4

0x1158 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10BA

0x1159 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1157

0x115a : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1017
	list[1] = 0x1156
	list[2] = 0x110D
	list[3] = 0x1158

0x115b : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1159

0x115c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x115a

0x115d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x115C

0x115e : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _ACCESS_STATE, unique name = .?AU_ACCESS_STATE@@, UDT(0x00001650)

0x115f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x115E

0x1160 : Length = 174, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'BusQueryDeviceID'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'BusQueryHardwareIDs'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'BusQueryCompatibleIDs'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'BusQueryInstanceID'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'BusQueryDeviceSerialNumber'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'BusQueryContainerID'

0x1161 : Length = 58, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x1160
	enum name = BUS_QUERY_ID_TYPE, UDT(0x00001161)

0x1162 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x110A
	list[1] = T_64PVOID(0603)
	list[2] = T_ULONG(0022)
	list[3] = 0x111A
	list[4] = 0x10E4

0x1163 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x1162

0x1164 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x1022
	list[2] = T_64PVOID(0603)

0x1165 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1163

0x1166 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1164

0x1167 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1166

0x1168 : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _FILE_STANDARD_INFORMATION, unique name = .?AU_FILE_STANDARD_INFORMATION@@, UDT(0x000013ca)

0x1169 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1168

0x116a : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFDRIVER__, unique name = .?AUWDFDRIVER__@@, UDT(0x0000116a)

0x116b : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x110A
	list[1] = T_UCHAR(0020)
	list[2] = 0x1169
	list[3] = 0x111A
	list[4] = 0x10E4

0x116c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x116b

0x116d : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WPP_TRACE_CONTROL_BLOCK, unique name = .?AU_WPP_TRACE_CONTROL_BLOCK@@, UDT(0x000011a0)

0x116e : Length = 34, Leaf = 0x1201 LF_ARGLIST argument count = 7
	list[0] = 0x110A
	list[1] = 0x1114
	list[2] = 0x1114
	list[3] = 0x1131
	list[4] = T_ULONG(0022)
	list[5] = 0x111A
	list[6] = 0x10E4

0x116f : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_UCHAR(0020)
	Index type = T_UQUAD(0023)
	length = 64
	Name = 

0x1170 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 7, Arg list type = 0x116e

0x1171 : Length = 46, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x116D, offset = 0
		member name = 'Control'
	list[1] = LF_MEMBER, public, type = 0x116F, offset = 0
		member name = 'ReserveSpace'

0x1172 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1112

0x1173 : Length = 70, Leaf = 0x1506 LF_UNION
	# members = 2,  field list type 0x1171, SEALED, Size = 64	,class name = WPP_PROJECT_CONTROL_BLOCK, unique name = .?ATWPP_PROJECT_CONTROL_BLOCK@@, UDT(0x00001173)

0x1174 : Length = 98, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Alignment'
	list[2] = LF_MEMBER, public, type = 0x1073, offset = 8
		member name = 'MinimumAddress'
	list[3] = LF_MEMBER, public, type = 0x1073, offset = 16
		member name = 'MaximumAddress'

0x1175 : Length = 226, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = 0x10EA, offset = 8
		member name = 'EvtCleanupCallback'
	list[2] = LF_MEMBER, public, type = 0x10EA, offset = 16
		member name = 'EvtDestroyCallback'
	list[3] = LF_MEMBER, public, type = 0x101D, offset = 24
		member name = 'ExecutionLevel'
	list[4] = LF_MEMBER, public, type = 0x1020, offset = 28
		member name = 'SynchronizationScope'
	list[5] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 32
		member name = 'ParentObject'
	list[6] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 40
		member name = 'ContextSizeOverride'
	list[7] = LF_MEMBER, public, type = 0x1097, offset = 48
		member name = 'ContextTypeInfo'

0x1176 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1174, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1177 : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x1175, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 56, class name = _WDF_OBJECT_ATTRIBUTES, unique name = .?AU_WDF_OBJECT_ATTRIBUTES@@, UDT(0x00001177)

0x1178 : Length = 286, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'IrqPolicyMachineDefault'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'IrqPolicyAllCloseProcessors'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'IrqPolicyOneCloseProcessor'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'IrqPolicyAllProcessorsInMachine'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'IrqPolicySpecifiedProcessors'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'IrqPolicySpreadMessagesAcrossAllProcessors'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'IrqPolicyAllProcessorsInMachineWhenSteered'

0x1179 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFWAITLOCK__, unique name = .?AUWDFWAITLOCK__@@, UDT(0x00001179)

0x117a : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 7,  type = T_INT4(0074) field list type 0x1178
	enum name = _IRQ_DEVICE_POLICY, UDT(0x0000117a)

0x117b : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = T_UCHAR(0020)
	list[1] = T_64PVOID(0603)
	list[2] = T_ULONG(0022)
	list[3] = T_64PVOID(0603)
	list[4] = T_64PVOID(0603)
	list[5] = T_64PULONG(0622)

0x117c : Length = 102, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'IrqPriorityUndefined'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'IrqPriorityLow'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'IrqPriorityNormal'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'IrqPriorityHigh'

0x117d : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x117b

0x117e : Length = 50, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x117c
	enum name = _IRQ_PRIORITY, UDT(0x0000117e)

0x117f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x117D

0x1180 : Length = 138, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'MinimumVector'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'MaximumVector'
	list[2] = LF_MEMBER, public, type = 0x117A, offset = 8
		member name = 'AffinityPolicy'
	list[3] = LF_MEMBER, public, type = 0x117E, offset = 12
		member name = 'PriorityPolicy'
	list[4] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 16
		member name = 'TargetedProcessors'

0x1181 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x108E

0x1182 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x1180, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1183 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _EVENT_DESCRIPTOR, unique name = .?AU_EVENT_DESCRIPTOR@@, UDT(0x000010fd)

0x1184 : Length = 58, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'MinimumChannel'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'MaximumChannel'

0x1185 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1183

0x1186 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1184, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1187 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1017
	list[1] = 0x10A6
	list[2] = 0x10AA
	list[3] = T_64PULONG(0622)

0x1188 : Length = 90, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'RequestLine'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Reserved'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Channel'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'TransferWidth'

0x1189 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1187

0x118a : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1188, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x118b : Length = 90, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'MinBusNumber'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'MaxBusNumber'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'Reserved'

0x118c : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1189

0x118d : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x118b, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x118e : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Priority'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Reserved1'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Reserved2'

0x118f : Length = 138, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'BulkReadPipe'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'IsPsmPatchingEnabled'
	list[2] = LF_MEMBER, public, type = 0x10AE, offset = 16
		member name = 'SymbolicLinkName'
	list[3] = LF_MEMBER, public, type = 0x1111, offset = 24
		member name = 'InstanceId'
	list[4] = LF_MEMBER, public, type = 0x10A6, offset = 32
		member name = 'RegKeyDeviceNode'

0x1190 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x118e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1191 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x118f, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 40, class name = _DEVICE_CONTEXT, unique name = .?AU_DEVICE_CONTEXT@@, UDT(0x00001191)

0x1192 : Length = 102, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length40'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Alignment40'
	list[2] = LF_MEMBER, public, type = 0x1073, offset = 8
		member name = 'MinimumAddress'
	list[3] = LF_MEMBER, public, type = 0x1073, offset = 16
		member name = 'MaximumAddress'

0x1193 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1192, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1194 : Length = 102, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length48'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Alignment48'
	list[2] = LF_MEMBER, public, type = 0x1073, offset = 8
		member name = 'MinimumAddress'
	list[3] = LF_MEMBER, public, type = 0x1073, offset = 16
		member name = 'MaximumAddress'

0x1195 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1194, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1196 : Length = 102, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length64'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Alignment64'
	list[2] = LF_MEMBER, public, type = 0x1073, offset = 8
		member name = 'MinimumAddress'
	list[3] = LF_MEMBER, public, type = 0x1073, offset = 16
		member name = 'MaximumAddress'

0x1197 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFDRIVER__, unique name = .?AUWDFDRIVER__@@, UDT(0x0000116a)

0x1198 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1196, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1199 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1197

0x119a : Length = 262, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1176, offset = 0
		member name = 'Port'
	list[1] = LF_MEMBER, public, type = 0x1176, offset = 0
		member name = 'Memory'
	list[2] = LF_MEMBER, public, type = 0x1182, offset = 0
		member name = 'Interrupt'
	list[3] = LF_MEMBER, public, type = 0x1186, offset = 0
		member name = 'Dma'
	list[4] = LF_MEMBER, public, type = 0x118A, offset = 0
		member name = 'DmaV3'
	list[5] = LF_MEMBER, public, type = 0x1176, offset = 0
		member name = 'Generic'
	list[6] = LF_MEMBER, public, type = 0x1094, offset = 0
		member name = 'DevicePrivate'
	list[7] = LF_MEMBER, public, type = 0x118D, offset = 0
		member name = 'BusNumber'
	list[8] = LF_MEMBER, public, type = 0x1190, offset = 0
		member name = 'ConfigData'
	list[9] = LF_MEMBER, public, type = 0x1193, offset = 0
		member name = 'Memory40'
	list[10] = LF_MEMBER, public, type = 0x1195, offset = 0
		member name = 'Memory48'
	list[11] = LF_MEMBER, public, type = 0x1198, offset = 0
		member name = 'Memory64'
	list[12] = LF_MEMBER, public, type = 0x10AD, offset = 0
		member name = 'Connection'

0x119b : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 13,  field list type 0x119a, SEALED, Size = 24	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x119c : Length = 134, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'Option'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'Type'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'ShareDisposition'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'Spare1'
	list[4] = LF_MEMBER, public, type = T_USHORT(0021), offset = 4
		member name = 'Flags'
	list[5] = LF_MEMBER, public, type = T_USHORT(0021), offset = 6
		member name = 'Spare2'
	list[6] = LF_MEMBER, public, type = 0x119B, offset = 8
		member name = 'u'

0x119d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x116D

0x119e : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 7,  field list type 0x119c, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_RESOURCE_DESCRIPTOR, unique name = .?AU_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001635)

0x119f : Length = 222, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x117F, offset = 0
		member name = 'Callback'
	list[1] = LF_MEMBER, public, type = 0x1126, offset = 8
		member name = 'ControlGuid'
	list[2] = LF_MEMBER, public, type = 0x119D, offset = 16
		member name = 'Next'
	list[3] = LF_MEMBER, public, type = T_QUAD(0013), offset = 24
		member name = 'Logger'
	list[4] = LF_MEMBER, public, type = 0x108A, offset = 32
		member name = 'RegistryPath'
	list[5] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 40
		member name = 'FlagsLen'
	list[6] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 41
		member name = 'Level'
	list[7] = LF_MEMBER, public, type = T_USHORT(0021), offset = 42
		member name = 'Reserved'
	list[8] = LF_MEMBER, public, type = 0x101E, offset = 44
		member name = 'Flags'
	list[9] = LF_MEMBER, public, type = T_ULONG(0022), offset = 48
		member name = 'ReservedFlags'
	list[10] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 56
		member name = 'RegHandle'

0x11a0 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 11,  field list type 0x119f, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 64, class name = _WPP_TRACE_CONTROL_BLOCK, unique name = .?AU_WPP_TRACE_CONTROL_BLOCK@@, UDT(0x000011a0)

0x11a1 : Length = 34, Leaf = 0x1201 LF_ARGLIST argument count = 7
	list[0] = 0x110A
	list[1] = 0x1114
	list[2] = T_ULONG(0022)
	list[3] = T_ULONG(0022)
	list[4] = 0x1116
	list[5] = 0x111A
	list[6] = 0x10E4

0x11a2 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 7, Arg list type = 0x11a1

0x11a3 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_IO_QUEUE_CONFIG, unique name = .?AU_WDF_IO_QUEUE_CONFIG@@, UDT(0x000012bf)

0x11a4 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1105

0x11a5 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11A3

0x11a6 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11A4

0x11a7 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFQUEUE__, unique name = .?AUWDFQUEUE__@@, UDT(0x0000140f)

0x11a8 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_SECURITY_CONTEXT, unique name = .?AU_IO_SECURITY_CONTEXT@@, UDT(0x00001334)

0x11a9 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11A7

0x11aa : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10D5

0x11ab : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11A8

0x11ac : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11A9

0x11ad : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x1017
	list[1] = 0x10C1
	list[2] = 0x1030
	list[3] = T_ULONG(0022)
	list[4] = T_64PVOID(0603)
	list[5] = T_64PULONG(0622)

0x11ae : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x1017
	list[1] = 0x10BA
	list[2] = 0x11A5
	list[3] = 0x110D
	list[4] = 0x11AC

0x11af : Length = 122, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x11AB, offset = 0
		member name = 'SecurityContext'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Options'
	list[2] = LF_MEMBER, public, type = T_USHORT(0021), offset = 16
		member name = 'FileAttributes'
	list[3] = LF_MEMBER, public, type = T_USHORT(0021), offset = 18
		member name = 'ShareAccess'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'EaLength'

0x11b0 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x11ae

0x11b1 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x11ad

0x11b2 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x11af, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11b3 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11B0

0x11b4 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11B1

0x11b5 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _NAMED_PIPE_CREATE_PARAMETERS, unique name = .?AU_NAMED_PIPE_CREATE_PARAMETERS@@, UDT(0x00001487)

0x11b6 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x102A
	list[1] = T_64PVOID(0603)
	list[2] = T_ULONG(0022)
	list[3] = T_64PULONG(0622)
	list[4] = T_64PVOID(0603)

0x11b7 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFREQUEST__, unique name = .?AUWDFREQUEST__@@, UDT(0x000013b5)

0x11b8 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11B5

0x11b9 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x11b6

0x11ba : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11B7

0x11bb : Length = 118, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x11AB, offset = 0
		member name = 'SecurityContext'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Options'
	list[2] = LF_MEMBER, public, type = T_USHORT(0021), offset = 16
		member name = 'Reserved'
	list[3] = LF_MEMBER, public, type = T_USHORT(0021), offset = 18
		member name = 'ShareAccess'
	list[4] = LF_MEMBER, public, type = 0x11B8, offset = 24
		member name = 'Parameters'

0x11bc : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11B9

0x11bd : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFIOTARGET__, unique name = .?AUWDFIOTARGET__@@, UDT(0x00001456)

0x11be : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x11bb, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11bf : Length = 230, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'DeviceUsageTypeUndefined'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'DeviceUsageTypePaging'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'DeviceUsageTypeHibernation'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'DeviceUsageTypeDumpFile'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'DeviceUsageTypeBoot'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'DeviceUsageTypePostDisplay'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'DeviceUsageTypeGuestAssigned'

0x11c0 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11BD

0x11c1 : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _MAILSLOT_CREATE_PARAMETERS, unique name = .?AU_MAILSLOT_CREATE_PARAMETERS@@, UDT(0x00001440)

0x11c2 : Length = 86, Leaf = 0x1507 LF_ENUM
	# members = 7,  type = T_INT4(0074) field list type 0x11bf
	enum name = _DEVICE_USAGE_NOTIFICATION_TYPE, UDT(0x000011c2)

0x11c3 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11C1

0x11c4 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_REQUEST_COMPLETION_PARAMS, unique name = .?AU_WDF_REQUEST_COMPLETION_PARAMS@@, UDT(0x000014ef)

0x11c5 : Length = 118, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x11AB, offset = 0
		member name = 'SecurityContext'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Options'
	list[2] = LF_MEMBER, public, type = T_USHORT(0021), offset = 16
		member name = 'Reserved'
	list[3] = LF_MEMBER, public, type = T_USHORT(0021), offset = 18
		member name = 'ShareAccess'
	list[4] = LF_MEMBER, public, type = 0x11C3, offset = 24
		member name = 'Parameters'

0x11c6 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11C4

0x11c7 : Length = 46, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFKEY__, unique name = .?AUWDFKEY__@@, UDT(0x000011c7)

0x11c8 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x11c5, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11c9 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x11BA
	list[1] = 0x11C0
	list[2] = 0x11C6
	list[3] = T_64PVOID(0603)

0x11ca : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x1025
	list[2] = T_64PQUAD(0613)

0x11cb : Length = 78, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Key'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'Flags'
	list[3] = LF_MEMBER, public, type = 0x1073, offset = 16
		member name = 'ByteOffset'

0x11cc : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x11c9

0x11cd : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x11ca

0x11ce : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x11cb, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11cf : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11CC

0x11d0 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11CD

0x11d1 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1017
	list[1] = 0x11BA
	list[2] = 0x11CF
	list[3] = T_64PVOID(0603)

0x11d2 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10A6

0x11d3 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x11d1

0x11d4 : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x1017
	list[1] = 0x10BA
	list[2] = T_ULONG(0022)
	list[3] = T_ULONG(0022)
	list[4] = 0x110D
	list[5] = 0x11D2

0x11d5 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x11d4

0x11d6 : Length = 2958, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'FileDirectoryInformation'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'FileFullDirectoryInformation'
	list[2] = LF_ENUMERATE, public, value = 3, name = 'FileBothDirectoryInformation'
	list[3] = LF_ENUMERATE, public, value = 4, name = 'FileBasicInformation'
	list[4] = LF_ENUMERATE, public, value = 5, name = 'FileStandardInformation'
	list[5] = LF_ENUMERATE, public, value = 6, name = 'FileInternalInformation'
	list[6] = LF_ENUMERATE, public, value = 7, name = 'FileEaInformation'
	list[7] = LF_ENUMERATE, public, value = 8, name = 'FileAccessInformation'
	list[8] = LF_ENUMERATE, public, value = 9, name = 'FileNameInformation'
	list[9] = LF_ENUMERATE, public, value = 10, name = 'FileRenameInformation'
	list[10] = LF_ENUMERATE, public, value = 11, name = 'FileLinkInformation'
	list[11] = LF_ENUMERATE, public, value = 12, name = 'FileNamesInformation'
	list[12] = LF_ENUMERATE, public, value = 13, name = 'FileDispositionInformation'
	list[13] = LF_ENUMERATE, public, value = 14, name = 'FilePositionInformation'
	list[14] = LF_ENUMERATE, public, value = 15, name = 'FileFullEaInformation'
	list[15] = LF_ENUMERATE, public, value = 16, name = 'FileModeInformation'
	list[16] = LF_ENUMERATE, public, value = 17, name = 'FileAlignmentInformation'
	list[17] = LF_ENUMERATE, public, value = 18, name = 'FileAllInformation'
	list[18] = LF_ENUMERATE, public, value = 19, name = 'FileAllocationInformation'
	list[19] = LF_ENUMERATE, public, value = 20, name = 'FileEndOfFileInformation'
	list[20] = LF_ENUMERATE, public, value = 21, name = 'FileAlternateNameInformation'
	list[21] = LF_ENUMERATE, public, value = 22, name = 'FileStreamInformation'
	list[22] = LF_ENUMERATE, public, value = 23, name = 'FilePipeInformation'
	list[23] = LF_ENUMERATE, public, value = 24, name = 'FilePipeLocalInformation'
	list[24] = LF_ENUMERATE, public, value = 25, name = 'FilePipeRemoteInformation'
	list[25] = LF_ENUMERATE, public, value = 26, name = 'FileMailslotQueryInformation'
	list[26] = LF_ENUMERATE, public, value = 27, name = 'FileMailslotSetInformation'
	list[27] = LF_ENUMERATE, public, value = 28, name = 'FileCompressionInformation'
	list[28] = LF_ENUMERATE, public, value = 29, name = 'FileObjectIdInformation'
	list[29] = LF_ENUMERATE, public, value = 30, name = 'FileCompletionInformation'
	list[30] = LF_ENUMERATE, public, value = 31, name = 'FileMoveClusterInformation'
	list[31] = LF_ENUMERATE, public, value = 32, name = 'FileQuotaInformation'
	list[32] = LF_ENUMERATE, public, value = 33, name = 'FileReparsePointInformation'
	list[33] = LF_ENUMERATE, public, value = 34, name = 'FileNetworkOpenInformation'
	list[34] = LF_ENUMERATE, public, value = 35, name = 'FileAttributeTagInformation'
	list[35] = LF_ENUMERATE, public, value = 36, name = 'FileTrackingInformation'
	list[36] = LF_ENUMERATE, public, value = 37, name = 'FileIdBothDirectoryInformation'
	list[37] = LF_ENUMERATE, public, value = 38, name = 'FileIdFullDirectoryInformation'
	list[38] = LF_ENUMERATE, public, value = 39, name = 'FileValidDataLengthInformation'
	list[39] = LF_ENUMERATE, public, value = 40, name = 'FileShortNameInformation'
	list[40] = LF_ENUMERATE, public, value = 41, name = 'FileIoCompletionNotificationInformation'
	list[41] = LF_ENUMERATE, public, value = 42, name = 'FileIoStatusBlockRangeInformation'
	list[42] = LF_ENUMERATE, public, value = 43, name = 'FileIoPriorityHintInformation'
	list[43] = LF_ENUMERATE, public, value = 44, name = 'FileSfioReserveInformation'
	list[44] = LF_ENUMERATE, public, value = 45, name = 'FileSfioVolumeInformation'
	list[45] = LF_ENUMERATE, public, value = 46, name = 'FileHardLinkInformation'
	list[46] = LF_ENUMERATE, public, value = 47, name = 'FileProcessIdsUsingFileInformation'
	list[47] = LF_ENUMERATE, public, value = 48, name = 'FileNormalizedNameInformation'
	list[48] = LF_ENUMERATE, public, value = 49, name = 'FileNetworkPhysicalNameInformation'
	list[49] = LF_ENUMERATE, public, value = 50, name = 'FileIdGlobalTxDirectoryInformation'
	list[50] = LF_ENUMERATE, public, value = 51, name = 'FileIsRemoteDeviceInformation'
	list[51] = LF_ENUMERATE, public, value = 52, name = 'FileUnusedInformation'
	list[52] = LF_ENUMERATE, public, value = 53, name = 'FileNumaNodeInformation'
	list[53] = LF_ENUMERATE, public, value = 54, name = 'FileStandardLinkInformation'
	list[54] = LF_ENUMERATE, public, value = 55, name = 'FileRemoteProtocolInformation'
	list[55] = LF_ENUMERATE, public, value = 56, name = 'FileRenameInformationBypassAccessCheck'
	list[56] = LF_ENUMERATE, public, value = 57, name = 'FileLinkInformationBypassAccessCheck'
	list[57] = LF_ENUMERATE, public, value = 58, name = 'FileVolumeNameInformation'
	list[58] = LF_ENUMERATE, public, value = 59, name = 'FileIdInformation'
	list[59] = LF_ENUMERATE, public, value = 60, name = 'FileIdExtdDirectoryInformation'
	list[60] = LF_ENUMERATE, public, value = 61, name = 'FileReplaceCompletionInformation'
	list[61] = LF_ENUMERATE, public, value = 62, name = 'FileHardLinkFullIdInformation'
	list[62] = LF_ENUMERATE, public, value = 63, name = 'FileIdExtdBothDirectoryInformation'
	list[63] = LF_ENUMERATE, public, value = 64, name = 'FileDispositionInformationEx'
	list[64] = LF_ENUMERATE, public, value = 65, name = 'FileRenameInformationEx'
	list[65] = LF_ENUMERATE, public, value = 66, name = 'FileRenameInformationExBypassAccessCheck'
	list[66] = LF_ENUMERATE, public, value = 67, name = 'FileDesiredStorageClassInformation'
	list[67] = LF_ENUMERATE, public, value = 68, name = 'FileStatInformation'
	list[68] = LF_ENUMERATE, public, value = 69, name = 'FileMemoryPartitionInformation'
	list[69] = LF_ENUMERATE, public, value = 70, name = 'FileStatLxInformation'
	list[70] = LF_ENUMERATE, public, value = 71, name = 'FileCaseSensitiveInformation'
	list[71] = LF_ENUMERATE, public, value = 72, name = 'FileLinkInformationEx'
	list[72] = LF_ENUMERATE, public, value = 73, name = 'FileLinkInformationExBypassAccessCheck'
	list[73] = LF_ENUMERATE, public, value = 74, name = 'FileStorageReserveIdInformation'
	list[74] = LF_ENUMERATE, public, value = 75, name = 'FileCaseSensitiveInformationForceAccessCheck'
	list[75] = LF_ENUMERATE, public, value = 76, name = 'FileKnownFolderInformation'
	list[76] = LF_ENUMERATE, public, value = 77, name = 'FileStatBasicInformation'
	list[77] = LF_ENUMERATE, public, value = 78, name = 'FileId64ExtdDirectoryInformation'
	list[78] = LF_ENUMERATE, public, value = 79, name = 'FileId64ExtdBothDirectoryInformation'
	list[79] = LF_ENUMERATE, public, value = 80, name = 'FileIdAllExtdDirectoryInformation'
	list[80] = LF_ENUMERATE, public, value = 81, name = 'FileIdAllExtdBothDirectoryInformation'
	list[81] = LF_ENUMERATE, public, value = 82, name = 'FileStreamReservationInformation'
	list[82] = LF_ENUMERATE, public, value = 83, name = 'FileMupProviderInfo'
	list[83] = LF_ENUMERATE, public, value = 84, name = 'FileMaximumInformation'

0x11d7 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11D5

0x11d8 : Length = 70, Leaf = 0x1507 LF_ENUM
	# members = 84,  type = T_INT4(0074) field list type 0x11d6
	enum name = _FILE_INFORMATION_CLASS, UDT(0x000011d8)

0x11d9 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFMEMORY__, unique name = .?AUWDFMEMORY__@@, UDT(0x000011d9)

0x11da : Length = 94, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = 0x108A, offset = 8
		member name = 'FileName'
	list[2] = LF_MEMBER, public, type = 0x11D8, offset = 16
		member name = 'FileInformationClass'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'FileIndex'

0x11db : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11D3

0x11dc : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x11da, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11dd : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x1126
	list[1] = T_ULONG(0022)
	list[2] = 0x112B
	list[3] = T_64PVOID(0603)
	list[4] = T_64PUQUAD(0623)

0x11de : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x11dd

0x11df : Length = 50, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'CompletionFilter'

0x11e0 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x11df, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11e1 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11DE

0x11e2 : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type 0x1183

0x11e3 : Length = 162, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'DirectoryNotifyInformation'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'DirectoryNotifyExtendedInformation'
	list[2] = LF_ENUMERATE, public, value = 3, name = 'DirectoryNotifyFullInformation'
	list[3] = LF_ENUMERATE, public, value = 4, name = 'DirectoryNotifyMaximumInformation'

0x11e4 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11E2

0x11e5 : Length = 94, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x11e3
	enum name = _DIRECTORY_NOTIFY_INFORMATION_CLASS, UDT(0x000011e5)

0x11e6 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DEVICE_CONTEXT, unique name = .?AU_DEVICE_CONTEXT@@, UDT(0x00001191)

0x11e7 : Length = 94, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'CompletionFilter'
	list[2] = LF_MEMBER, public, type = 0x11E5, offset = 16
		member name = 'DirectoryNotifyInformationClass'

0x11e8 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11E6

0x11e9 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x11e7, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11ea : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFSTRING__, unique name = .?AUWDFSTRING__@@, UDT(0x000011ea)

0x11eb : Length = 54, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = 0x11D8, offset = 8
		member name = 'FileInformationClass'

0x11ec : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x1111
	list[2] = T_64PUQUAD(0623)

0x11ed : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x11eb, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11ee : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x11ec

0x11ef : Length = 178, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = 0x11D8, offset = 8
		member name = 'FileInformationClass'
	list[2] = LF_MEMBER, public, type = 0x110A, offset = 16
		member name = 'FileObject'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 24
		member name = 'ReplaceIfExists'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 25
		member name = 'AdvanceOnly'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'ClusterCount'
	list[6] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'DeleteHandle'

0x11f0 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11EE

0x11f1 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 7,  field list type 0x11ef, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11f2 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1017
	list[1] = 0x1025

0x11f3 : Length = 86, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'EaList'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'EaListLength'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'EaIndex'

0x11f4 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x11f2

0x11f5 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11F4

0x11f6 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x11f3, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11f7 : Length = 22, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'

0x11f8 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DEVICE_CAPABILITIES, unique name = .?AU_DEVICE_CAPABILITIES@@, UDT(0x000014b9)

0x11f9 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x11f7, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x11fa : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11F8

0x11fb : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_RCHAR(0070)
	Index type = T_UQUAD(0023)
	length = 32
	Name = 

0x11fc : Length = 530, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'FileFsVolumeInformation'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'FileFsLabelInformation'
	list[2] = LF_ENUMERATE, public, value = 3, name = 'FileFsSizeInformation'
	list[3] = LF_ENUMERATE, public, value = 4, name = 'FileFsDeviceInformation'
	list[4] = LF_ENUMERATE, public, value = 5, name = 'FileFsAttributeInformation'
	list[5] = LF_ENUMERATE, public, value = 6, name = 'FileFsControlInformation'
	list[6] = LF_ENUMERATE, public, value = 7, name = 'FileFsFullSizeInformation'
	list[7] = LF_ENUMERATE, public, value = 8, name = 'FileFsObjectIdInformation'
	list[8] = LF_ENUMERATE, public, value = 9, name = 'FileFsDriverPathInformation'
	list[9] = LF_ENUMERATE, public, value = 10, name = 'FileFsVolumeFlagsInformation'
	list[10] = LF_ENUMERATE, public, value = 11, name = 'FileFsSectorSizeInformation'
	list[11] = LF_ENUMERATE, public, value = 12, name = 'FileFsDataCopyInformation'
	list[12] = LF_ENUMERATE, public, value = 13, name = 'FileFsMetadataSizeInformation'
	list[13] = LF_ENUMERATE, public, value = 14, name = 'FileFsFullSizeInformationEx'
	list[14] = LF_ENUMERATE, public, value = 15, name = 'FileFsGuidInformation'
	list[15] = LF_ENUMERATE, public, value = 16, name = 'FileFsMaximumInformation'

0x11fd : Length = 122, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1199, offset = 0
		member name = 'Driver'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'DriverFlags'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'DriverTag'
	list[3] = LF_MEMBER, public, type = 0x11FB, offset = 16
		member name = 'DriverName'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 48
		member name = 'DisplaceDriverUnload'

0x11fe : Length = 50, Leaf = 0x1507 LF_ENUM
	# members = 16,  type = T_INT4(0074) field list type 0x11fc
	enum name = _FSINFOCLASS, UDT(0x000011fe)

0x11ff : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x11fd, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 56, class name = _WDF_DRIVER_GLOBALS, unique name = .?AU_WDF_DRIVER_GLOBALS@@, UDT(0x000011ff)

0x1200 : Length = 54, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = 0x11FE, offset = 8
		member name = 'FsInformationClass'

0x1201 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1017
	list[1] = 0x1022

0x1202 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1201

0x1203 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1202

0x1204 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1200, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1205 : Length = 114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'OutputBufferLength'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'InputBufferLength'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'FsControlCode'
	list[3] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Type3InputBuffer'

0x1206 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1205, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1207 : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1114, offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Key'
	list[2] = LF_MEMBER, public, type = 0x1073, offset = 16
		member name = 'ByteOffset'

0x1208 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1207, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1209 : Length = 114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'OutputBufferLength'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'InputBufferLength'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'IoControlCode'
	list[3] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Type3InputBuffer'

0x120a : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1209, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x120b : Length = 54, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'SecurityInformation'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Length'

0x120c : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x120b, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x120d : Length = 66, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'SecurityInformation'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'SecurityDescriptor'

0x120e : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x120d, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x120f : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _VPB, unique name = .?AU_VPB@@, UDT(0x00001403)

0x1210 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x120F

0x1211 : Length = 74, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1210, offset = 0
		member name = 'Vpb'
	list[1] = LF_MEMBER, public, type = 0x10E4, offset = 8
		member name = 'DeviceObject'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'OutputBufferLength'

0x1212 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1211, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1213 : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1210, offset = 0
		member name = 'Vpb'
	list[1] = LF_MEMBER, public, type = 0x10E4, offset = 8
		member name = 'DeviceObject'

0x1214 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1213, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1215 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _SCSI_REQUEST_BLOCK, unique name = .?AU_SCSI_REQUEST_BLOCK@@

0x1216 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1215

0x1217 : Length = 18, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1216, offset = 0
		member name = 'Srb'

0x1218 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1217, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1219 : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _FILE_GET_QUOTA_INFORMATION, unique name = .?AU_FILE_GET_QUOTA_INFORMATION@@

0x121a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1219

0x121b : Length = 86, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'StartSid'
	list[2] = LF_MEMBER, public, type = 0x121A, offset = 16
		member name = 'SidList'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'SidListLength'

0x121c : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x121b, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x121d : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x10C1

0x121e : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x121d

0x121f : Length = 178, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'BusRelations'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'EjectionRelations'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PowerRelations'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'RemovalRelations'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'TargetDeviceRelation'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'SingleBusRelations'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'TransportRelations'

0x1220 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 7,  type = T_INT4(0074) field list type 0x121f
	enum name = _DEVICE_RELATION_TYPE, UDT(0x00001220)

0x1221 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 44
	Name = 

0x1222 : Length = 18, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1220, offset = 0
		member name = 'Type'

0x1223 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1222, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1224 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 34
	Name = 

0x1225 : Length = 10, Leaf = 0x1002 LF_POINTER
	const Pointer (__ptr64), Size: 8
	Element type : T_WCHAR(0071)

0x1226 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _INTERFACE, unique name = .?AU_INTERFACE@@, UDT(0x0000150d)

0x1227 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1226

0x1228 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1156
	list[1] = 0x110D
	list[2] = 0x1158

0x1229 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1228

0x122a : Length = 114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1126, offset = 0
		member name = 'InterfaceType'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 8
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = T_USHORT(0021), offset = 10
		member name = 'Version'
	list[3] = LF_MEMBER, public, type = 0x1227, offset = 16
		member name = 'Interface'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'InterfaceSpecificData'

0x122b : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x122a, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x122c : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x110D

0x122d : Length = 26, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x11FA, offset = 0
		member name = 'Capabilities'

0x122e : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x122c

0x122f : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x122d, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1230 : Length = 38, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x10ED, offset = 0
		member name = 'IoResourceRequirementList'

0x1231 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x121d

0x1232 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1230, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1233 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1025
	list[1] = T_64PQUAD(0613)

0x1234 : Length = 86, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'WhichSpace'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'Buffer'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'Offset'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'Length'

0x1235 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1233

0x1236 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1234, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1237 : Length = 18, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'Lock'

0x1238 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x11E8, Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1085

0x1239 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1237, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 1, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x123a : Length = 22, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1161, offset = 0
		member name = 'IdType'

0x123b : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x123a, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x123c : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = T_64PVOID(0603)
	list[1] = 0x1097

0x123d : Length = 50, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1154, offset = 0
		member name = 'DeviceTextType'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'LocaleId'

0x123e : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x123c

0x123f : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x123d, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1240 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_UCHAR(0020)
	Index type = T_UQUAD(0023)
	length = 3
	Name = 

0x1241 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1022
	list[1] = T_64PVOID(0603)

0x1242 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1241

0x1243 : Length = 58, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'InPath'
	list[1] = LF_MEMBER, public, type = 0x1240, offset = 1
		member name = 'Reserved'
	list[2] = LF_MEMBER, public, type = 0x11C2, offset = 8
		member name = 'Type'

0x1244 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1243, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1245 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x1025

0x1246 : Length = 26, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1042, offset = 0
		member name = 'PowerState'

0x1247 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1245

0x1248 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1246, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1249 : Length = 26, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x10C8, offset = 0
		member name = 'PowerSequence'

0x124a : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x10BA
	list[1] = T_ULONG(0022)
	list[2] = T_ULONG(0022)
	list[3] = 0x110D
	list[4] = 0x11D2

0x124b : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1249, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x124c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x124a

0x124d : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _SYSTEM_POWER_STATE_CONTEXT, unique name = .?AU_SYSTEM_POWER_STATE_CONTEXT@@, UDT(0x0000132e)

0x124e : Length = 50, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'SystemPowerState'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'DevicePowerState'

0x124f : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x10A6
	list[1] = 0x10AA
	list[2] = T_64PULONG(0622)

0x1250 : Length = 58, Leaf = 0x1507 LF_ENUM
	# members = 2,  type = T_INT4(0074) field list type 0x124e
	enum name = _POWER_STATE_TYPE, UDT(0x00001250)

0x1251 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x124f

0x1252 : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, FORWARD REF, Size = 0	,class name = _POWER_STATE, unique name = .?AT_POWER_STATE@@, UDT(0x000013a4)

0x1253 : Length = 254, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PowerActionNone'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'PowerActionReserved'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PowerActionSleep'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'PowerActionHibernate'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'PowerActionShutdown'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'PowerActionShutdownReset'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'PowerActionShutdownOff'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'PowerActionWarmEject'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'PowerActionDisplayOff'

0x1254 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x10AA
	list[1] = 0x110D
	list[2] = 0x1141

0x1255 : Length = 50, Leaf = 0x1507 LF_ENUM
	# members = 9,  type = T_INT4(0074) field list type 0x1253
	enum name = POWER_ACTION, UDT(0x00001255)

0x1256 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1254

0x1257 : Length = 118, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'SystemContext'
	list[1] = LF_MEMBER, public, type = 0x124D, offset = 0
		member name = 'SystemPowerStateContext'
	list[2] = LF_MEMBER, public, type = 0x1250, offset = 8
		member name = 'Type'
	list[3] = LF_MEMBER, public, type = 0x1252, offset = 16
		member name = 'State'
	list[4] = LF_MEMBER, public, type = 0x1255, offset = 24
		member name = 'ShutdownType'

0x1258 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x1257, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1259 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1111
	list[1] = T_64PUQUAD(0623)

0x125a : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_RESOURCE_LIST, unique name = .?AU_CM_RESOURCE_LIST@@, UDT(0x00001426)

0x125b : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1259

0x125c : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x125A

0x125d : Length = 74, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x125C, offset = 0
		member name = 'AllocatedResources'
	list[1] = LF_MEMBER, public, type = 0x125C, offset = 8
		member name = 'AllocatedResourcesTranslated'

0x125e : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x125d, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x125f : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x10A6
	list[1] = 0x10AA
	list[2] = 0x10AE

0x1260 : Length = 90, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 0
		member name = 'ProviderId'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'DataPath'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'BufferSize'
	list[3] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Buffer'

0x1261 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x125f

0x1262 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1260, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1263 : Length = 82, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'Argument1'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'Argument2'
	list[2] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 16
		member name = 'Argument3'
	list[3] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Argument4'

0x1264 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1263, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1265 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = T_UQUAD(0023)
	list[1] = T_USHORT(0021)
	list[2] = 0x1126

0x1266 : Length = 922, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x11B2, offset = 0
		member name = 'Create'
	list[1] = LF_MEMBER, public, type = 0x11BE, offset = 0
		member name = 'CreatePipe'
	list[2] = LF_MEMBER, public, type = 0x11C8, offset = 0
		member name = 'CreateMailslot'
	list[3] = LF_MEMBER, public, type = 0x11CE, offset = 0
		member name = 'Read'
	list[4] = LF_MEMBER, public, type = 0x11CE, offset = 0
		member name = 'Write'
	list[5] = LF_MEMBER, public, type = 0x11DC, offset = 0
		member name = 'QueryDirectory'
	list[6] = LF_MEMBER, public, type = 0x11E0, offset = 0
		member name = 'NotifyDirectory'
	list[7] = LF_MEMBER, public, type = 0x11E9, offset = 0
		member name = 'NotifyDirectoryEx'
	list[8] = LF_MEMBER, public, type = 0x11ED, offset = 0
		member name = 'QueryFile'
	list[9] = LF_MEMBER, public, type = 0x11F1, offset = 0
		member name = 'SetFile'
	list[10] = LF_MEMBER, public, type = 0x11F6, offset = 0
		member name = 'QueryEa'
	list[11] = LF_MEMBER, public, type = 0x11F9, offset = 0
		member name = 'SetEa'
	list[12] = LF_MEMBER, public, type = 0x1204, offset = 0
		member name = 'QueryVolume'
	list[13] = LF_MEMBER, public, type = 0x1204, offset = 0
		member name = 'SetVolume'
	list[14] = LF_MEMBER, public, type = 0x1206, offset = 0
		member name = 'FileSystemControl'
	list[15] = LF_MEMBER, public, type = 0x1208, offset = 0
		member name = 'LockControl'
	list[16] = LF_MEMBER, public, type = 0x120A, offset = 0
		member name = 'DeviceIoControl'
	list[17] = LF_MEMBER, public, type = 0x120C, offset = 0
		member name = 'QuerySecurity'
	list[18] = LF_MEMBER, public, type = 0x120E, offset = 0
		member name = 'SetSecurity'
	list[19] = LF_MEMBER, public, type = 0x1212, offset = 0
		member name = 'MountVolume'
	list[20] = LF_MEMBER, public, type = 0x1214, offset = 0
		member name = 'VerifyVolume'
	list[21] = LF_MEMBER, public, type = 0x1218, offset = 0
		member name = 'Scsi'
	list[22] = LF_MEMBER, public, type = 0x121C, offset = 0
		member name = 'QueryQuota'
	list[23] = LF_MEMBER, public, type = 0x11F9, offset = 0
		member name = 'SetQuota'
	list[24] = LF_MEMBER, public, type = 0x1223, offset = 0
		member name = 'QueryDeviceRelations'
	list[25] = LF_MEMBER, public, type = 0x122B, offset = 0
		member name = 'QueryInterface'
	list[26] = LF_MEMBER, public, type = 0x122F, offset = 0
		member name = 'DeviceCapabilities'
	list[27] = LF_MEMBER, public, type = 0x1232, offset = 0
		member name = 'FilterResourceRequirements'
	list[28] = LF_MEMBER, public, type = 0x1236, offset = 0
		member name = 'ReadWriteConfig'
	list[29] = LF_MEMBER, public, type = 0x1239, offset = 0
		member name = 'SetLock'
	list[30] = LF_MEMBER, public, type = 0x123B, offset = 0
		member name = 'QueryId'
	list[31] = LF_MEMBER, public, type = 0x123F, offset = 0
		member name = 'QueryDeviceText'
	list[32] = LF_MEMBER, public, type = 0x1244, offset = 0
		member name = 'UsageNotification'
	list[33] = LF_MEMBER, public, type = 0x1248, offset = 0
		member name = 'WaitWake'
	list[34] = LF_MEMBER, public, type = 0x124B, offset = 0
		member name = 'PowerSequence'
	list[35] = LF_MEMBER, public, type = 0x1258, offset = 0
		member name = 'Power'
	list[36] = LF_MEMBER, public, type = 0x125E, offset = 0
		member name = 'StartDevice'
	list[37] = LF_MEMBER, public, type = 0x1262, offset = 0
		member name = 'WMI'
	list[38] = LF_MEMBER, public, type = 0x1264, offset = 0
		member name = 'Others'

0x1267 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1265

0x1268 : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 39,  field list type 0x1266, SEALED, Size = 32	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x1269 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10C1
	list[1] = T_64PUCHAR(0620)

0x126a : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x10E4
	list[1] = 0x1130
	list[2] = T_64PVOID(0603)

0x126b : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1269

0x126c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x126a

0x126d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x126C

0x126e : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10C1
	list[1] = 0x1113

0x126f : Length = 206, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'MajorFunction'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'MinorFunction'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'Flags'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'Control'
	list[4] = LF_MEMBER, public, type = 0x1268, offset = 8
		member name = 'Parameters'
	list[5] = LF_MEMBER, public, type = 0x10E4, offset = 40
		member name = 'DeviceObject'
	list[6] = LF_MEMBER, public, type = 0x110A, offset = 48
		member name = 'FileObject'
	list[7] = LF_MEMBER, public, type = 0x126D, offset = 56
		member name = 'CompletionRoutine'
	list[8] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 64
		member name = 'Context'

0x1270 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x126e

0x1271 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 9,  field list type 0x126f, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 72, class name = _IO_STACK_LOCATION, unique name = .?AU_IO_STACK_LOCATION@@, UDT(0x00001657)

0x1272 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = T_UQUAD(0023)
	list[1] = T_USHORT(0021)
	list[2] = 0x1126
	list[3] = T_INT4(0074)

0x1273 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10FF

0x1274 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1272

0x1275 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _OWNER_ENTRY, unique name = .?AU_OWNER_ENTRY@@, UDT(0x00001411)

0x1276 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1275

0x1277 : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type T_UINT4(0075)

0x1278 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x11A9
	list[1] = 0x11BA

0x1279 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x1199

0x127a : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _KPCR, unique name = .?AU_KPCR@@

0x127b : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x111C
	list[1] = 0x11E4
	list[2] = 0x1126
	list[3] = 0x1091
	list[4] = 0x114E
	list[5] = 0x1277

0x127c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1279

0x127d : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1278

0x127e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x127A

0x127f : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x127b

0x1280 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1199
	list[1] = 0x10C1

0x1281 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x11A9
	list[1] = 0x11BA
	list[2] = T_UQUAD(0023)
	list[3] = T_UQUAD(0023)
	list[4] = T_ULONG(0022)

0x1282 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1280

0x1283 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x1281

0x1284 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_HEADER, unique name = .?AU_URB_HEADER@@, UDT(0x000012d9)

0x1285 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x111C
	list[1] = 0x11E4
	list[2] = 0x1126
	list[3] = 0x1277
	list[4] = 0x114E

0x1286 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1283

0x1287 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1282

0x1288 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB, unique name = .?AU_URB@@, UDT(0x00001374)

0x1289 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x1285

0x128a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x127C

0x128b : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_REQUEST_SEND_OPTIONS, unique name = .?AU_WDF_REQUEST_SEND_OPTIONS@@, UDT(0x000013bc)

0x128c : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1288

0x128d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x128B

0x128e : Length = 130, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = 0x1287, offset = 8
		member name = 'EvtDriverDeviceAdd'
	list[2] = LF_MEMBER, public, type = 0x128A, offset = 16
		member name = 'EvtDriverUnload'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'DriverInitFlags'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 28
		member name = 'DriverPoolTag'

0x128f : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_HCD_AREA, unique name = .?AU_URB_HCD_AREA@@, UDT(0x0000137e)

0x1290 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1017
	list[1] = 0x11BA
	list[2] = 0x11C0
	list[3] = 0x128D

0x1291 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x128e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _WDF_DRIVER_CONFIG, unique name = .?AU_WDF_DRIVER_CONFIG@@, UDT(0x00001291)

0x1292 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1290

0x1293 : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _USBD_ISO_PACKET_DESCRIPTOR, unique name = .?AU_USBD_ISO_PACKET_DESCRIPTOR@@, UDT(0x000010d1)

0x1294 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1018

0x1295 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1292

0x1296 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x1293
	Index type = T_UQUAD(0023)
	length = 12
	Name = 

0x1297 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1122

0x1298 : Length = 286, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'PipeHandle'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'TransferFlags'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'TransferBufferLength'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'TransferBuffer'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'TransferBufferMDL'
	list[6] = LF_MEMBER, public, type = 0x128C, offset = 56
		member name = 'UrbLink'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'
	list[8] = LF_MEMBER, public, type = T_ULONG(0022), offset = 128
		member name = 'StartFrame'
	list[9] = LF_MEMBER, public, type = T_ULONG(0022), offset = 132
		member name = 'NumberOfPackets'
	list[10] = LF_MEMBER, public, type = T_ULONG(0022), offset = 136
		member name = 'ErrorCount'
	list[11] = LF_MEMBER, public, type = 0x1296, offset = 140
		member name = 'IsoPacket'

0x1299 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 12,  field list type 0x1298, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 152, class name = _URB_ISOCH_TRANSFER, unique name = .?AU_URB_ISOCH_TRANSFER@@, UDT(0x00001299)

0x129a : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_DRIVER_CONFIG, unique name = .?AU_WDF_DRIVER_CONFIG@@, UDT(0x00001291)

0x129b : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x129A

0x129c : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type T_ULONG(0022)

0x129d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1199

0x129e : Length = 10, Leaf = 0x1002 LF_POINTER
	const Pointer (__ptr64), Size: 8
	Element type : 0x11E6

0x129f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x127D

0x12a0 : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x1017
	list[1] = 0x10E1
	list[2] = 0x10AA
	list[3] = 0x110D
	list[4] = 0x129B
	list[5] = 0x129D

0x12a1 : Length = 66, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_LONG(0012), offset = 0
		member name = 'Status'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'Pointer'
	list[2] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'Information'

0x12a2 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x12a0

0x12a3 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x11A9
	list[1] = 0x11BA
	list[2] = T_UQUAD(0023)

0x12a4 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x1022

0x12a5 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x12a1, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STATUS_BLOCK, unique name = .?AU_IO_STATUS_BLOCK@@, UDT(0x000012a5)

0x12a6 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12A2

0x12a7 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x12a3

0x12a8 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x12a4

0x12a9 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12A7

0x12aa : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DISPATCHER_HEADER, unique name = .?AU_DISPATCHER_HEADER@@, UDT(0x000013e7)

0x12ab : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x11A9
	list[1] = 0x11BA
	list[2] = T_ULONG(0022)

0x12ac : Length = 22, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x12AA, offset = 0
		member name = 'Header'

0x12ad : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1022
	list[1] = T_ULONG(0022)

0x12ae : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x12ab

0x12af : Length = 42, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x12ac, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _KEVENT, unique name = .?AU_KEVENT@@, UDT(0x000012af)

0x12b0 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12ad

0x12b1 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12AE

0x12b2 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1017
	list[1] = 0x1199

0x12b3 : Length = 38, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'NumberOfPresentedRequests'

0x12b4 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x10E1, Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12b2

0x12b5 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _LIST_ENTRY, unique name = .?AU_LIST_ENTRY@@, UDT(0x00001323)

0x12b6 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12B4

0x12b7 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12ad

0x12b8 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x12b3, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x12b9 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 8, starting position = 0, Type = T_QUAD(0013)

0x12ba : Length = 22, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x12B8, offset = 0
		member name = 'Parallel'

0x12bb : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 56, starting position = 8, Type = T_QUAD(0013)

0x12bc : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 1,  field list type 0x12ba, SEALED, Size = 4	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x12bd : Length = 130, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_SHORT(0011), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_SHORT(0011), offset = 2
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = 0x12B5, offset = 8
		member name = 'DeviceListHead'
	list[3] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 24
		member name = 'Lock'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 32
		member name = 'Busy'
	list[5] = LF_MEMBER, public, type = 0x12B9, offset = 32
		member name = 'Reserved'
	list[6] = LF_MEMBER, public, type = 0x12BB, offset = 32
		member name = 'Hint'

0x12be : Length = 382, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = 0x105A, offset = 4
		member name = 'DispatchType'
	list[2] = LF_MEMBER, public, type = 0x1015, offset = 8
		member name = 'PowerManaged'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 12
		member name = 'AllowZeroLengthRequests'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 13
		member name = 'DefaultQueue'
	list[5] = LF_MEMBER, public, type = 0x129F, offset = 16
		member name = 'EvtIoDefault'
	list[6] = LF_MEMBER, public, type = 0x12A9, offset = 24
		member name = 'EvtIoRead'
	list[7] = LF_MEMBER, public, type = 0x12A9, offset = 32
		member name = 'EvtIoWrite'
	list[8] = LF_MEMBER, public, type = 0x1286, offset = 40
		member name = 'EvtIoDeviceControl'
	list[9] = LF_MEMBER, public, type = 0x1286, offset = 48
		member name = 'EvtIoInternalDeviceControl'
	list[10] = LF_MEMBER, public, type = 0x12B1, offset = 56
		member name = 'EvtIoStop'
	list[11] = LF_MEMBER, public, type = 0x129F, offset = 64
		member name = 'EvtIoResume'
	list[12] = LF_MEMBER, public, type = 0x129F, offset = 72
		member name = 'EvtIoCanceledOnQueue'
	list[13] = LF_MEMBER, public, type = 0x12BC, offset = 80
		member name = 'Settings'
	list[14] = LF_MEMBER, public, type = 0x1199, offset = 88
		member name = 'Driver'

0x12bf : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 15,  field list type 0x12be, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 96, class name = _WDF_IO_QUEUE_CONFIG, unique name = .?AU_WDF_IO_QUEUE_CONFIG@@, UDT(0x000012bf)

0x12c0 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 7,  field list type 0x12bd, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 40, class name = _KDEVICE_QUEUE, unique name = .?AU_KDEVICE_QUEUE@@, UDT(0x000012c0)

0x12c1 : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x10C1
	list[1] = 0x1104
	list[2] = 0x106A
	list[3] = 0x110D
	list[4] = 0x1113
	list[5] = T_64PULONG(0622)

0x12c2 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x12c1

0x12c3 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x11BA

0x12c4 : Length = 90, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x10E1, offset = 0
		member name = 'DriverObject'
	list[1] = LF_MEMBER, public, type = 0x10EB, offset = 8
		member name = 'AddDevice'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'Count'
	list[3] = LF_MEMBER, public, type = 0x1089, offset = 24
		member name = 'ServiceKeyName'

0x12c5 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x12c4, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 40, class name = _DRIVER_EXTENSION, unique name = .?AU_DRIVER_EXTENSION@@, UDT(0x000012c5)

0x12c6 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x12c3

0x12c7 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1104
	list[1] = 0x10DE

0x12c8 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1017
	list[1] = 0x11BA

0x12c9 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x11A2

0x12ca : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12c7

0x12cb : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12c8

0x12cc : Length = 42, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _KEVENT, unique name = .?AU_KEVENT@@, UDT(0x000012af)

0x12cd : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12CB

0x12ce : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12CC

0x12cf : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_WCHAR(0071)
	Index type = T_UQUAD(0023)
	length = 400
	Name = 

0x12d0 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DRIVER_EXTENSION, unique name = .?AU_DRIVER_EXTENSION@@, UDT(0x000012c5)

0x12d1 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12D0

0x12d2 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x10C1
	list[1] = 0x1030
	list[2] = T_ULONG(0022)
	list[3] = T_64PVOID(0603)
	list[4] = T_64PULONG(0622)

0x12d3 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12c8

0x12d4 : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_COMPLETION_CONTEXT, unique name = .?AU_IO_COMPLETION_CONTEXT@@, UDT(0x0000147b)

0x12d5 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x12d2

0x12d6 : Length = 110, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Length'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Function'
	list[2] = LF_MEMBER, public, type = T_LONG(0012), offset = 4
		member name = 'Status'
	list[3] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'UsbdDeviceHandle'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'UsbdFlags'

0x12d7 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12D3

0x12d8 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12D4

0x12d9 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x12d6, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _URB_HEADER, unique name = .?AU_URB_HEADER@@, UDT(0x000012d9)

0x12da : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _FILE_BASIC_INFORMATION, unique name = .?AU_FILE_BASIC_INFORMATION@@, UDT(0x0000143b)

0x12db : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x108A
	list[1] = 0x114E

0x12dc : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12DA

0x12dd : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12db

0x12de : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x110A
	list[1] = T_UCHAR(0020)
	list[2] = 0x12DC
	list[3] = 0x111A
	list[4] = 0x10E4

0x12df : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x12de

0x12e0 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12DD

0x12e1 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12DF

0x12e2 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x10AA
	list[1] = 0x10AA
	list[2] = T_UCHAR(0020)

0x12e3 : Length = 50, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 0
		member name = 'Ptr'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'Type'

0x12e4 : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'LowPart'
	list[1] = LF_MEMBER, public, type = T_LONG(0012), offset = 4
		member name = 'HighPart'

0x12e5 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x12e2

0x12e6 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x12e3, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _EVENT_FILTER_DESCRIPTOR, unique name = .?AU_EVENT_FILTER_DESCRIPTOR@@, UDT(0x000012e6)

0x12e7 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x12e4, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x12e8 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12E5

0x12e9 : Length = 74, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'LowPart'
	list[1] = LF_MEMBER, public, type = T_LONG(0012), offset = 4
		member name = 'HighPart'
	list[2] = LF_MEMBER, public, type = 0x12E7, offset = 0
		member name = 'u'
	list[3] = LF_MEMBER, public, type = T_QUAD(0013), offset = 0
		member name = 'QuadPart'

0x12ea : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x111C
	list[1] = 0x11E4
	list[2] = 0x1126
	list[3] = T_ULONG(0022)
	list[4] = 0x10A3

0x12eb : Length = 50, Leaf = 0x1506 LF_UNION
	# members = 4,  field list type 0x12e9, SEALED, Size = 8	,class name = _LARGE_INTEGER, unique name = .?AT_LARGE_INTEGER@@, UDT(0x0000170c)

0x12ec : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x12ea

0x12ed : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, __unaligned, modifies type T_USHORT(0021)

0x12ee : Length = 82, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'KeepObject'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'DeallocateObject'
	list[2] = LF_ENUMERATE, public, value = 3, name = 'DeallocateObjectKeepRegisters'

0x12ef : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12ED

0x12f0 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 3,  type = T_INT4(0074) field list type 0x12ee
	enum name = _IO_ALLOCATION_ACTION, UDT(0x000012f0)

0x12f1 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x10E4
	list[1] = 0x1130
	list[2] = T_64PVOID(0603)
	list[3] = T_64PVOID(0603)

0x12f2 : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = T_UQUAD(0023)
	list[1] = 0x11E4
	list[2] = 0x1126
	list[3] = 0x1126
	list[4] = T_ULONG(0022)
	list[5] = 0x10A3

0x12f3 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x12F0, Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x12f1

0x12f4 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x12f2

0x12f5 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12F4

0x12f6 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _FAST_IO_DISPATCH, unique name = .?AU_FAST_IO_DISPATCH@@, UDT(0x00001482)

0x12f7 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12F6

0x12f8 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x10A1
	Index type = T_UQUAD(0023)
	length = 48
	Name = 

0x12f9 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10E1
	list[1] = 0x108A

0x12fa : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, modifies type T_VOID(0003)

0x12fb : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12f9

0x12fc : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12FA

0x12fd : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12FB

0x12fe : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x10A3
	list[1] = 0x12FC
	list[2] = T_ULONG(0022)

0x12ff : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10E4
	list[1] = 0x1130

0x1300 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x12fe

0x1301 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12ff

0x1302 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1301

0x1303 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x10E1

0x1304 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x10A1
	Index type = T_UQUAD(0023)
	length = 64
	Name = 

0x1305 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1303

0x1306 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1305

0x1307 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12ff

0x1308 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x1125
	Index type = T_UQUAD(0023)
	length = 16
	Name = 

0x1309 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1307

0x130a : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x1309
	Index type = T_UQUAD(0023)
	length = 224
	Name = 

0x130b : Length = 350, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_SHORT(0011), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_SHORT(0011), offset = 2
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = 0x10E4, offset = 8
		member name = 'DeviceObject'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'Flags'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'DriverStart'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'DriverSize'
	list[6] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'DriverSection'
	list[7] = LF_MEMBER, public, type = 0x12D1, offset = 48
		member name = 'DriverExtension'
	list[8] = LF_MEMBER, public, type = 0x1089, offset = 56
		member name = 'DriverName'
	list[9] = LF_MEMBER, public, type = 0x108A, offset = 72
		member name = 'HardwareDatabase'
	list[10] = LF_MEMBER, public, type = 0x12F7, offset = 80
		member name = 'FastIoDispatch'
	list[11] = LF_MEMBER, public, type = 0x12FD, offset = 88
		member name = 'DriverInit'
	list[12] = LF_MEMBER, public, type = 0x1302, offset = 96
		member name = 'DriverStartIo'
	list[13] = LF_MEMBER, public, type = 0x1306, offset = 104
		member name = 'DriverUnload'
	list[14] = LF_MEMBER, public, type = 0x130A, offset = 112
		member name = 'MajorFunction'

0x130c : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 15,  field list type 0x130b, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 336, class name = _DRIVER_OBJECT, unique name = .?AU_DRIVER_OBJECT@@, UDT(0x0000130c)

0x130d : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x1078
	Index type = T_UQUAD(0023)
	length = 16
	Name = 

0x130e : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x107B
	Index type = T_UQUAD(0023)
	length = 2
	Name = 

0x130f : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DMA_ADAPTER, unique name = .?AU_DMA_ADAPTER@@

0x1310 : Length = 202, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Reserved'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'Reserved0'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'TransferBufferLength'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'TransferBuffer'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'TransferBufferMDL'
	list[6] = LF_MEMBER, public, type = 0x128C, offset = 56
		member name = 'UrbLink'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'
	list[8] = LF_MEMBER, public, type = 0x10F4, offset = 128
		member name = 'Reserved1'

0x1311 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x130F

0x1312 : Length = 110, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DMA_COMMON_BUFFER_EXTENDED_CONFIGURATION, unique name = .?AU_DMA_COMMON_BUFFER_EXTENDED_CONFIGURATION@@

0x1313 : Length = 106, Leaf = 0x1505 LF_STRUCTURE
	# members = 9,  field list type 0x1310, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 136, class name = _URB_CONTROL_GET_CONFIGURATION_REQUEST, unique name = .?AU_URB_CONTROL_GET_CONFIGURATION_REQUEST@@, UDT(0x00001313)

0x1314 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1312

0x1315 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x1311
	list[1] = 0x110E
	list[2] = 0x1314
	list[3] = T_ULONG(0022)
	list[4] = 0x1114

0x1316 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _ERESOURCE, unique name = .?AU_ERESOURCE@@, UDT(0x00001463)

0x1317 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x1315

0x1318 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1316

0x1319 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1317

0x131a : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x110A
	list[1] = 0x1318
	list[2] = 0x10E4

0x131b : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x131a

0x131c : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _EVENT_FILTER_DESCRIPTOR, unique name = .?AU_EVENT_FILTER_DESCRIPTOR@@, UDT(0x000012e6)

0x131d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x131C

0x131e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12B5

0x131f : Length = 34, Leaf = 0x1201 LF_ARGLIST argument count = 7
	list[0] = 0x1126
	list[1] = T_ULONG(0022)
	list[2] = T_UCHAR(0020)
	list[3] = T_UQUAD(0023)
	list[4] = T_UQUAD(0023)
	list[5] = 0x131D
	list[6] = T_64PVOID(0603)

0x1320 : Length = 34, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x131E, offset = 0
		member name = 'Flink'
	list[1] = LF_MEMBER, public, type = 0x131E, offset = 8
		member name = 'Blink'

0x1321 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 7, Arg list type = 0x131f

0x1322 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1321

0x1323 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1320, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _LIST_ENTRY, unique name = .?AU_LIST_ENTRY@@, UDT(0x00001323)

0x1324 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 8, starting position = 0, Type = T_ULONG(0022)

0x1325 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 4, starting position = 8, Type = T_ULONG(0022)

0x1326 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 4, starting position = 12, Type = T_ULONG(0022)

0x1327 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 4, starting position = 16, Type = T_ULONG(0022)

0x1328 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 20, Type = T_ULONG(0022)

0x1329 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 21, Type = T_ULONG(0022)

0x132a : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 22, Type = T_ULONG(0022)

0x132b : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 23, Type = T_ULONG(0022)

0x132c : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 8, starting position = 24, Type = T_ULONG(0022)

0x132d : Length = 286, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1324, offset = 0
		member name = 'Reserved1'
	list[1] = LF_MEMBER, public, type = 0x1325, offset = 0
		member name = 'TargetSystemState'
	list[2] = LF_MEMBER, public, type = 0x1326, offset = 0
		member name = 'EffectiveSystemState'
	list[3] = LF_MEMBER, public, type = 0x1327, offset = 0
		member name = 'CurrentSystemState'
	list[4] = LF_MEMBER, public, type = 0x1328, offset = 0
		member name = 'IgnoreHibernationPath'
	list[5] = LF_MEMBER, public, type = 0x1329, offset = 0
		member name = 'PseudoTransition'
	list[6] = LF_MEMBER, public, type = 0x132A, offset = 0
		member name = 'KernelSoftReboot'
	list[7] = LF_MEMBER, public, type = 0x132B, offset = 0
		member name = 'DirectedDripsTransition'
	list[8] = LF_MEMBER, public, type = 0x132C, offset = 0
		member name = 'Reserved2'
	list[9] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'ContextAsUlong'

0x132e : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 10,  field list type 0x132d, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = _SYSTEM_POWER_STATE_CONTEXT, unique name = .?AU_SYSTEM_POWER_STATE_CONTEXT@@, UDT(0x0000132e)

0x132f : Length = 206, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'bLength'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'bDescriptorType'
	list[2] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'wTotalLength'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 4
		member name = 'bNumInterfaces'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 5
		member name = 'bConfigurationValue'
	list[5] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 6
		member name = 'iConfiguration'
	list[6] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 7
		member name = 'bmAttributes'
	list[7] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 8
		member name = 'MaxPower'

0x1330 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _SECURITY_QUALITY_OF_SERVICE, unique name = .?AU_SECURITY_QUALITY_OF_SERVICE@@, UDT(0x00001147)

0x1331 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1330

0x1332 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x132f, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 9, class name = _USB_CONFIGURATION_DESCRIPTOR, unique name = .?AU_USB_CONFIGURATION_DESCRIPTOR@@, UDT(0x00001332)

0x1333 : Length = 102, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1331, offset = 0
		member name = 'SecurityQos'
	list[1] = LF_MEMBER, public, type = 0x115F, offset = 8
		member name = 'AccessState'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'DesiredAccess'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 20
		member name = 'FullCreateOptions'

0x1334 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1333, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_SECURITY_CONTEXT, unique name = .?AU_IO_SECURITY_CONTEXT@@, UDT(0x00001334)

0x1335 : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'PipeHandle'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'Reserved'

0x1336 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1335, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 40, class name = _URB_PIPE_REQUEST, unique name = .?AU_URB_PIPE_REQUEST@@, UDT(0x00001336)

0x1337 : Length = 38, Leaf = 0x1201 LF_ARGLIST argument count = 8
	list[0] = 0x110A
	list[1] = 0x1114
	list[2] = T_ULONG(0022)
	list[3] = T_UCHAR(0020)
	list[4] = T_ULONG(0022)
	list[5] = T_UCHAR(0020)
	list[6] = 0x111A
	list[7] = 0x10E4

0x1338 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 8, Arg list type = 0x1337

0x1339 : Length = 70, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x12B5, offset = 0
		member name = 'DeviceListEntry'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'SortKey'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 20
		member name = 'Inserted'

0x133a : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_SELECT_INTERFACE, unique name = .?AU_URB_SELECT_INTERFACE@@, UDT(0x0000147f)

0x133b : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1339, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _KDEVICE_QUEUE_ENTRY, unique name = .?AU_KDEVICE_QUEUE_ENTRY@@, UDT(0x0000133b)

0x133c : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_SELECT_CONFIGURATION, unique name = .?AU_URB_SELECT_CONFIGURATION@@, UDT(0x000014be)

0x133d : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_PIPE_REQUEST, unique name = .?AU_URB_PIPE_REQUEST@@, UDT(0x00001336)

0x133e : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _SINGLE_LIST_ENTRY, unique name = .?AU_SINGLE_LIST_ENTRY@@, UDT(0x00001343)

0x133f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x133E

0x1340 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_FRAME_LENGTH_CONTROL, unique name = .?AU_URB_FRAME_LENGTH_CONTROL@@, UDT(0x00001431)

0x1341 : Length = 18, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x133F, offset = 0
		member name = 'Next'

0x1342 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_GET_FRAME_LENGTH, unique name = .?AU_URB_GET_FRAME_LENGTH@@, UDT(0x0000139b)

0x1343 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1341, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = _SINGLE_LIST_ENTRY, unique name = .?AU_SINGLE_LIST_ENTRY@@, UDT(0x00001343)

0x1344 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_SET_FRAME_LENGTH, unique name = .?AU_URB_SET_FRAME_LENGTH@@, UDT(0x00001502)

0x1345 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_GET_CURRENT_FRAME_NUMBER, unique name = .?AU_URB_GET_CURRENT_FRAME_NUMBER@@, UDT(0x00001513)

0x1346 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _KDPC, unique name = .?AU_KDPC@@, UDT(0x0000146c)

0x1347 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1346

0x1348 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_CONTROL_TRANSFER, unique name = .?AU_URB_CONTROL_TRANSFER@@, UDT(0x00001424)

0x1349 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x10C1
	list[2] = 0x10AA

0x134a : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_CONTROL_TRANSFER_EX, unique name = .?AU_URB_CONTROL_TRANSFER_EX@@, UDT(0x00001507)

0x134b : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1349

0x134c : Length = 66, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1130, offset = 0
		member name = 'MasterIrp'
	list[1] = LF_MEMBER, public, type = T_LONG(0012), offset = 0
		member name = 'IrpCount'
	list[2] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'SystemBuffer'

0x134d : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_BULK_OR_INTERRUPT_TRANSFER, unique name = .?AU_URB_BULK_OR_INTERRUPT_TRANSFER@@, UDT(0x000013f7)

0x134e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x134B

0x134f : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 3,  field list type 0x134c, SEALED, Size = 8	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x1350 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_ISOCH_TRANSFER, unique name = .?AU_URB_ISOCH_TRANSFER@@, UDT(0x00001299)

0x1351 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1017
	list[1] = 0x10BA

0x1352 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = T_64PVOID(0603)
	list[1] = 0x111A
	list[2] = T_ULONG(0022)

0x1353 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_CONTROL_DESCRIPTOR_REQUEST, unique name = .?AU_URB_CONTROL_DESCRIPTOR_REQUEST@@, UDT(0x00001461)

0x1354 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1351

0x1355 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1352

0x1356 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_CONTROL_GET_STATUS_REQUEST, unique name = .?AU_URB_CONTROL_GET_STATUS_REQUEST@@, UDT(0x00001441)

0x1357 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1355

0x1358 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1354

0x1359 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IORING_OBJECT, unique name = .?AU_IORING_OBJECT@@

0x135a : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_CONTROL_FEATURE_REQUEST, unique name = .?AU_URB_CONTROL_FEATURE_REQUEST@@, UDT(0x000014f6)

0x135b : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1359

0x135c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x1199, Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1351

0x135d : Length = 102, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_CONTROL_VENDOR_OR_CLASS_REQUEST, unique name = .?AU_URB_CONTROL_VENDOR_OR_CLASS_REQUEST@@, UDT(0x0000151a)

0x135e : Length = 106, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1357, offset = 0
		member name = 'UserApcRoutine'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'IssuingProcess'
	list[2] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'UserApcContext'
	list[3] = LF_MEMBER, public, type = 0x135B, offset = 8
		member name = 'IoRing'

0x135f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x135C

0x1360 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x135e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x1361 : Length = 98, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_CONTROL_GET_INTERFACE_REQUEST, unique name = .?AU_URB_CONTROL_GET_INTERFACE_REQUEST@@, UDT(0x000013a6)

0x1362 : Length = 66, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1360, offset = 0
		member name = 'AsynchronousParameters'
	list[1] = LF_MEMBER, public, type = 0x1073, offset = 0
		member name = 'AllocationSize'

0x1363 : Length = 106, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_CONTROL_GET_CONFIGURATION_REQUEST, unique name = .?AU_URB_CONTROL_GET_CONFIGURATION_REQUEST@@, UDT(0x00001313)

0x1364 : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 2,  field list type 0x1362, SEALED, Size = 16	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x1365 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = WDFWORKITEM__, unique name = .?AUWDFWORKITEM__@@, UDT(0x000013d2)

0x1366 : Length = 98, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_OS_FEATURE_DESCRIPTOR_REQUEST, unique name = .?AU_URB_OS_FEATURE_DESCRIPTOR_REQUEST@@, UDT(0x00001394)

0x1367 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _KDEVICE_QUEUE_ENTRY, unique name = .?AU_KDEVICE_QUEUE_ENTRY@@, UDT(0x0000133b)

0x1368 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_OPEN_STATIC_STREAMS, unique name = .?AU_URB_OPEN_STATIC_STREAMS@@, UDT(0x00001474)

0x1369 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1365

0x136a : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_64PVOID(0603)
	Index type = T_UQUAD(0023)
	length = 32
	Name = 

0x136b : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x1369

0x136c : Length = 110, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _URB_GET_ISOCH_PIPE_TRANSFER_PATH_DELAYS, unique name = .?AU_URB_GET_ISOCH_PIPE_TRANSFER_PATH_DELAYS@@, UDT(0x000014fd)

0x136d : Length = 46, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _ETHREAD, unique name = .?AU_ETHREAD@@

0x136e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x136D

0x136f : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x136b

0x1370 : Length = 738, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'UrbHeader'
	list[1] = LF_MEMBER, public, type = 0x133A, offset = 0
		member name = 'UrbSelectInterface'
	list[2] = LF_MEMBER, public, type = 0x133C, offset = 0
		member name = 'UrbSelectConfiguration'
	list[3] = LF_MEMBER, public, type = 0x133D, offset = 0
		member name = 'UrbPipeRequest'
	list[4] = LF_MEMBER, public, type = 0x1340, offset = 0
		member name = 'UrbFrameLengthControl'
	list[5] = LF_MEMBER, public, type = 0x1342, offset = 0
		member name = 'UrbGetFrameLength'
	list[6] = LF_MEMBER, public, type = 0x1344, offset = 0
		member name = 'UrbSetFrameLength'
	list[7] = LF_MEMBER, public, type = 0x1345, offset = 0
		member name = 'UrbGetCurrentFrameNumber'
	list[8] = LF_MEMBER, public, type = 0x1348, offset = 0
		member name = 'UrbControlTransfer'
	list[9] = LF_MEMBER, public, type = 0x134A, offset = 0
		member name = 'UrbControlTransferEx'
	list[10] = LF_MEMBER, public, type = 0x134D, offset = 0
		member name = 'UrbBulkOrInterruptTransfer'
	list[11] = LF_MEMBER, public, type = 0x1350, offset = 0
		member name = 'UrbIsochronousTransfer'
	list[12] = LF_MEMBER, public, type = 0x1353, offset = 0
		member name = 'UrbControlDescriptorRequest'
	list[13] = LF_MEMBER, public, type = 0x1356, offset = 0
		member name = 'UrbControlGetStatusRequest'
	list[14] = LF_MEMBER, public, type = 0x135A, offset = 0
		member name = 'UrbControlFeatureRequest'
	list[15] = LF_MEMBER, public, type = 0x135D, offset = 0
		member name = 'UrbControlVendorClassRequest'
	list[16] = LF_MEMBER, public, type = 0x1361, offset = 0
		member name = 'UrbControlGetInterfaceRequest'
	list[17] = LF_MEMBER, public, type = 0x1363, offset = 0
		member name = 'UrbControlGetConfigurationRequest'
	list[18] = LF_MEMBER, public, type = 0x1366, offset = 0
		member name = 'UrbOSFeatureDescriptorRequest'
	list[19] = LF_MEMBER, public, type = 0x1368, offset = 0
		member name = 'UrbOpenStaticStreams'
	list[20] = LF_MEMBER, public, type = 0x136C, offset = 0
		member name = 'UrbGetIsochPipeTransferPathDelays'

0x1371 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x136F

0x1372 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION, unique name = .?AU_IO_STACK_LOCATION@@, UDT(0x00001657)

0x1373 : Length = 82, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = 0x1371, offset = 8
		member name = 'EvtWorkItemFunc'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 16
		member name = 'AutomaticSerialization'

0x1374 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 21,  field list type 0x1370, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 152, class name = _URB, unique name = .?AU_URB@@, UDT(0x00001374)

0x1375 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1372

0x1376 : Length = 210, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1367, offset = 0
		member name = 'DeviceQueueEntry'
	list[1] = LF_MEMBER, public, type = 0x136A, offset = 0
		member name = 'DriverContext'
	list[2] = LF_MEMBER, public, type = 0x136E, offset = 32
		member name = 'Thread'
	list[3] = LF_MEMBER, public, type = T_64PRCHAR(0670), offset = 40
		member name = 'AuxiliaryBuffer'
	list[4] = LF_MEMBER, public, type = 0x12B5, offset = 48
		member name = 'ListEntry'
	list[5] = LF_MEMBER, public, type = 0x1375, offset = 64
		member name = 'CurrentStackLocation'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 64
		member name = 'PacketType'
	list[7] = LF_MEMBER, public, type = 0x110A, offset = 72
		member name = 'OriginalFileObject'

0x1377 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1373, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _WDF_WORKITEM_CONFIG, unique name = .?AU_WDF_WORKITEM_CONFIG@@, UDT(0x00001377)

0x1378 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12C6

0x1379 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_64PVOID(0603)
	Index type = T_UQUAD(0023)
	length = 64
	Name = 

0x137a : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x1376, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 80, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x137b : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _KAPC, unique name = .?AU_KAPC@@, UDT(0x0000141b)

0x137c : Length = 22, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1379, offset = 0
		member name = 'Reserved8'

0x137d : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x137A, offset = 0
		member name = 'Overlay'
	list[1] = LF_MEMBER, public, type = 0x137B, offset = 0
		member name = 'Apc'
	list[2] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'CompletionKey'

0x137e : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x137c, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 64, class name = _URB_HCD_AREA, unique name = .?AU_URB_HCD_AREA@@, UDT(0x0000137e)

0x137f : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WHEA_ERROR_RECORD_HEADER, unique name = .?AU_WHEA_ERROR_RECORD_HEADER@@

0x1380 : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 3,  field list type 0x137d, SEALED, Size = 88	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x1381 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x137F

0x1382 : Length = 498, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_SHORT(0011), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = 0x110E, offset = 8
		member name = 'MdlAddress'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'Flags'
	list[4] = LF_MEMBER, public, type = 0x134F, offset = 24
		member name = 'AssociatedIrp'
	list[5] = LF_MEMBER, public, type = 0x12B5, offset = 32
		member name = 'ThreadListEntry'
	list[6] = LF_MEMBER, public, type = 0x1118, offset = 48
		member name = 'IoStatus'
	list[7] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 64
		member name = 'RequestorMode'
	list[8] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 65
		member name = 'PendingReturned'
	list[9] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 66
		member name = 'StackCount'
	list[10] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 67
		member name = 'CurrentLocation'
	list[11] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 68
		member name = 'Cancel'
	list[12] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 69
		member name = 'CancelIrql'
	list[13] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 70
		member name = 'ApcEnvironment'
	list[14] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 71
		member name = 'AllocationFlags'
	list[15] = LF_MEMBER, public, type = 0x111A, offset = 72
		member name = 'UserIosb'
	list[16] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 72
		member name = 'IoRingContext'
	list[17] = LF_MEMBER, public, type = 0x12CE, offset = 80
		member name = 'UserEvent'
	list[18] = LF_MEMBER, public, type = 0x1364, offset = 88
		member name = 'Overlay'
	list[19] = LF_MEMBER, public, type = 0x1302, offset = 104
		member name = 'CancelRoutine'
	list[20] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 112
		member name = 'UserBuffer'
	list[21] = LF_MEMBER, public, type = 0x1380, offset = 120
		member name = 'Tail'

0x1383 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _USBD_STREAM_INFORMATION, unique name = .?AU_USBD_STREAM_INFORMATION@@, UDT(0x00001467)

0x1384 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x10BA
	list[2] = 0x10AA

0x1385 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1383

0x1386 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 22,  field list type 0x1382, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 208, class name = _IRP, unique name = .?AU_IRP@@, UDT(0x00001716)

0x1387 : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _USBD_INTERFACE_INFORMATION, unique name = .?AU_USBD_INTERFACE_INFORMATION@@, UDT(0x0000113f)

0x1388 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1387

0x1389 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1384

0x138a : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 5, starting position = 0, Type = T_UCHAR(0020)

0x138b : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1389

0x138c : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _FILE_NETWORK_OPEN_INFORMATION, unique name = .?AU_FILE_NETWORK_OPEN_INFORMATION@@, UDT(0x00001429)

0x138d : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 3, starting position = 5, Type = T_UCHAR(0020)

0x138e : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _BTHPS3PSM_GET_PSM_PATCHING, unique name = .?AU_BTHPS3PSM_GET_PSM_PATCHING@@, UDT(0x000013b0)

0x138f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x138C

0x1390 : Length = 350, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Reserved'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'Reserved0'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'TransferBufferLength'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'TransferBuffer'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'TransferBufferMDL'
	list[6] = LF_MEMBER, public, type = 0x128C, offset = 56
		member name = 'UrbLink'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'
	list[8] = LF_MEMBER, public, type = 0x138A, offset = 128
		member name = 'Recipient'
	list[9] = LF_MEMBER, public, type = 0x138D, offset = 128
		member name = 'Reserved1'
	list[10] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 129
		member name = 'Reserved2'
	list[11] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 130
		member name = 'InterfaceNumber'
	list[12] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 131
		member name = 'MS_PageIndex'
	list[13] = LF_MEMBER, public, type = T_USHORT(0021), offset = 132
		member name = 'MS_FeatureDescriptorIndex'
	list[14] = LF_MEMBER, public, type = T_USHORT(0021), offset = 134
		member name = 'Reserved3'

0x1391 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x110A
	list[1] = T_UCHAR(0020)
	list[2] = 0x138F
	list[3] = 0x111A
	list[4] = 0x10E4

0x1392 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x138E

0x1393 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x1391

0x1394 : Length = 98, Leaf = 0x1505 LF_STRUCTURE
	# members = 15,  field list type 0x1390, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 136, class name = _URB_OS_FEATURE_DESCRIPTOR_REQUEST, unique name = .?AU_URB_OS_FEATURE_DESCRIPTOR_REQUEST@@, UDT(0x00001394)

0x1395 : Length = 70, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, FORWARD REF, Size = 0	,class name = _WHEA_ERROR_PACKET_FLAGS, unique name = .?AT_WHEA_ERROR_PACKET_FLAGS@@

0x1396 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1142

0x1397 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x116C

0x1398 : Length = 66, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'FrameLength'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 28
		member name = 'FrameNumber'

0x1399 : Length = 214, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WheaErrTypeProcessor'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WheaErrTypeMemory'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WheaErrTypePCIExpress'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WheaErrTypeNMI'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WheaErrTypePCIXBus'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'WheaErrTypePCIXDevice'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'WheaErrTypeGeneric'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'WheaErrTypePmem'

0x139a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1338

0x139b : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1398, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _URB_GET_FRAME_LENGTH, unique name = .?AU_URB_GET_FRAME_LENGTH@@, UDT(0x0000139b)

0x139c : Length = 58, Leaf = 0x1507 LF_ENUM
	# members = 8,  type = T_INT4(0074) field list type 0x1399
	enum name = _WHEA_ERROR_TYPE, UDT(0x0000139c)

0x139d : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _RTL_DYNAMIC_HASH_TABLE_CONTEXT, unique name = .?AU_RTL_DYNAMIC_HASH_TABLE_CONTEXT@@

0x139e : Length = 114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WheaErrSevRecoverable'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WheaErrSevFatal'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WheaErrSevCorrected'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WheaErrSevInformational'

0x139f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x139D

0x13a0 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_UCHAR(0020)
	Index type = T_UQUAD(0023)
	length = 4
	Name = 

0x13a1 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x139e
	enum name = _WHEA_ERROR_SEVERITY, UDT(0x000013a1)

0x13a2 : Length = 50, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1042, offset = 0
		member name = 'SystemState'
	list[1] = LF_MEMBER, public, type = 0x1044, offset = 0
		member name = 'DeviceState'

0x13a3 : Length = 242, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Reserved'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'Reserved0'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'TransferBufferLength'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'TransferBuffer'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'TransferBufferMDL'
	list[6] = LF_MEMBER, public, type = 0x128C, offset = 56
		member name = 'UrbLink'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'
	list[8] = LF_MEMBER, public, type = 0x13A0, offset = 128
		member name = 'Reserved1'
	list[9] = LF_MEMBER, public, type = T_USHORT(0021), offset = 132
		member name = 'Interface'
	list[10] = LF_MEMBER, public, type = T_USHORT(0021), offset = 134
		member name = 'Reserved2'

0x13a4 : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 2,  field list type 0x13a2, SEALED, Size = 4	,class name = _POWER_STATE, unique name = .?AT_POWER_STATE@@, UDT(0x000013a4)

0x13a5 : Length = 266, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'WheaDataFormatIPFSalRecord'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'WheaDataFormatXPFMCA'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'WheaDataFormatMemory'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'WheaDataFormatPCIExpress'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'WheaDataFormatNMIPort'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'WheaDataFormatPCIXBus'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'WheaDataFormatPCIXDevice'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'WheaDataFormatGeneric'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'WheaDataFormatMax'

0x13a6 : Length = 98, Leaf = 0x1505 LF_STRUCTURE
	# members = 11,  field list type 0x13a3, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 136, class name = _URB_CONTROL_GET_INTERFACE_REQUEST, unique name = .?AU_URB_CONTROL_GET_INTERFACE_REQUEST@@, UDT(0x000013a6)

0x13a7 : Length = 86, Leaf = 0x1507 LF_ENUM
	# members = 9,  type = T_INT4(0074) field list type 0x13a5
	enum name = _WHEA_ERROR_PACKET_DATA_FORMAT, UDT(0x000013a7)

0x13a8 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x113C

0x13a9 : Length = 366, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Signature'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Version'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Length'
	list[3] = LF_MEMBER, public, type = 0x1395, offset = 12
		member name = 'Flags'
	list[4] = LF_MEMBER, public, type = 0x139C, offset = 16
		member name = 'ErrorType'
	list[5] = LF_MEMBER, public, type = 0x13A1, offset = 20
		member name = 'ErrorSeverity'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'ErrorSourceId'
	list[7] = LF_MEMBER, public, type = 0x1052, offset = 28
		member name = 'ErrorSourceType'
	list[8] = LF_MEMBER, public, type = 0x10D5, offset = 32
		member name = 'NotifyType'
	list[9] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 48
		member name = 'Context'
	list[10] = LF_MEMBER, public, type = 0x13A7, offset = 56
		member name = 'DataFormat'
	list[11] = LF_MEMBER, public, type = T_ULONG(0022), offset = 60
		member name = 'Reserved1'
	list[12] = LF_MEMBER, public, type = T_ULONG(0022), offset = 64
		member name = 'DataOffset'
	list[13] = LF_MEMBER, public, type = T_ULONG(0022), offset = 68
		member name = 'DataLength'
	list[14] = LF_MEMBER, public, type = T_ULONG(0022), offset = 72
		member name = 'PshedDataOffset'
	list[15] = LF_MEMBER, public, type = T_ULONG(0022), offset = 76
		member name = 'PshedDataLength'

0x13aa : Length = 46, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _KTHREAD, unique name = .?AU_KTHREAD@@

0x13ab : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 16,  field list type 0x13a9, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 80, class name = _WHEA_ERROR_PACKET_V2, unique name = .?AU_WHEA_ERROR_PACKET_V2@@, UDT(0x000013ab)

0x13ac : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13AA

0x13ad : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x12e4, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = _LUID, unique name = .?AU_LUID@@, UDT(0x000013ad)

0x13ae : Length = 74, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'DeviceIndex'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'IsEnabled'
	list[2] = LF_MEMBER, public, type = 0x12CF, offset = 8
		member name = 'SymbolicLinkName'

0x13af : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1130
	list[1] = 0x138F
	list[2] = 0x10E4

0x13b0 : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x13ae, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 408, class name = _BTHPS3PSM_GET_PSM_PATCHING, unique name = .?AU_BTHPS3PSM_GET_PSM_PATCHING@@, UDT(0x000013b0)

0x13b1 : Length = 4778, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = (LF_LONG) -2147483647, name = 'WheaEventLogEntryIdCmcPollingTimeout'
	list[1] = LF_ENUMERATE, public, value = (LF_LONG) -2147483646, name = 'WheaEventLogEntryIdWheaInit'
	list[2] = LF_ENUMERATE, public, value = (LF_LONG) -2147483645, name = 'WheaEventLogEntryIdCmcSwitchToPolling'
	list[3] = LF_ENUMERATE, public, value = (LF_LONG) -2147483644, name = 'WheaEventLogEntryIdDroppedCorrectedError'
	list[4] = LF_ENUMERATE, public, value = (LF_LONG) -2147483643, name = 'WheaEventLogEntryIdStartedReportHwError'
	list[5] = LF_ENUMERATE, public, value = (LF_LONG) -2147483642, name = 'WheaEventLogEntryIdPFAMemoryOfflined'
	list[6] = LF_ENUMERATE, public, value = (LF_LONG) -2147483641, name = 'WheaEventLogEntryIdPFAMemoryRemoveMonitor'
	list[7] = LF_ENUMERATE, public, value = (LF_LONG) -2147483640, name = 'WheaEventLogEntryIdPFAMemoryPolicy'
	list[8] = LF_ENUMERATE, public, value = (LF_LONG) -2147483639, name = 'WheaEventLogEntryIdPshedInjectError'
	list[9] = LF_ENUMERATE, public, value = (LF_LONG) -2147483638, name = 'WheaEventLogEntryIdOscCapabilities'
	list[10] = LF_ENUMERATE, public, value = (LF_LONG) -2147483637, name = 'WheaEventLogEntryIdPshedPluginRegister'
	list[11] = LF_ENUMERATE, public, value = (LF_LONG) -2147483636, name = 'WheaEventLogEntryIdAddRemoveErrorSource'
	list[12] = LF_ENUMERATE, public, value = (LF_LONG) -2147483635, name = 'WheaEventLogEntryIdWorkQueueItem'
	list[13] = LF_ENUMERATE, public, value = (LF_LONG) -2147483634, name = 'WheaEventLogEntryIdAttemptErrorRecovery'
	list[14] = LF_ENUMERATE, public, value = (LF_LONG) -2147483633, name = 'WheaEventLogEntryIdMcaFoundErrorInBank'
	list[15] = LF_ENUMERATE, public, value = (LF_LONG) -2147483632, name = 'WheaEventLogEntryIdMcaStuckErrorCheck'
	list[16] = LF_ENUMERATE, public, value = (LF_LONG) -2147483631, name = 'WheaEventLogEntryIdMcaErrorCleared'
	list[17] = LF_ENUMERATE, public, value = (LF_LONG) -2147483630, name = 'WheaEventLogEntryIdClearedPoison'
	list[18] = LF_ENUMERATE, public, value = (LF_LONG) -2147483629, name = 'WheaEventLogEntryIdProcessEINJ'
	list[19] = LF_ENUMERATE, public, value = (LF_LONG) -2147483628, name = 'WheaEventLogEntryIdProcessHEST'
	list[20] = LF_ENUMERATE, public, value = (LF_LONG) -2147483627, name = 'WheaEventLogEntryIdCreateGenericRecord'
	list[21] = LF_ENUMERATE, public, value = (LF_LONG) -2147483626, name = 'WheaEventLogEntryIdErrorRecord'
	list[22] = LF_ENUMERATE, public, value = (LF_LONG) -2147483625, name = 'WheaEventLogEntryIdErrorRecordLimit'
	list[23] = LF_ENUMERATE, public, value = (LF_LONG) -2147483624, name = 'WheaEventLogEntryIdAerNotGrantedToOs'
	list[24] = LF_ENUMERATE, public, value = (LF_LONG) -2147483623, name = 'WheaEventLogEntryIdErrSrcArrayInvalid'
	list[25] = LF_ENUMERATE, public, value = (LF_LONG) -2147483622, name = 'WheaEventLogEntryIdAcpiTimeOut'
	list[26] = LF_ENUMERATE, public, value = (LF_LONG) -2147483621, name = 'WheaEventLogCmciRestart'
	list[27] = LF_ENUMERATE, public, value = (LF_LONG) -2147483620, name = 'WheaEventLogCmciFinalRestart'
	list[28] = LF_ENUMERATE, public, value = (LF_LONG) -2147483619, name = 'WheaEventLogEntryEtwOverFlow'
	list[29] = LF_ENUMERATE, public, value = (LF_LONG) -2147483618, name = 'WheaEventLogAzccRootBusSearchErr'
	list[30] = LF_ENUMERATE, public, value = (LF_LONG) -2147483617, name = 'WheaEventLogAzccRootBusList'
	list[31] = LF_ENUMERATE, public, value = (LF_LONG) -2147483616, name = 'WheaEventLogEntryIdErrSrcInvalid'
	list[32] = LF_ENUMERATE, public, value = (LF_LONG) -2147483615, name = 'WheaEventLogEntryIdGenericErrMemMap'
	list[33] = LF_ENUMERATE, public, value = (LF_LONG) -2147483614, name = 'WheaEventLogEntryIdPshedCallbackCollision'
	list[34] = LF_ENUMERATE, public, value = (LF_LONG) -2147483613, name = 'WheaEventLogEntryIdSELBugCheckProgress'
	list[35] = LF_ENUMERATE, public, value = (LF_LONG) -2147483612, name = 'WheaEventLogEntryIdPshedPluginLoad'
	list[36] = LF_ENUMERATE, public, value = (LF_LONG) -2147483611, name = 'WheaEventLogEntryIdPshedPluginUnload'
	list[37] = LF_ENUMERATE, public, value = (LF_LONG) -2147483610, name = 'WheaEventLogEntryIdPshedPluginSupported'
	list[38] = LF_ENUMERATE, public, value = (LF_LONG) -2147483609, name = 'WheaEventLogEntryIdDeviceDriver'
	list[39] = LF_ENUMERATE, public, value = (LF_LONG) -2147483608, name = 'WheaEventLogEntryIdCmciImplPresent'
	list[40] = LF_ENUMERATE, public, value = (LF_LONG) -2147483607, name = 'WheaEventLogEntryIdCmciInitError'
	list[41] = LF_ENUMERATE, public, value = (LF_LONG) -2147483606, name = 'WheaEventLogEntryIdSELBugCheckRecovery'
	list[42] = LF_ENUMERATE, public, value = (LF_LONG) -2147483605, name = 'WheaEventLogEntryIdDrvErrSrcInvalid'
	list[43] = LF_ENUMERATE, public, value = (LF_LONG) -2147483604, name = 'WheaEventLogEntryIdDrvHandleBusy'
	list[44] = LF_ENUMERATE, public, value = (LF_LONG) -2147483603, name = 'WheaEventLogEntryIdWheaHeartbeat'
	list[45] = LF_ENUMERATE, public, value = (LF_LONG) -2147483602, name = 'WheaEventLogAzccRootBusPoisonSet'
	list[46] = LF_ENUMERATE, public, value = (LF_LONG) -2147483601, name = 'WheaEventLogEntryIdSELBugCheckInfo'
	list[47] = LF_ENUMERATE, public, value = (LF_LONG) -2147483600, name = 'WheaEventLogEntryIdErrDimmInfoMismatch'
	list[48] = LF_ENUMERATE, public, value = (LF_LONG) -2147483599, name = 'WheaEventLogEntryIdeDpcEnabled'
	list[49] = LF_ENUMERATE, public, value = (LF_LONG) -2147483598, name = 'WheaEventLogEntryPageOfflineDone'
	list[50] = LF_ENUMERATE, public, value = (LF_LONG) -2147483597, name = 'WheaEventLogEntryPageOfflinePendMax'
	list[51] = LF_ENUMERATE, public, value = (LF_LONG) -2147483596, name = 'WheaEventLogEntryIdBadPageLimitReached'
	list[52] = LF_ENUMERATE, public, value = (LF_LONG) -2147483595, name = 'WheaEventLogEntrySrarDetail'
	list[53] = LF_ENUMERATE, public, value = (LF_LONG) -2147483594, name = 'WheaEventLogEntryEarlyError'
	list[54] = LF_ENUMERATE, public, value = (LF_LONG) -2147483593, name = 'WheaEventLogEntryIdPcieOverrideInfo'
	list[55] = LF_ENUMERATE, public, value = (LF_LONG) -2147483592, name = 'WheaEventLogEntryIdReadPcieOverridesErr'
	list[56] = LF_ENUMERATE, public, value = (LF_LONG) -2147483591, name = 'WheaEventLogEntryIdPcieConfigInfo'
	list[57] = LF_ENUMERATE, public, value = (LF_LONG) -2147483584, name = 'WheaEventLogEntryIdPcieSummaryFailed'
	list[58] = LF_ENUMERATE, public, value = (LF_LONG) -2147483583, name = 'WheaEventLogEntryIdThrottleRegCorrupt'
	list[59] = LF_ENUMERATE, public, value = (LF_LONG) -2147483582, name = 'WheaEventLogEntryIdThrottleAddErrSrcFailed'
	list[60] = LF_ENUMERATE, public, value = (LF_LONG) -2147483581, name = 'WheaEventLogEntryIdThrottleRegDataIgnored'
	list[61] = LF_ENUMERATE, public, value = (LF_LONG) -2147483580, name = 'WheaEventLogEntryIdEnableKeyNotifFailed'
	list[62] = LF_ENUMERATE, public, value = (LF_LONG) -2147483579, name = 'WheaEventLogEntryIdKeyNotificationFailed'
	list[63] = LF_ENUMERATE, public, value = (LF_LONG) -2147483578, name = 'WheaEventLogEntryIdPcieRemoveDevice'
	list[64] = LF_ENUMERATE, public, value = (LF_LONG) -2147483577, name = 'WheaEventLogEntryIdPcieAddDevice'
	list[65] = LF_ENUMERATE, public, value = (LF_LONG) -2147483576, name = 'WheaEventLogEntryIdPcieSpuriousErrSource'
	list[66] = LF_ENUMERATE, public, value = (LF_LONG) -2147483575, name = 'WheaEventLogEntryIdMemoryAddDevice'
	list[67] = LF_ENUMERATE, public, value = (LF_LONG) -2147483574, name = 'WheaEventLogEntryIdMemoryRemoveDevice'
	list[68] = LF_ENUMERATE, public, value = (LF_LONG) -2147483573, name = 'WheaEventLogEntryIdMemorySummaryFailed'
	list[69] = LF_ENUMERATE, public, value = (LF_LONG) -2147483572, name = 'WheaEventLogEntryIdPcieDpcError'
	list[70] = LF_ENUMERATE, public, value = (LF_LONG) -2147483571, name = 'WheaEventLogEntryIdCpuBusesInitFailed'
	list[71] = LF_ENUMERATE, public, value = (LF_LONG) -2147483570, name = 'WheaEventLogEntryIdPshedPluginInitFailed'
	list[72] = LF_ENUMERATE, public, value = (LF_LONG) -2147483569, name = 'WheaEventLogEntryIdFailedAddToDefectList'
	list[73] = LF_ENUMERATE, public, value = (LF_LONG) -2147483568, name = 'WheaEventLogEntryIdDefectListFull'
	list[74] = LF_ENUMERATE, public, value = (LF_LONG) -2147483567, name = 'WheaEventLogEntryIdDefectListUEFIVarFailed'
	list[75] = LF_ENUMERATE, public, value = (LF_LONG) -2147483566, name = 'WheaEventLogEntryIdDefectListCorrupt'
	list[76] = LF_ENUMERATE, public, value = (LF_LONG) -2147483565, name = 'WheaEventLogEntryIdBadHestNotifyData'
	list[77] = LF_ENUMERATE, public, value = (LF_LONG) -2147483564, name = 'WheaEventLogEntryIdRowFailure'
	list[78] = LF_ENUMERATE, public, value = (LF_LONG) -2147483563, name = 'WheaEventLogEntryIdSrasTableNotFound'
	list[79] = LF_ENUMERATE, public, value = (LF_LONG) -2147483562, name = 'WheaEventLogEntryIdSrasTableError'
	list[80] = LF_ENUMERATE, public, value = (LF_LONG) -2147483561, name = 'WheaEventLogEntryIdSrasTableEntries'
	list[81] = LF_ENUMERATE, public, value = (LF_LONG) -2147483560, name = 'WheaEventLogEntryIdPFANotifyCallbackAction'
	list[82] = LF_ENUMERATE, public, value = (LF_LONG) -2147483559, name = 'WheaEventLogEntryIdSELBugCheckCpusQuiesced'
	list[83] = LF_ENUMERATE, public, value = (LF_LONG) -2147483558, name = 'WheaEventLogEntryIdPshedPiCpuid'
	list[84] = LF_ENUMERATE, public, value = (LF_LONG) -2147483557, name = 'WheaEventLogEntryIdSrasTableBadData'
	list[85] = LF_ENUMERATE, public, value = (LF_LONG) -2147483556, name = 'WheaEventLogEntryIdDriFsStatus'
	list[86] = LF_ENUMERATE, public, value = (LF_LONG) -2147483552, name = 'WheaEventLogEntryIdCpusFrozen'
	list[87] = LF_ENUMERATE, public, value = (LF_LONG) -2147483551, name = 'WheaEventLogEntryIdCpusFrozenNoCrashDump'
	list[88] = LF_ENUMERATE, public, value = (LF_LONG) -2147483550, name = 'WheaEventLogEntryIdRegNotifyPolicyChange'
	list[89] = LF_ENUMERATE, public, value = (LF_LONG) -2147483549, name = 'WheaEventLogEntryIdRegError'
	list[90] = LF_ENUMERATE, public, value = (LF_LONG) -2147483548, name = 'WheaEventLogEntryIdRowOfflineEvent'
	list[91] = LF_ENUMERATE, public, value = (LF_LONG) -2147483547, name = 'WheaEventLogEntryIdBitOfflineEvent'
	list[92] = LF_ENUMERATE, public, value = (LF_LONG) -2147483546, name = 'WheaEventLogEntryIdBadGasFields'
	list[93] = LF_ENUMERATE, public, value = (LF_LONG) -2147483545, name = 'WheaEventLogEntryIdCrashDumpError'
	list[94] = LF_ENUMERATE, public, value = (LF_LONG) -2147483544, name = 'WheaEventLogEntryIdCrashDumpCheckpoint'
	list[95] = LF_ENUMERATE, public, value = (LF_LONG) -2147483543, name = 'WheaEventLogEntryIdCrashDumpProgressPercent'
	list[96] = LF_ENUMERATE, public, value = (LF_LONG) -2147483542, name = 'WheaEventLogEntryIdPreviousCrashBugCheckProgress'
	list[97] = LF_ENUMERATE, public, value = (LF_LONG) -2147483541, name = 'WheaEventLogEntryIdSELBugCheckStackDump'
	list[98] = LF_ENUMERATE, public, value = (LF_LONG) -2147483540, name = 'WheaEventLogEntryIdPciePromotedAerErr'
	list[99] = LF_ENUMERATE, public, value = (LF_LONG) -2147221488, name = 'WheaEventLogEntryIdPshedPiTraceLog'

0x13b2 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x13af

0x13b3 : Length = 74, Leaf = 0x1507 LF_ENUM
	# members = 100,  type = T_INT4(0074) field list type 0x13b1
	enum name = _WHEA_EVENT_LOG_ENTRY_ID, UDT(0x000013b3)

0x13b4 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x131B

0x13b5 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFREQUEST__, unique name = .?AUWDFREQUEST__@@, UDT(0x000013b5)

0x13b6 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : T_64PVOID(0603)

0x13b7 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _SECTION_OBJECT_POINTERS, unique name = .?AU_SECTION_OBJECT_POINTERS@@, UDT(0x000013fa)

0x13b8 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x1017
	list[1] = 0x11BA
	list[2] = T_UQUAD(0023)
	list[3] = 0x13B6
	list[4] = T_64PUQUAD(0623)

0x13b9 : Length = 54, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Flags'
	list[2] = LF_MEMBER, public, type = T_QUAD(0013), offset = 8
		member name = 'Timeout'

0x13ba : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13B7

0x13bb : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x13b8

0x13bc : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x13b9, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _WDF_REQUEST_SEND_OPTIONS, unique name = .?AU_WDF_REQUEST_SEND_OPTIONS@@, UDT(0x000013bc)

0x13bd : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13BB

0x13be : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IOP_FILE_OBJECT_EXTENSION, unique name = .?AU_IOP_FILE_OBJECT_EXTENSION@@

0x13bf : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1017
	list[1] = 0x1369

0x13c0 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x13bf

0x13c1 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13BE

0x13c2 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13C0

0x13c3 : Length = 678, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_SHORT(0011), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_SHORT(0011), offset = 2
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = 0x10E4, offset = 8
		member name = 'DeviceObject'
	list[3] = LF_MEMBER, public, type = 0x1210, offset = 16
		member name = 'Vpb'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'FsContext'
	list[5] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 32
		member name = 'FsContext2'
	list[6] = LF_MEMBER, public, type = 0x13BA, offset = 40
		member name = 'SectionObjectPointer'
	list[7] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 48
		member name = 'PrivateCacheMap'
	list[8] = LF_MEMBER, public, type = T_LONG(0012), offset = 56
		member name = 'FinalStatus'
	list[9] = LF_MEMBER, public, type = 0x110A, offset = 64
		member name = 'RelatedFileObject'
	list[10] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 72
		member name = 'LockOperation'
	list[11] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 73
		member name = 'DeletePending'
	list[12] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 74
		member name = 'ReadAccess'
	list[13] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 75
		member name = 'WriteAccess'
	list[14] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 76
		member name = 'DeleteAccess'
	list[15] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 77
		member name = 'SharedRead'
	list[16] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 78
		member name = 'SharedWrite'
	list[17] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 79
		member name = 'SharedDelete'
	list[18] = LF_MEMBER, public, type = T_ULONG(0022), offset = 80
		member name = 'Flags'
	list[19] = LF_MEMBER, public, type = 0x1089, offset = 88
		member name = 'FileName'
	list[20] = LF_MEMBER, public, type = 0x1073, offset = 104
		member name = 'CurrentByteOffset'
	list[21] = LF_MEMBER, public, type = T_ULONG(0022), offset = 112
		member name = 'Waiters'
	list[22] = LF_MEMBER, public, type = T_ULONG(0022), offset = 116
		member name = 'Busy'
	list[23] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 120
		member name = 'LastLock'
	list[24] = LF_MEMBER, public, type = 0x12CC, offset = 128
		member name = 'Lock'
	list[25] = LF_MEMBER, public, type = 0x12CC, offset = 152
		member name = 'Event'
	list[26] = LF_MEMBER, public, type = 0x12D8, offset = 176
		member name = 'CompletionContext'
	list[27] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 184
		member name = 'IrpListLock'
	list[28] = LF_MEMBER, public, type = 0x12B5, offset = 192
		member name = 'IrpList'
	list[29] = LF_MEMBER, public, type = 0x13C1, offset = 208
		member name = 'FileObjectExtension'

0x13c4 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 30,  field list type 0x13c3, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 216, class name = _FILE_OBJECT, unique name = .?AU_FILE_OBJECT@@, UDT(0x000013c4)

0x13c5 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1017
	list[1] = 0x10A6
	list[2] = 0x10AA
	list[3] = T_ULONG(0022)

0x13c6 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x13c5

0x13c7 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13C6

0x13c8 : Length = 118, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1073, offset = 0
		member name = 'AllocationSize'
	list[1] = LF_MEMBER, public, type = 0x1073, offset = 8
		member name = 'EndOfFile'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'NumberOfLinks'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 20
		member name = 'DeletePending'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 21
		member name = 'Directory'

0x13c9 : Length = 26, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'DeviceIndex'

0x13ca : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x13c8, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _FILE_STANDARD_INFORMATION, unique name = .?AU_FILE_STANDARD_INFORMATION@@, UDT(0x000013ca)

0x13cb : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x13c9, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = _BTHPS3PSM_DISABLE_PSM_PATCHING, unique name = .?AU_BTHPS3PSM_DISABLE_PSM_PATCHING@@, UDT(0x000013cb)

0x13cc : Length = 10, Leaf = 0x1001 LF_MODIFIER
	volatile, modifies type T_LONG(0012)

0x13cd : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_WORKITEM_CONFIG, unique name = .?AU_WDF_WORKITEM_CONFIG@@, UDT(0x00001377)

0x13ce : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 0, Type = T_UCHAR(0020)

0x13cf : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13CD

0x13d0 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 1, Type = T_UCHAR(0020)

0x13d1 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 6, starting position = 2, Type = T_UCHAR(0020)

0x13d2 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFWORKITEM__, unique name = .?AUWDFWORKITEM__@@, UDT(0x000013d2)

0x13d3 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 6, starting position = 0, Type = T_UCHAR(0020)

0x13d4 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 6, Type = T_UCHAR(0020)

0x13d5 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x13c9, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = _BTHPS3PSM_ENABLE_PSM_PATCHING, unique name = .?AU_BTHPS3PSM_ENABLE_PSM_PATCHING@@, UDT(0x000013d5)

0x13d6 : Length = 10, Leaf = 0x1001 LF_MODIFIER
	volatile, modifies type T_UCHAR(0020)

0x13d7 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 7, Type = 0x13D6

0x13d8 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 2, Type = T_UCHAR(0020)

0x13d9 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _BTHPS3PSM_ENABLE_PSM_PATCHING, unique name = .?AU_BTHPS3PSM_ENABLE_PSM_PATCHING@@, UDT(0x000013d5)

0x13da : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 3, Type = T_UCHAR(0020)

0x13db : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13D9

0x13dc : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 4, Type = T_UCHAR(0020)

0x13dd : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 5, Type = T_UCHAR(0020)

0x13de : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WHEA_ERROR_RECORD, unique name = .?AU_WHEA_ERROR_RECORD@@, UDT(0x00001407)

0x13df : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 2, starting position = 6, Type = T_UCHAR(0020)

0x13e0 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13DE

0x13e1 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 7, Type = T_UCHAR(0020)

0x13e2 : Length = 50, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, FORWARD REF, Size = 0	,class name = _WHEA_REVISION, unique name = .?AT_WHEA_REVISION@@

0x13e3 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 2, starting position = 3, Type = T_UCHAR(0020)

0x13e4 : Length = 114, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, FORWARD REF, Size = 0	,class name = _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS, unique name = .?AT_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS@@

0x13e5 : Length = 1434, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x13CC, offset = 0
		member name = 'Lock'
	list[1] = LF_MEMBER, public, type = T_LONG(0012), offset = 0
		member name = 'LockNV'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'Type'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'Signalling'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'Size'
	list[5] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'Reserved1'
	list[6] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'TimerType'
	list[7] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'TimerControlFlags'
	list[8] = LF_MEMBER, public, type = 0x13CE, offset = 1
		member name = 'Absolute'
	list[9] = LF_MEMBER, public, type = 0x13D0, offset = 1
		member name = 'Wake'
	list[10] = LF_MEMBER, public, type = 0x13D1, offset = 1
		member name = 'EncodedTolerableDelay'
	list[11] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'Hand'
	list[12] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'TimerMiscFlags'
	list[13] = LF_MEMBER, public, type = 0x13D3, offset = 3
		member name = 'Index'
	list[14] = LF_MEMBER, public, type = 0x13D4, offset = 3
		member name = 'Inserted'
	list[15] = LF_MEMBER, public, type = 0x13D7, offset = 3
		member name = 'Expired'
	list[16] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'Timer2Type'
	list[17] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'Timer2Flags'
	list[18] = LF_MEMBER, public, type = 0x13CE, offset = 1
		member name = 'Timer2Inserted'
	list[19] = LF_MEMBER, public, type = 0x13D0, offset = 1
		member name = 'Timer2Expiring'
	list[20] = LF_MEMBER, public, type = 0x13D8, offset = 1
		member name = 'Timer2CancelPending'
	list[21] = LF_MEMBER, public, type = 0x13DA, offset = 1
		member name = 'Timer2SetPending'
	list[22] = LF_MEMBER, public, type = 0x13DC, offset = 1
		member name = 'Timer2Running'
	list[23] = LF_MEMBER, public, type = 0x13DD, offset = 1
		member name = 'Timer2Disabled'
	list[24] = LF_MEMBER, public, type = 0x13DF, offset = 1
		member name = 'Timer2ReservedFlags'
	list[25] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'Timer2ComponentId'
	list[26] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'Timer2RelativeId'
	list[27] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'QueueType'
	list[28] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'QueueControlFlags'
	list[29] = LF_MEMBER, public, type = 0x13CE, offset = 1
		member name = 'Abandoned'
	list[30] = LF_MEMBER, public, type = 0x13D0, offset = 1
		member name = 'DisableIncrement'
	list[31] = LF_MEMBER, public, type = 0x13D1, offset = 1
		member name = 'QueueReservedControlFlags'
	list[32] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'QueueSize'
	list[33] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'QueueReserved'
	list[34] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'ThreadType'
	list[35] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'ThreadReserved'
	list[36] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'ThreadControlFlags'
	list[37] = LF_MEMBER, public, type = 0x13CE, offset = 2
		member name = 'CycleProfiling'
	list[38] = LF_MEMBER, public, type = 0x13D0, offset = 2
		member name = 'CounterProfiling'
	list[39] = LF_MEMBER, public, type = 0x13D8, offset = 2
		member name = 'GroupScheduling'
	list[40] = LF_MEMBER, public, type = 0x13DA, offset = 2
		member name = 'AffinitySet'
	list[41] = LF_MEMBER, public, type = 0x13DC, offset = 2
		member name = 'Tagged'
	list[42] = LF_MEMBER, public, type = 0x13DD, offset = 2
		member name = 'EnergyProfiling'
	list[43] = LF_MEMBER, public, type = 0x13D4, offset = 2
		member name = 'SchedulerAssist'
	list[44] = LF_MEMBER, public, type = 0x13E1, offset = 2
		member name = 'ThreadReservedControlFlags'
	list[45] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'DebugActive'
	list[46] = LF_MEMBER, public, type = 0x13CE, offset = 3
		member name = 'ActiveDR7'
	list[47] = LF_MEMBER, public, type = 0x13D0, offset = 3
		member name = 'Instrumented'
	list[48] = LF_MEMBER, public, type = 0x13D8, offset = 3
		member name = 'Minimal'
	list[49] = LF_MEMBER, public, type = 0x13E3, offset = 3
		member name = 'Reserved4'
	list[50] = LF_MEMBER, public, type = 0x13DD, offset = 3
		member name = 'AltSyscall'
	list[51] = LF_MEMBER, public, type = 0x13D4, offset = 3
		member name = 'Emulation'
	list[52] = LF_MEMBER, public, type = 0x13E1, offset = 3
		member name = 'Reserved5'
	list[53] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'MutantType'
	list[54] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'MutantSize'
	list[55] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'DpcActive'
	list[56] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'MutantReserved'
	list[57] = LF_MEMBER, public, type = T_LONG(0012), offset = 4
		member name = 'SignalState'
	list[58] = LF_MEMBER, public, type = 0x12B5, offset = 8
		member name = 'WaitListHead'

0x13e6 : Length = 106, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, FORWARD REF, Size = 0	,class name = _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS, unique name = .?AT_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS@@

0x13e7 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 59,  field list type 0x13e5, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _DISPATCHER_HEADER, unique name = .?AU_DISPATCHER_HEADER@@, UDT(0x000013e7)

0x13e8 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_RCHAR(0070)
	Index type = T_UQUAD(0023)
	length = 20
	Name = 

0x13e9 : Length = 214, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'SectionOffset'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'SectionLength'
	list[2] = LF_MEMBER, public, type = 0x13E2, offset = 8
		member name = 'Revision'
	list[3] = LF_MEMBER, public, type = 0x13E4, offset = 10
		member name = 'ValidBits'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 11
		member name = 'Reserved'
	list[5] = LF_MEMBER, public, type = 0x13E6, offset = 12
		member name = 'Flags'
	list[6] = LF_MEMBER, public, type = 0x10D5, offset = 16
		member name = 'SectionType'
	list[7] = LF_MEMBER, public, type = 0x10D5, offset = 32
		member name = 'FRUId'
	list[8] = LF_MEMBER, public, type = 0x13A1, offset = 48
		member name = 'SectionSeverity'
	list[9] = LF_MEMBER, public, type = 0x13E8, offset = 52
		member name = 'FRUText'

0x13ea : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x12F3

0x13eb : Length = 102, Leaf = 0x1505 LF_STRUCTURE
	# members = 10,  field list type 0x13e9, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 72, class name = _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR, unique name = .?AU_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR@@, UDT(0x000013eb)

0x13ec : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1347
	list[1] = T_64PVOID(0603)
	list[2] = T_64PVOID(0603)
	list[3] = T_64PVOID(0603)

0x13ed : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x13ec

0x13ee : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x10C1
	list[2] = T_UCHAR(0020)

0x13ef : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1135

0x13f0 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x13ee

0x13f1 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x110A
	list[1] = 0x1131
	list[2] = 0x111A
	list[3] = 0x10E4

0x13f2 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13F0

0x13f3 : Length = 190, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'PipeHandle'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'TransferFlags'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'TransferBufferLength'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'TransferBuffer'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'TransferBufferMDL'
	list[6] = LF_MEMBER, public, type = 0x128C, offset = 56
		member name = 'UrbLink'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'

0x13f4 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x13f1

0x13f5 : Length = 102, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR, unique name = .?AU_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR@@, UDT(0x000013eb)

0x13f6 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13F5

0x13f7 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x13f3, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 128, class name = _URB_BULK_OR_INTERRUPT_TRANSFER, unique name = .?AU_URB_BULK_OR_INTERRUPT_TRANSFER@@, UDT(0x000013f7)

0x13f8 : Length = 90, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'DataSectionObject'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'SharedCacheMap'
	list[2] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 16
		member name = 'ImageSectionObject'

0x13f9 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x11BA
	list[2] = T_UQUAD(0023)

0x13fa : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x13f8, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _SECTION_OBJECT_POINTERS, unique name = .?AU_SECTION_OBJECT_POINTERS@@, UDT(0x000013fa)

0x13fb : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x110A
	list[1] = 0x1114
	list[2] = 0x110E
	list[3] = 0x10E4

0x13fc : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x13f9

0x13fd : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x13fb

0x13fe : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13FC

0x13ff : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_WCHAR(0071)
	Index type = T_UQUAD(0023)
	length = 64
	Name = 

0x1400 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x13bf

0x1401 : Length = 202, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_SHORT(0011), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_SHORT(0011), offset = 2
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = T_USHORT(0021), offset = 4
		member name = 'Flags'
	list[3] = LF_MEMBER, public, type = T_USHORT(0021), offset = 6
		member name = 'VolumeLabelLength'
	list[4] = LF_MEMBER, public, type = 0x10E4, offset = 8
		member name = 'DeviceObject'
	list[5] = LF_MEMBER, public, type = 0x10E4, offset = 16
		member name = 'RealDevice'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'SerialNumber'
	list[7] = LF_MEMBER, public, type = T_ULONG(0022), offset = 28
		member name = 'ReferenceCount'
	list[8] = LF_MEMBER, public, type = 0x13FF, offset = 32
		member name = 'VolumeLabel'

0x1402 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1400

0x1403 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 9,  field list type 0x1401, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 96, class name = _VPB, unique name = .?AU_VPB@@, UDT(0x00001403)

0x1404 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x13F5
	Index type = T_UQUAD(0023)
	length = 72
	Name = 

0x1405 : Length = 50, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x137F, offset = 0
		member name = 'Header'
	list[1] = LF_MEMBER, public, type = 0x1404, offset = 128
		member name = 'SectionDescriptor'

0x1406 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13ED

0x1407 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1405, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 200, class name = _WHEA_ERROR_RECORD, unique name = .?AU_WHEA_ERROR_RECORD@@, UDT(0x00001407)

0x1408 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 0, Type = T_ULONG(0022)

0x1409 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 1, Type = T_ULONG(0022)

0x140a : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x10AE
	list[2] = 0x108A

0x140b : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 2, Type = T_ULONG(0022)

0x140c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x140a

0x140d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x140C

0x140e : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 29, starting position = 3, Type = T_ULONG(0022)

0x140f : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFQUEUE__, unique name = .?AUWDFQUEUE__@@, UDT(0x0000140f)

0x1410 : Length = 158, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 0
		member name = 'OwnerThread'
	list[1] = LF_MEMBER, public, type = 0x1408, offset = 8
		member name = 'IoPriorityBoosted'
	list[2] = LF_MEMBER, public, type = 0x1409, offset = 8
		member name = 'OwnerReferenced'
	list[3] = LF_MEMBER, public, type = 0x140B, offset = 8
		member name = 'IoQoSPriorityBoosted'
	list[4] = LF_MEMBER, public, type = 0x140E, offset = 8
		member name = 'OwnerCount'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'TableSize'

0x1411 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 6,  field list type 0x1410, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _OWNER_ENTRY, unique name = .?AU_OWNER_ENTRY@@, UDT(0x00001411)

0x1412 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x1199
	list[2] = 0x10AA

0x1413 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x10C1, Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1412

0x1414 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1413

0x1415 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1170

0x1416 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _BTHPS3PSM_DISABLE_PSM_PATCHING, unique name = .?AU_BTHPS3PSM_DISABLE_PSM_PATCHING@@, UDT(0x000013cb)

0x1417 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_64PVOID(0603)
	Index type = T_UQUAD(0023)
	length = 24
	Name = 

0x1418 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1416

0x1419 : Length = 310, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'AllFlags'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'Size'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'SpareByte1'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'SpareLong0'
	list[5] = LF_MEMBER, public, type = 0x13AC, offset = 8
		member name = 'Thread'
	list[6] = LF_MEMBER, public, type = 0x12B5, offset = 16
		member name = 'ApcListEntry'
	list[7] = LF_MEMBER, public, type = 0x1417, offset = 32
		member name = 'Reserved'
	list[8] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 56
		member name = 'NormalContext'
	list[9] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 64
		member name = 'SystemArgument1'
	list[10] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 72
		member name = 'SystemArgument2'
	list[11] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 80
		member name = 'ApcStateIndex'
	list[12] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 81
		member name = 'ApcMode'
	list[13] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 82
		member name = 'Inserted'

0x141a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1369

0x141b : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 14,  field list type 0x1419, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 88, class name = _KAPC, unique name = .?AU_KAPC@@, UDT(0x0000141b)

0x141c : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1017
	list[1] = 0x13CF
	list[2] = 0x110D
	list[3] = 0x141A

0x141d : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x141c

0x141e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x141D

0x141f : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_FULL_RESOURCE_DESCRIPTOR, unique name = .?AU_CM_FULL_RESOURCE_DESCRIPTOR@@, UDT(0x000010fb)

0x1420 : Length = 214, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'PipeHandle'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'TransferFlags'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'TransferBufferLength'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'TransferBuffer'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'TransferBufferMDL'
	list[6] = LF_MEMBER, public, type = 0x128C, offset = 56
		member name = 'UrbLink'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'
	list[8] = LF_MEMBER, public, type = 0x10F4, offset = 128
		member name = 'SetupPacket'

0x1421 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x141F
	Index type = T_UQUAD(0023)
	length = 36
	Name = 

0x1422 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x11BA
	list[2] = T_LONG(0012)

0x1423 : Length = 34, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Count'
	list[1] = LF_MEMBER, public, type = 0x1421, offset = 4
		member name = 'List'

0x1424 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 9,  field list type 0x1420, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 136, class name = _URB_CONTROL_TRANSFER, unique name = .?AU_URB_CONTROL_TRANSFER@@, UDT(0x00001424)

0x1425 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1422

0x1426 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1423, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 40, class name = _CM_RESOURCE_LIST, unique name = .?AU_CM_RESOURCE_LIST@@, UDT(0x00001426)

0x1427 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1425

0x1428 : Length = 178, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1073, offset = 0
		member name = 'CreationTime'
	list[1] = LF_MEMBER, public, type = 0x1073, offset = 8
		member name = 'LastAccessTime'
	list[2] = LF_MEMBER, public, type = 0x1073, offset = 16
		member name = 'LastWriteTime'
	list[3] = LF_MEMBER, public, type = 0x1073, offset = 24
		member name = 'ChangeTime'
	list[4] = LF_MEMBER, public, type = 0x1073, offset = 32
		member name = 'AllocationSize'
	list[5] = LF_MEMBER, public, type = 0x1073, offset = 40
		member name = 'EndOfFile'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 48
		member name = 'FileAttributes'

0x1429 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 7,  field list type 0x1428, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 56, class name = _FILE_NETWORK_OPEN_INFORMATION, unique name = .?AU_FILE_NETWORK_OPEN_INFORMATION@@, UDT(0x00001429)

0x142a : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 50
	Name = 

0x142b : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13F4

0x142c : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 58
	Name = 

0x142d : Length = 38, Leaf = 0x1201 LF_ARGLIST argument count = 8
	list[0] = 0x110A
	list[1] = 0x1114
	list[2] = T_ULONG(0022)
	list[3] = T_UCHAR(0020)
	list[4] = T_ULONG(0022)
	list[5] = T_64PVOID(0603)
	list[6] = 0x111A
	list[7] = 0x10E4

0x142e : Length = 18, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'

0x142f : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1199
	list[1] = 0x10AA

0x1430 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 8, Arg list type = 0x142d

0x1431 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x142e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _URB_FRAME_LENGTH_CONTROL, unique name = .?AU_URB_FRAME_LENGTH_CONTROL@@, UDT(0x00001431)

0x1432 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x10C1, Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x142f

0x1433 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1430

0x1434 : Length = 74, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'SequenceD1'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'SequenceD2'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'SequenceD3'

0x1435 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1434, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _POWER_SEQUENCE, unique name = .?AU_POWER_SEQUENCE@@, UDT(0x00001435)

0x1436 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x1199, Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x10bc

0x1437 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13FD

0x1438 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10C1
	list[1] = 0x10AA

0x1439 : Length = 130, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1073, offset = 0
		member name = 'CreationTime'
	list[1] = LF_MEMBER, public, type = 0x1073, offset = 8
		member name = 'LastAccessTime'
	list[2] = LF_MEMBER, public, type = 0x1073, offset = 16
		member name = 'LastWriteTime'
	list[3] = LF_MEMBER, public, type = 0x1073, offset = 24
		member name = 'ChangeTime'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'FileAttributes'

0x143a : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1438

0x143b : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x1439, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 40, class name = _FILE_BASIC_INFORMATION, unique name = .?AU_FILE_BASIC_INFORMATION@@, UDT(0x0000143b)

0x143c : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10C1
	list[1] = T_UCHAR(0020)

0x143d : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x143c

0x143e : Length = 110, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'MailslotQuota'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'MaximumMessageSize'
	list[2] = LF_MEMBER, public, type = 0x1073, offset = 8
		member name = 'ReadTimeout'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 16
		member name = 'TimeoutSpecified'

0x143f : Length = 238, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Reserved'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'Reserved0'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'TransferBufferLength'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'TransferBuffer'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'TransferBufferMDL'
	list[6] = LF_MEMBER, public, type = 0x128C, offset = 56
		member name = 'UrbLink'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'
	list[8] = LF_MEMBER, public, type = 0x13A0, offset = 128
		member name = 'Reserved1'
	list[9] = LF_MEMBER, public, type = T_USHORT(0021), offset = 132
		member name = 'Index'
	list[10] = LF_MEMBER, public, type = T_USHORT(0021), offset = 134
		member name = 'Reserved2'

0x1440 : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x143e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _MAILSLOT_CREATE_PARAMETERS, unique name = .?AU_MAILSLOT_CREATE_PARAMETERS@@, UDT(0x00001440)

0x1441 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 11,  field list type 0x143f, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 136, class name = _URB_CONTROL_GET_STATUS_REQUEST, unique name = .?AU_URB_CONTROL_GET_STATUS_REQUEST@@, UDT(0x00001441)

0x1442 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10BA
	list[1] = 0x10AA

0x1443 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1442

0x1444 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 9, starting position = 3, Type = T_ULONG(0022)

0x1445 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 20, starting position = 12, Type = T_ULONG(0022)

0x1446 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x10BA
	list[1] = 0x11A5
	list[2] = 0x110D
	list[3] = 0x11AC

0x1447 : Length = 366, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1367, offset = 0
		member name = 'WaitQueueEntry'
	list[1] = LF_MEMBER, public, type = 0x12B5, offset = 0
		member name = 'DmaWaitEntry'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'NumberOfChannels'
	list[3] = LF_MEMBER, public, type = 0x1408, offset = 20
		member name = 'SyncCallback'
	list[4] = LF_MEMBER, public, type = 0x1409, offset = 20
		member name = 'DmaContext'
	list[5] = LF_MEMBER, public, type = 0x140B, offset = 20
		member name = 'ZeroMapRegisters'
	list[6] = LF_MEMBER, public, type = 0x1444, offset = 20
		member name = 'Reserved'
	list[7] = LF_MEMBER, public, type = 0x1445, offset = 20
		member name = 'NumberOfRemapPages'
	list[8] = LF_MEMBER, public, type = 0x13EA, offset = 24
		member name = 'DeviceRoutine'
	list[9] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 32
		member name = 'DeviceContext'
	list[10] = LF_MEMBER, public, type = T_ULONG(0022), offset = 40
		member name = 'NumberOfMapRegisters'
	list[11] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 48
		member name = 'DeviceObject'
	list[12] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 56
		member name = 'CurrentIrp'
	list[13] = LF_MEMBER, public, type = 0x1347, offset = 64
		member name = 'BufferChainingDpc'

0x1448 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1446

0x1449 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 14,  field list type 0x1447, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 72, class name = _WAIT_CONTEXT_BLOCK, unique name = .?AU_WAIT_CONTEXT_BLOCK@@, UDT(0x00001449)

0x144a : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x11A5
	list[1] = 0x105A

0x144b : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_LIST, unique name = .?AU_IO_RESOURCE_LIST@@, UDT(0x00001106)

0x144c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x144a

0x144d : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x144B
	Index type = T_UQUAD(0023)
	length = 40
	Name = 

0x144e : Length = 154, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'ListSize'
	list[1] = LF_MEMBER, public, type = 0x10F6, offset = 4
		member name = 'InterfaceType'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'BusNumber'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'SlotNumber'
	list[4] = LF_MEMBER, public, type = 0x108F, offset = 16
		member name = 'Reserved'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 28
		member name = 'AlternativeLists'
	list[6] = LF_MEMBER, public, type = 0x144D, offset = 32
		member name = 'List'

0x144f : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 7,  field list type 0x144e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 72, class name = _IO_RESOURCE_REQUIREMENTS_LIST, unique name = .?AU_IO_RESOURCE_REQUIREMENTS_LIST@@, UDT(0x0000144f)

0x1450 : Length = 98, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_USB_REQUEST_COMPLETION_PARAMS, unique name = .?AU_WDF_USB_REQUEST_COMPLETION_PARAMS@@

0x1451 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1017
	list[1] = 0x11A9

0x1452 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1318

0x1453 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1450

0x1454 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x10BA, Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1451

0x1455 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x110A
	list[1] = 0x1114
	list[2] = 0x1452
	list[3] = 0x10E4

0x1456 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x10ca, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = WDFIOTARGET__, unique name = .?AUWDFIOTARGET__@@, UDT(0x00001456)

0x1457 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1454

0x1458 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1455

0x1459 : Length = 10, Leaf = 0x1002 LF_POINTER
	const Pointer (__ptr64), Size: 8
	Element type : 0x10B8

0x145a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1458

0x145b : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x11C0, Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1351

0x145c : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x145B

0x145d : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x10A6
	list[1] = 0x10AA
	list[2] = T_ULONG(0022)

0x145e : Length = 290, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Reserved'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'Reserved0'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'TransferBufferLength'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'TransferBuffer'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'TransferBufferMDL'
	list[6] = LF_MEMBER, public, type = 0x128C, offset = 56
		member name = 'UrbLink'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'
	list[8] = LF_MEMBER, public, type = T_USHORT(0021), offset = 128
		member name = 'Reserved1'
	list[9] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 130
		member name = 'Index'
	list[10] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 131
		member name = 'DescriptorType'
	list[11] = LF_MEMBER, public, type = T_USHORT(0021), offset = 132
		member name = 'LanguageId'
	list[12] = LF_MEMBER, public, type = T_USHORT(0021), offset = 134
		member name = 'Reserved2'

0x145f : Length = 10, Leaf = 0x1001 LF_MODIFIER
	volatile, modifies type T_RCHAR(0070)

0x1460 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x145d

0x1461 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 13,  field list type 0x145e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 136, class name = _URB_CONTROL_DESCRIPTOR_REQUEST, unique name = .?AU_URB_CONTROL_DESCRIPTOR_REQUEST@@, UDT(0x00001461)

0x1462 : Length = 494, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x12B5, offset = 0
		member name = 'SystemResourcesList'
	list[1] = LF_MEMBER, public, type = 0x1276, offset = 16
		member name = 'OwnerTable'
	list[2] = LF_MEMBER, public, type = T_SHORT(0011), offset = 24
		member name = 'ActiveCount'
	list[3] = LF_MEMBER, public, type = T_USHORT(0021), offset = 26
		member name = 'Flag'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 26
		member name = 'ReservedLowFlags'
	list[5] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 27
		member name = 'WaiterPriority'
	list[6] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 32
		member name = 'SharedWaiters'
	list[7] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'ExclusiveWaiters'
	list[8] = LF_MEMBER, public, type = 0x1275, offset = 48
		member name = 'OwnerEntry'
	list[9] = LF_MEMBER, public, type = T_ULONG(0022), offset = 64
		member name = 'ActiveEntries'
	list[10] = LF_MEMBER, public, type = T_ULONG(0022), offset = 68
		member name = 'ContentionCount'
	list[11] = LF_MEMBER, public, type = T_ULONG(0022), offset = 72
		member name = 'NumberOfSharedWaiters'
	list[12] = LF_MEMBER, public, type = T_ULONG(0022), offset = 76
		member name = 'NumberOfExclusiveWaiters'
	list[13] = LF_MEMBER, public, type = 0x145F, offset = 80
		member name = 'MiscFlags'
	list[14] = LF_MEMBER, public, type = 0x1240, offset = 81
		member name = 'Reserved1'
	list[15] = LF_MEMBER, public, type = T_ULONG(0022), offset = 84
		member name = 'ResourceTimeoutCount'
	list[16] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 88
		member name = 'Address'
	list[17] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 88
		member name = 'CreatorBackTraceIndex'
	list[18] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 96
		member name = 'SpinLock'

0x1463 : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 19,  field list type 0x1462, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 104, class name = _ERESOURCE, unique name = .?AU_ERESOURCE@@, UDT(0x00001463)

0x1464 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x136b

0x1465 : Length = 98, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'PipeHandle'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'StreamID'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'MaximumTransferSize'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'PipeFlags'

0x1466 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13B2

0x1467 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1465, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _USBD_STREAM_INFORMATION, unique name = .?AU_USBD_STREAM_INFORMATION@@, UDT(0x00001467)

0x1468 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = T_UQUAD(0023)
	list[1] = T_USHORT(0021)
	list[2] = 0x1126
	list[3] = T_RCHAR(0070)

0x1469 : Length = 10, Leaf = 0x1001 LF_MODIFIER
	volatile, modifies type T_USHORT(0021)

0x146a : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1468

0x146b : Length = 274, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'TargetInfoAsUlong'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'Type'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'Importance'
	list[3] = LF_MEMBER, public, type = 0x1469, offset = 2
		member name = 'Number'
	list[4] = LF_MEMBER, public, type = 0x133E, offset = 8
		member name = 'DpcListEntry'
	list[5] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 16
		member name = 'ProcessorHistory'
	list[6] = LF_MEMBER, public, type = 0x1406, offset = 24
		member name = 'DeferredRoutine'
	list[7] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 32
		member name = 'DeferredContext'
	list[8] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'SystemArgument1'
	list[9] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 48
		member name = 'SystemArgument2'
	list[10] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 56
		member name = 'DpcData'

0x146c : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 11,  field list type 0x146b, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 64, class name = _KDPC, unique name = .?AU_KDPC@@, UDT(0x0000146c)

0x146d : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 0, Arg list type = 0x100e

0x146e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1393

0x146f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x146D

0x1470 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DEVICE_OBJECT_POWER_EXTENSION, unique name = .?AU_DEVICE_OBJECT_POWER_EXTENSION@@

0x1471 : Length = 146, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'PipeHandle'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'NumberOfStreams'
	list[3] = LF_MEMBER, public, type = T_USHORT(0021), offset = 36
		member name = 'StreamInfoVersion'
	list[4] = LF_MEMBER, public, type = T_USHORT(0021), offset = 38
		member name = 'StreamInfoSize'
	list[5] = LF_MEMBER, public, type = 0x1385, offset = 40
		member name = 'Streams'

0x1472 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1470

0x1473 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x11BA
	list[1] = T_UQUAD(0023)
	list[2] = 0x13B6
	list[3] = T_64PUQUAD(0623)

0x1474 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 6,  field list type 0x1471, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 48, class name = _URB_OPEN_STATIC_STREAMS, unique name = .?AU_URB_OPEN_STATIC_STREAMS@@, UDT(0x00001474)

0x1475 : Length = 374, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_SHORT(0011), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = 0x10E4, offset = 8
		member name = 'DeviceObject'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'PowerFlags'
	list[4] = LF_MEMBER, public, type = 0x1472, offset = 24
		member name = 'Dope'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'ExtensionFlags'
	list[6] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'DeviceNode'
	list[7] = LF_MEMBER, public, type = 0x10E4, offset = 48
		member name = 'AttachedTo'
	list[8] = LF_MEMBER, public, type = T_LONG(0012), offset = 56
		member name = 'StartIoCount'
	list[9] = LF_MEMBER, public, type = T_LONG(0012), offset = 60
		member name = 'StartIoKey'
	list[10] = LF_MEMBER, public, type = T_ULONG(0022), offset = 64
		member name = 'StartIoFlags'
	list[11] = LF_MEMBER, public, type = 0x1210, offset = 72
		member name = 'Vpb'
	list[12] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 80
		member name = 'DependencyNode'
	list[13] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 88
		member name = 'InterruptContext'
	list[14] = LF_MEMBER, public, type = T_LONG(0012), offset = 96
		member name = 'InterruptCount'
	list[15] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 104
		member name = 'VerifierContext'

0x1476 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1473

0x1477 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 16,  field list type 0x1475, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 112, class name = _DEVOBJ_EXTENSION, unique name = .?AU_DEVOBJ_EXTENSION@@, UDT(0x00001477)

0x1478 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1138

0x1479 : Length = 58, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'Port'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'Key'
	list[2] = LF_MEMBER, public, type = T_QUAD(0013), offset = 16
		member name = 'UsageCount'

0x147a : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x13CF
	list[1] = 0x110D
	list[2] = 0x141A

0x147b : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1479, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_COMPLETION_CONTEXT, unique name = .?AU_IO_COMPLETION_CONTEXT@@, UDT(0x0000147b)

0x147c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x147a

0x147d : Length = 70, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'ConfigurationHandle'
	list[2] = LF_MEMBER, public, type = 0x1387, offset = 32
		member name = 'Interface'

0x147e : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x13CF
	list[1] = 0x1371

0x147f : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x147d, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 80, class name = _URB_SELECT_INTERFACE, unique name = .?AU_URB_SELECT_INTERFACE@@, UDT(0x0000147f)

0x1480 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x147e

0x1481 : Length = 874, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'SizeOfFastIoDispatch'
	list[1] = LF_MEMBER, public, type = 0x139A, offset = 8
		member name = 'FastIoCheckIfPossible'
	list[2] = LF_MEMBER, public, type = 0x1433, offset = 16
		member name = 'FastIoRead'
	list[3] = LF_MEMBER, public, type = 0x1433, offset = 24
		member name = 'FastIoWrite'
	list[4] = LF_MEMBER, public, type = 0x12E1, offset = 32
		member name = 'FastIoQueryBasicInfo'
	list[5] = LF_MEMBER, public, type = 0x1397, offset = 40
		member name = 'FastIoQueryStandardInfo'
	list[6] = LF_MEMBER, public, type = 0x13EF, offset = 48
		member name = 'FastIoLock'
	list[7] = LF_MEMBER, public, type = 0x1415, offset = 56
		member name = 'FastIoUnlockSingle'
	list[8] = LF_MEMBER, public, type = 0x142B, offset = 64
		member name = 'FastIoUnlockAll'
	list[9] = LF_MEMBER, public, type = 0x1165, offset = 72
		member name = 'FastIoUnlockAllByKey'
	list[10] = LF_MEMBER, public, type = 0x1396, offset = 80
		member name = 'FastIoDeviceControl'
	list[11] = LF_MEMBER, public, type = 0x13A8, offset = 88
		member name = 'AcquireFileForNtCreateSection'
	list[12] = LF_MEMBER, public, type = 0x13A8, offset = 96
		member name = 'ReleaseFileForNtCreateSection'
	list[13] = LF_MEMBER, public, type = 0x115B, offset = 104
		member name = 'FastIoDetachDevice'
	list[14] = LF_MEMBER, public, type = 0x146E, offset = 112
		member name = 'FastIoQueryNetworkOpenInfo'
	list[15] = LF_MEMBER, public, type = 0x145A, offset = 120
		member name = 'AcquireForModWrite'
	list[16] = LF_MEMBER, public, type = 0x12C9, offset = 128
		member name = 'MdlRead'
	list[17] = LF_MEMBER, public, type = 0x1172, offset = 136
		member name = 'MdlReadComplete'
	list[18] = LF_MEMBER, public, type = 0x12C9, offset = 144
		member name = 'PrepareMdlWrite'
	list[19] = LF_MEMBER, public, type = 0x1437, offset = 152
		member name = 'MdlWriteComplete'
	list[20] = LF_MEMBER, public, type = 0x1297, offset = 160
		member name = 'FastIoReadCompressed'
	list[21] = LF_MEMBER, public, type = 0x1297, offset = 168
		member name = 'FastIoWriteCompressed'
	list[22] = LF_MEMBER, public, type = 0x1172, offset = 176
		member name = 'MdlReadCompleteCompressed'
	list[23] = LF_MEMBER, public, type = 0x1437, offset = 184
		member name = 'MdlWriteCompleteCompressed'
	list[24] = LF_MEMBER, public, type = 0x1466, offset = 192
		member name = 'FastIoQueryOpen'
	list[25] = LF_MEMBER, public, type = 0x13B4, offset = 200
		member name = 'ReleaseForModWrite'
	list[26] = LF_MEMBER, public, type = 0x1129, offset = 208
		member name = 'AcquireForCcFlush'
	list[27] = LF_MEMBER, public, type = 0x1129, offset = 216
		member name = 'ReleaseForCcFlush'

0x1482 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 28,  field list type 0x1481, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 224, class name = _FAST_IO_DISPATCH, unique name = .?AU_FAST_IO_DISPATCH@@, UDT(0x00001482)

0x1483 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x1130, Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12c8

0x1484 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1483

0x1485 : Length = 206, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'NamedPipeType'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'ReadMode'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'CompletionMode'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'MaximumInstances'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'InboundQuota'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 20
		member name = 'OutboundQuota'
	list[6] = LF_MEMBER, public, type = 0x1073, offset = 24
		member name = 'DefaultTimeout'
	list[7] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 32
		member name = 'TimeoutSpecified'

0x1486 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10AE
	list[1] = 0x108A

0x1487 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x1485, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 40, class name = _NAMED_PIPE_CREATE_PARAMETERS, unique name = .?AU_NAMED_PIPE_CREATE_PARAMETERS@@, UDT(0x00001487)

0x1488 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1486

0x1489 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_DRIVER_CREATE_CONTEXT, unique name = .?AU_IO_DRIVER_CREATE_CONTEXT@@

0x148a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1489

0x148b : Length = 46, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_TIMER, unique name = .?AU_IO_TIMER@@

0x148c : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 3, Type = T_ULONG(0022)

0x148d : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x11BA
	list[1] = T_UQUAD(0023)

0x148e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x148B

0x148f : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 4, Type = T_ULONG(0022)

0x1490 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x148d

0x1491 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _RTL_SPLAY_LINKS, unique name = .?AU_RTL_SPLAY_LINKS@@, UDT(0x00001499)

0x1492 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 5, Type = T_ULONG(0022)

0x1493 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1491

0x1494 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 6, Type = T_ULONG(0022)

0x1495 : Length = 66, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1493, offset = 0
		member name = 'Parent'
	list[1] = LF_MEMBER, public, type = 0x1493, offset = 8
		member name = 'LeftChild'
	list[2] = LF_MEMBER, public, type = 0x1493, offset = 16
		member name = 'RightChild'

0x1496 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x11BA
	list[1] = T_LONG(0012)

0x1497 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 7, Type = T_ULONG(0022)

0x1498 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1496

0x1499 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1495, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _RTL_SPLAY_LINKS, unique name = .?AU_RTL_SPLAY_LINKS@@, UDT(0x00001499)

0x149a : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 8, Type = T_ULONG(0022)

0x149b : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 9, Type = T_ULONG(0022)

0x149c : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 10, Type = T_ULONG(0022)

0x149d : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = T_UQUAD(0023)
	list[1] = T_USHORT(0021)
	list[2] = 0x1126
	list[3] = T_UINT4(0075)

0x149e : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 11, Type = T_ULONG(0022)

0x149f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1025

0x14a0 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x149d

0x14a1 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 12, Type = T_ULONG(0022)

0x14a2 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x110D
	list[2] = 0x149F

0x14a3 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 13, Type = T_ULONG(0022)

0x14a4 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x14a2

0x14a5 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 14, Type = T_ULONG(0022)

0x14a6 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = T_UQUAD(0023)
	list[1] = T_USHORT(0021)
	list[2] = 0x1126
	list[3] = 0x10AA
	list[4] = T_INT4(0074)

0x14a7 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14A4

0x14a8 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 15, Type = T_ULONG(0022)

0x14a9 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x14a6

0x14aa : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1022

0x14ab : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 16, Type = T_ULONG(0022)

0x14ac : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1017
	list[1] = 0x110D
	list[2] = 0x14AA

0x14ad : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x14ac

0x14ae : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 17, Type = T_ULONG(0022)

0x14af : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14AD

0x14b0 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 18, Type = T_ULONG(0022)

0x14b1 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 1, starting position = 19, Type = T_ULONG(0022)

0x14b2 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10C4

0x14b3 : Length = 10, Leaf = 0x1205 LF_BITFIELD
	bits = 9, starting position = 23, Type = T_ULONG(0022)

0x14b4 : Length = 166, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x110E, offset = 0
		member name = 'Next'
	list[1] = LF_MEMBER, public, type = T_SHORT(0011), offset = 8
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = T_SHORT(0011), offset = 10
		member name = 'MdlFlags'
	list[3] = LF_MEMBER, public, type = 0x1131, offset = 16
		member name = 'Process'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'MappedSystemVa'
	list[5] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 32
		member name = 'StartVa'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 40
		member name = 'ByteCount'
	list[7] = LF_MEMBER, public, type = T_ULONG(0022), offset = 44
		member name = 'ByteOffset'

0x14b5 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x1044
	Index type = T_UQUAD(0023)
	length = 28
	Name = 

0x14b6 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x14b4, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 48, class name = _MDL, unique name = .?AU_MDL@@, UDT(0x000014b6)

0x14b7 : Length = 802, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Version'
	list[2] = LF_MEMBER, public, type = 0x1408, offset = 4
		member name = 'DeviceD1'
	list[3] = LF_MEMBER, public, type = 0x1409, offset = 4
		member name = 'DeviceD2'
	list[4] = LF_MEMBER, public, type = 0x140B, offset = 4
		member name = 'LockSupported'
	list[5] = LF_MEMBER, public, type = 0x148C, offset = 4
		member name = 'EjectSupported'
	list[6] = LF_MEMBER, public, type = 0x148F, offset = 4
		member name = 'Removable'
	list[7] = LF_MEMBER, public, type = 0x1492, offset = 4
		member name = 'DockDevice'
	list[8] = LF_MEMBER, public, type = 0x1494, offset = 4
		member name = 'UniqueID'
	list[9] = LF_MEMBER, public, type = 0x1497, offset = 4
		member name = 'SilentInstall'
	list[10] = LF_MEMBER, public, type = 0x149A, offset = 4
		member name = 'RawDeviceOK'
	list[11] = LF_MEMBER, public, type = 0x149B, offset = 4
		member name = 'SurpriseRemovalOK'
	list[12] = LF_MEMBER, public, type = 0x149C, offset = 4
		member name = 'WakeFromD0'
	list[13] = LF_MEMBER, public, type = 0x149E, offset = 4
		member name = 'WakeFromD1'
	list[14] = LF_MEMBER, public, type = 0x14A1, offset = 4
		member name = 'WakeFromD2'
	list[15] = LF_MEMBER, public, type = 0x14A3, offset = 4
		member name = 'WakeFromD3'
	list[16] = LF_MEMBER, public, type = 0x14A5, offset = 4
		member name = 'HardwareDisabled'
	list[17] = LF_MEMBER, public, type = 0x14A8, offset = 4
		member name = 'NonDynamic'
	list[18] = LF_MEMBER, public, type = 0x14AB, offset = 4
		member name = 'WarmEjectSupported'
	list[19] = LF_MEMBER, public, type = 0x14AE, offset = 4
		member name = 'NoDisplayInUI'
	list[20] = LF_MEMBER, public, type = 0x14B0, offset = 4
		member name = 'Reserved1'
	list[21] = LF_MEMBER, public, type = 0x14B1, offset = 4
		member name = 'WakeFromInterrupt'
	list[22] = LF_MEMBER, public, type = 0x1328, offset = 4
		member name = 'SecureDevice'
	list[23] = LF_MEMBER, public, type = 0x1329, offset = 4
		member name = 'ChildOfVgaEnabledBridge'
	list[24] = LF_MEMBER, public, type = 0x132A, offset = 4
		member name = 'DecodeIoOnBoot'
	list[25] = LF_MEMBER, public, type = 0x14B3, offset = 4
		member name = 'Reserved'
	list[26] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Address'
	list[27] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'UINumber'
	list[28] = LF_MEMBER, public, type = 0x14B5, offset = 16
		member name = 'DeviceState'
	list[29] = LF_MEMBER, public, type = 0x1042, offset = 44
		member name = 'SystemWake'
	list[30] = LF_MEMBER, public, type = 0x1044, offset = 48
		member name = 'DeviceWake'
	list[31] = LF_MEMBER, public, type = T_ULONG(0022), offset = 52
		member name = 'D1Latency'
	list[32] = LF_MEMBER, public, type = T_ULONG(0022), offset = 56
		member name = 'D2Latency'
	list[33] = LF_MEMBER, public, type = T_ULONG(0022), offset = 60
		member name = 'D3Latency'

0x14b8 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WAIT_CONTEXT_BLOCK, unique name = .?AU_WAIT_CONTEXT_BLOCK@@, UDT(0x00001449)

0x14b9 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 34,  field list type 0x14b7, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 64, class name = _DEVICE_CAPABILITIES, unique name = .?AU_DEVICE_CAPABILITIES@@, UDT(0x000014b9)

0x14ba : Length = 38, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x12B5, offset = 0
		member name = 'ListEntry'
	list[1] = LF_MEMBER, public, type = 0x14B8, offset = 0
		member name = 'Wcb'

0x14bb : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 2,  field list type 0x14ba, SEALED, Size = 72	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x14bc : Length = 106, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = 0x112E, offset = 24
		member name = 'ConfigurationDescriptor'
	list[2] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 32
		member name = 'ConfigurationHandle'
	list[3] = LF_MEMBER, public, type = 0x1387, offset = 40
		member name = 'Interface'

0x14bd : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _KDEVICE_QUEUE, unique name = .?AU_KDEVICE_QUEUE@@, UDT(0x000012c0)

0x14be : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x14bc, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 88, class name = _URB_SELECT_CONFIGURATION, unique name = .?AU_URB_SELECT_CONFIGURATION@@, UDT(0x000014be)

0x14bf : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DEVOBJ_EXTENSION, unique name = .?AU_DEVOBJ_EXTENSION@@, UDT(0x00001477)

0x14c0 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14BF

0x14c1 : Length = 578, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_SHORT(0011), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = T_LONG(0012), offset = 4
		member name = 'ReferenceCount'
	list[3] = LF_MEMBER, public, type = 0x10E1, offset = 8
		member name = 'DriverObject'
	list[4] = LF_MEMBER, public, type = 0x10E4, offset = 16
		member name = 'NextDevice'
	list[5] = LF_MEMBER, public, type = 0x10E4, offset = 24
		member name = 'AttachedDevice'
	list[6] = LF_MEMBER, public, type = 0x1130, offset = 32
		member name = 'CurrentIrp'
	list[7] = LF_MEMBER, public, type = 0x148E, offset = 40
		member name = 'Timer'
	list[8] = LF_MEMBER, public, type = T_ULONG(0022), offset = 48
		member name = 'Flags'
	list[9] = LF_MEMBER, public, type = T_ULONG(0022), offset = 52
		member name = 'Characteristics'
	list[10] = LF_MEMBER, public, type = 0x1210, offset = 56
		member name = 'Vpb'
	list[11] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 64
		member name = 'DeviceExtension'
	list[12] = LF_MEMBER, public, type = T_ULONG(0022), offset = 72
		member name = 'DeviceType'
	list[13] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 76
		member name = 'StackSize'
	list[14] = LF_MEMBER, public, type = 0x14BB, offset = 80
		member name = 'Queue'
	list[15] = LF_MEMBER, public, type = T_ULONG(0022), offset = 152
		member name = 'AlignmentRequirement'
	list[16] = LF_MEMBER, public, type = 0x14BD, offset = 160
		member name = 'DeviceQueue'
	list[17] = LF_MEMBER, public, type = 0x1346, offset = 200
		member name = 'Dpc'
	list[18] = LF_MEMBER, public, type = T_ULONG(0022), offset = 264
		member name = 'ActiveThreadCount'
	list[19] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 272
		member name = 'SecurityDescriptor'
	list[20] = LF_MEMBER, public, type = 0x12CC, offset = 280
		member name = 'DeviceLock'
	list[21] = LF_MEMBER, public, type = T_USHORT(0021), offset = 304
		member name = 'SectorSize'
	list[22] = LF_MEMBER, public, type = T_USHORT(0021), offset = 306
		member name = 'Spare1'
	list[23] = LF_MEMBER, public, type = 0x14C0, offset = 312
		member name = 'DeviceObjectExtension'
	list[24] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 320
		member name = 'Reserved'

0x14c2 : Length = 58, Leaf = 0x1507 LF_ENUM
	# members = 0,  type = T_NOTYPE(0000) field list type 0x0000
FORWARD REF, 	enum name = _WDF_REQUEST_TYPE, UDT(0x0000104c)

0x14c3 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 25,  field list type 0x14c1, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 336, class name = _DEVICE_OBJECT, unique name = .?AU_DEVICE_OBJECT@@, UDT(0x0000172b)

0x14c4 : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1111, offset = 0
		member name = 'Buffer'
	list[1] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'Length'
	list[2] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 16
		member name = 'Offset'

0x14c5 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x14c4, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x14c6 : Length = 226, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UINT8(0077), offset = 0
		member name = 'P1Home'
	list[1] = LF_MEMBER, public, type = T_UINT8(0077), offset = 8
		member name = 'P2Home'
	list[2] = LF_MEMBER, public, type = T_UINT8(0077), offset = 16
		member name = 'P3Home'
	list[3] = LF_MEMBER, public, type = T_UINT8(0077), offset = 24
		member name = 'P4Home'
	list[4] = LF_MEMBER, public, type = T_UINT16(0079), offset = 32
		member name = 'SavedXmm0'
	list[5] = LF_MEMBER, public, type = T_UINT8(0077), offset = 48
		member name = 'SavedRax'
	list[6] = LF_MEMBER, public, type = T_UINT8(0077), offset = 56
		member name = 'SavedRcx'
	list[7] = LF_MEMBER, public, type = T_UINT8(0077), offset = 64
		member name = 'SavedRdx'
	list[8] = LF_MEMBER, public, type = T_UINT8(0077), offset = 72
		member name = 'SavedR8'
	list[9] = LF_MEMBER, public, type = T_UINT8(0077), offset = 80
		member name = 'SavedR9'
	list[10] = LF_MEMBER, public, type = T_UINT8(0077), offset = 88
		member name = 'ReturnAddress'

0x14c7 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x1311

0x14c8 : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1111, offset = 0
		member name = 'Buffer'
	list[1] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'Offset'

0x14c9 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x14c7

0x14ca : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x14c8, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x14cb : Length = 30, Leaf = 0x1505 LF_STRUCTURE
	# members = 11,  field list type 0x14c6, PACKED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 96, class name = QFrame, UDT(0x000014cb)

0x14cc : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14C9

0x14cd : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1111, offset = 0
		member name = 'Buffer'
	list[1] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'Offset'
	list[2] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 16
		member name = 'Length'

0x14ce : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1311
	list[1] = T_ULONG(0022)
	list[2] = 0x1114
	list[3] = T_UCHAR(0020)

0x14cf : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x14cd, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x14d0 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x14ce

0x14d1 : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'IoControlCode'
	list[1] = LF_MEMBER, public, type = 0x14CA, offset = 8
		member name = 'Input'
	list[2] = LF_MEMBER, public, type = 0x14CF, offset = 24
		member name = 'Output'

0x14d2 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14D0

0x14d3 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x14d1, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 48, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x14d4 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x1311
	list[1] = T_ULONG(0022)
	list[2] = 0x1073
	list[3] = T_64PVOID(0603)
	list[4] = T_UCHAR(0020)

0x14d5 : Length = 34, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'Ptr'
	list[1] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 0
		member name = 'Value'

0x14d6 : Length = 186, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'JOB_OBJECT_NET_RATE_CONTROL_ENABLE'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH'
	list[2] = LF_ENUMERATE, public, value = 4, name = 'JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG'
	list[3] = LF_ENUMERATE, public, value = 7, name = 'JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS'

0x14d7 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x14d4

0x14d8 : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 2,  field list type 0x14d5, SEALED, Size = 8	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x14d9 : Length = 90, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x14d6
	enum name = JOB_OBJECT_NET_RATE_CONTROL_FLAGS, UDT(0x000014d9)

0x14da : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14D7

0x14db : Length = 82, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x14D8, offset = 0
		member name = 'Argument1'
	list[1] = LF_MEMBER, public, type = 0x14D8, offset = 8
		member name = 'Argument2'
	list[2] = LF_MEMBER, public, type = 0x14D8, offset = 16
		member name = 'Argument3'
	list[3] = LF_MEMBER, public, type = 0x14D8, offset = 24
		member name = 'Argument4'

0x14dc : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x1311
	list[1] = 0x10E4
	list[2] = T_ULONG(0022)
	list[3] = 0x13EA
	list[4] = T_64PVOID(0603)

0x14dd : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x14db, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x14de : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x14dc

0x14df : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14DE

0x14e0 : Length = 262, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'JOB_OBJECT_IO_RATE_CONTROL_ENABLE'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME'
	list[2] = LF_ENUMERATE, public, value = 4, name = 'JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL'
	list[3] = LF_ENUMERATE, public, value = 8, name = 'JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP'
	list[4] = LF_ENUMERATE, public, value = 15, name = 'JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS'

0x14e1 : Length = 26, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1453, offset = 0
		member name = 'Completion'

0x14e2 : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x1311
	list[1] = 0x110E
	list[2] = T_64PVOID(0603)
	list[3] = T_64PVOID(0603)
	list[4] = T_ULONG(0022)
	list[5] = T_UCHAR(0020)

0x14e3 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x14e1, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x14e4 : Length = 90, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x14e0
	enum name = JOB_OBJECT_IO_RATE_CONTROL_FLAGS, UDT(0x000014e4)

0x14e5 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x14e2

0x14e6 : Length = 86, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x14C5, offset = 0
		member name = 'Write'
	list[1] = LF_MEMBER, public, type = 0x14C5, offset = 0
		member name = 'Read'
	list[2] = LF_MEMBER, public, type = 0x14D3, offset = 0
		member name = 'Ioctl'
	list[3] = LF_MEMBER, public, type = 0x14DD, offset = 0
		member name = 'Others'
	list[4] = LF_MEMBER, public, type = 0x14E3, offset = 0
		member name = 'Usb'

0x14e7 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14E5

0x14e8 : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 5,  field list type 0x14e6, SEALED, Size = 48	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x14e9 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1311
	list[1] = T_64PVOID(0603)
	list[2] = T_ULONG(0022)

0x14ea : Length = 78, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = 0x14C2, offset = 4
		member name = 'Type'
	list[2] = LF_MEMBER, public, type = 0x1118, offset = 8
		member name = 'IoStatus'
	list[3] = LF_MEMBER, public, type = 0x14E8, offset = 24
		member name = 'Parameters'

0x14eb : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x14e9

0x14ec : Length = 810, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'COMIMAGE_FLAGS_ILONLY'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'COMIMAGE_FLAGS_32BITREQUIRED'
	list[2] = LF_ENUMERATE, public, value = 4, name = 'COMIMAGE_FLAGS_IL_LIBRARY'
	list[3] = LF_ENUMERATE, public, value = 8, name = 'COMIMAGE_FLAGS_STRONGNAMESIGNED'
	list[4] = LF_ENUMERATE, public, value = 16, name = 'COMIMAGE_FLAGS_NATIVE_ENTRYPOINT'
	list[5] = LF_ENUMERATE, public, value = (LF_ULONG) 65536, name = 'COMIMAGE_FLAGS_TRACKDEBUGDATA'
	list[6] = LF_ENUMERATE, public, value = (LF_ULONG) 131072, name = 'COMIMAGE_FLAGS_32BITPREFERRED'
	list[7] = LF_ENUMERATE, public, value = 2, name = 'COR_VERSION_MAJOR_V2'
	list[8] = LF_ENUMERATE, public, value = 2, name = 'COR_VERSION_MAJOR'
	list[9] = LF_ENUMERATE, public, value = 5, name = 'COR_VERSION_MINOR'
	list[10] = LF_ENUMERATE, public, value = 8, name = 'COR_DELETED_NAME_LENGTH'
	list[11] = LF_ENUMERATE, public, value = 8, name = 'COR_VTABLEGAP_NAME_LENGTH'
	list[12] = LF_ENUMERATE, public, value = 1, name = 'NATIVE_TYPE_MAX_CB'
	list[13] = LF_ENUMERATE, public, value = 255, name = 'COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE'
	list[14] = LF_ENUMERATE, public, value = 1, name = 'IMAGE_COR_MIH_METHODRVA'
	list[15] = LF_ENUMERATE, public, value = 2, name = 'IMAGE_COR_MIH_EHRVA'
	list[16] = LF_ENUMERATE, public, value = 8, name = 'IMAGE_COR_MIH_BASICBLOCK'
	list[17] = LF_ENUMERATE, public, value = 1, name = 'COR_VTABLE_32BIT'
	list[18] = LF_ENUMERATE, public, value = 2, name = 'COR_VTABLE_64BIT'
	list[19] = LF_ENUMERATE, public, value = 4, name = 'COR_VTABLE_FROM_UNMANAGED'
	list[20] = LF_ENUMERATE, public, value = 8, name = 'COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN'
	list[21] = LF_ENUMERATE, public, value = 16, name = 'COR_VTABLE_CALL_MOST_DERIVED'
	list[22] = LF_ENUMERATE, public, value = 32, name = 'IMAGE_COR_EATJ_THUNK_SIZE'
	list[23] = LF_ENUMERATE, public, value = 1024, name = 'MAX_CLASS_NAME'
	list[24] = LF_ENUMERATE, public, value = 1024, name = 'MAX_PACKAGE_NAME'

0x14ed : Length = 82, Leaf = 0x1507 LF_ENUM
	# members = 25,  type = T_INT4(0074) field list type 0x14ec
	enum name = ReplacesCorHdrNumericDefines, UDT(0x000014ed)

0x14ee : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14EB

0x14ef : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x14ea, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 72, class name = _WDF_REQUEST_COMPLETION_PARAMS, unique name = .?AU_WDF_REQUEST_COMPLETION_PARAMS@@, UDT(0x000014ef)

0x14f0 : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x1311
	list[1] = 0x110E
	list[2] = T_64PVOID(0603)
	list[3] = T_64PVOID(0603)
	list[4] = T_64PULONG(0622)
	list[5] = T_UCHAR(0020)

0x14f1 : Length = 174, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'TP_CALLBACK_PRIORITY_HIGH'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'TP_CALLBACK_PRIORITY_NORMAL'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'TP_CALLBACK_PRIORITY_LOW'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'TP_CALLBACK_PRIORITY_INVALID'
	list[4] = LF_ENUMERATE, public, value = 3, name = 'TP_CALLBACK_PRIORITY_COUNT'

0x14f2 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x1073, Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x14f0

0x14f3 : Length = 238, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Reserved'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'Reserved2'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'Reserved3'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'Reserved4'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'Reserved5'
	list[6] = LF_MEMBER, public, type = 0x128C, offset = 56
		member name = 'UrbLink'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'
	list[8] = LF_MEMBER, public, type = T_USHORT(0021), offset = 128
		member name = 'Reserved0'
	list[9] = LF_MEMBER, public, type = T_USHORT(0021), offset = 130
		member name = 'FeatureSelector'
	list[10] = LF_MEMBER, public, type = T_USHORT(0021), offset = 132
		member name = 'Index'
	list[11] = LF_MEMBER, public, type = T_USHORT(0021), offset = 134
		member name = 'Reserved1'

0x14f4 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14F2

0x14f5 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x14f1
	enum name = _TP_CALLBACK_PRIORITY, UDT(0x000014f5)

0x14f6 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 12,  field list type 0x14f3, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 136, class name = _URB_CONTROL_FEATURE_REQUEST, unique name = .?AU_URB_CONTROL_FEATURE_REQUEST@@, UDT(0x000014f6)

0x14f7 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x14c7

0x14f8 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14F7

0x14f9 : Length = 38, Leaf = 0x1201 LF_ARGLIST argument count = 8
	list[0] = 0x1311
	list[1] = 0x10E4
	list[2] = 0x110E
	list[3] = T_64PVOID(0603)
	list[4] = T_ULONG(0022)
	list[5] = 0x113B
	list[6] = T_64PVOID(0603)
	list[7] = T_UCHAR(0020)

0x14fa : Length = 142, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'PipeHandle'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'MaximumSendPathDelayInMilliSeconds'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'MaximumCompletionPathDelayInMilliSeconds'

0x14fb : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 8, Arg list type = 0x14f9

0x14fc : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14FB

0x14fd : Length = 110, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x14fa, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 40, class name = _URB_GET_ISOCH_PIPE_TRANSFER_PATH_DELAYS, unique name = .?AU_URB_GET_ISOCH_PIPE_TRANSFER_PATH_DELAYS@@, UDT(0x000014fd)

0x14fe : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1311
	list[1] = 0x1134
	list[2] = T_UCHAR(0020)

0x14ff : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x14fe

0x1500 : Length = 46, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_LONG(0012), offset = 24
		member name = 'FrameLengthDelta'

0x1501 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x14FF

0x1502 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1500, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _URB_SET_FRAME_LENGTH, unique name = .?AU_URB_SET_FRAME_LENGTH@@, UDT(0x00001502)

0x1503 : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x1311
	list[1] = 0x110E
	list[2] = T_64PVOID(0603)
	list[3] = T_ULONG(0022)
	list[4] = T_64PULONG(0622)
	list[5] = T_64PULONG(0622)

0x1504 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x1503

0x1505 : Length = 214, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'PipeHandle'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'TransferFlags'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'TransferBufferLength'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'TransferBuffer'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'TransferBufferMDL'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 56
		member name = 'Timeout'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'
	list[8] = LF_MEMBER, public, type = 0x10F4, offset = 128
		member name = 'SetupPacket'

0x1506 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1504

0x1507 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 9,  field list type 0x1505, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 136, class name = _URB_CONTROL_TRANSFER_EX, unique name = .?AU_URB_CONTROL_TRANSFER_EX@@, UDT(0x00001507)

0x1508 : Length = 46, Leaf = 0x1201 LF_ARGLIST argument count = 10
	list[0] = 0x1311
	list[1] = 0x10E4
	list[2] = 0x110E
	list[3] = T_64PVOID(0603)
	list[4] = T_ULONG(0022)
	list[5] = 0x113B
	list[6] = T_64PVOID(0603)
	list[7] = T_UCHAR(0020)
	list[8] = T_64PVOID(0603)
	list[9] = T_ULONG(0022)

0x1509 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 10, Arg list type = 0x1508

0x150a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1509

0x150b : Length = 122, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Version'
	list[2] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 8
		member name = 'Context'
	list[3] = LF_MEMBER, public, type = 0x10EA, offset = 16
		member name = 'InterfaceReference'
	list[4] = LF_MEMBER, public, type = 0x10EA, offset = 24
		member name = 'InterfaceDereference'

0x150c : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1311
	list[1] = 0x1134
	list[2] = 0x110E
	list[3] = 0x1116

0x150d : Length = 50, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x150b, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _INTERFACE, unique name = .?AU_INTERFACE@@, UDT(0x0000150d)

0x150e : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x150c

0x150f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x150E

0x1510 : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'FrameNumber'

0x1511 : Length = 54, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, FORWARD REF, Size = 0	,class name = _DMA_ADAPTER_INFO, unique name = .?AT_DMA_ADAPTER_INFO@@

0x1512 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1511

0x1513 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1510, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _URB_GET_CURRENT_FRAME_NUMBER, unique name = .?AU_URB_GET_CURRENT_FRAME_NUMBER@@, UDT(0x00001513)

0x1514 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1311
	list[1] = 0x1512

0x1515 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1514

0x1516 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1515

0x1517 : Length = 294, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1284, offset = 0
		member name = 'Hdr'
	list[1] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 24
		member name = 'Reserved'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 32
		member name = 'TransferFlags'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 36
		member name = 'TransferBufferLength'
	list[4] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 40
		member name = 'TransferBuffer'
	list[5] = LF_MEMBER, public, type = 0x110E, offset = 48
		member name = 'TransferBufferMDL'
	list[6] = LF_MEMBER, public, type = 0x128C, offset = 56
		member name = 'UrbLink'
	list[7] = LF_MEMBER, public, type = 0x128F, offset = 64
		member name = 'hca'
	list[8] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 128
		member name = 'RequestTypeReservedBits'
	list[9] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 129
		member name = 'Request'
	list[10] = LF_MEMBER, public, type = T_USHORT(0021), offset = 130
		member name = 'Value'
	list[11] = LF_MEMBER, public, type = T_USHORT(0021), offset = 132
		member name = 'Index'
	list[12] = LF_MEMBER, public, type = T_USHORT(0021), offset = 134
		member name = 'Reserved1'

0x1518 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DMA_TRANSFER_INFO, unique name = .?AU_DMA_TRANSFER_INFO@@

0x1519 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1518

0x151a : Length = 102, Leaf = 0x1505 LF_STRUCTURE
	# members = 13,  field list type 0x1517, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 136, class name = _URB_CONTROL_VENDOR_OR_CLASS_REQUEST, unique name = .?AU_URB_CONTROL_VENDOR_OR_CLASS_REQUEST@@, UDT(0x0000151a)

0x151b : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x1311
	list[1] = 0x110E
	list[2] = T_UQUAD(0023)
	list[3] = T_ULONG(0022)
	list[4] = T_UCHAR(0020)
	list[5] = 0x1519

0x151c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x151b

0x151d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x151C

0x151e : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1311
	list[1] = T_64PVOID(0603)

0x151f : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1074

0x1520 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x151e

0x1521 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1520

0x1522 : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x1311
	list[1] = 0x1114
	list[2] = T_ULONG(0022)
	list[3] = 0x1114
	list[4] = T_UCHAR(0020)
	list[5] = T_ULONG(0022)

0x1523 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x1522

0x1524 : Length = 10, Leaf = 0x1002 LF_POINTER
	const Pointer (__ptr64), Size: 8
	Element type : 0x112D

0x1525 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x111C
	list[1] = 0x11E4
	list[2] = 0x1126

0x1526 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1523

0x1527 : Length = 10, Leaf = 0x1002 LF_POINTER
	const Pointer (__ptr64), Size: 8
	Element type : 0x1288

0x1528 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1525

0x1529 : Length = 38, Leaf = 0x1201 LF_ARGLIST argument count = 8
	list[0] = 0x1311
	list[1] = 0x10E4
	list[2] = T_64PVOID(0603)
	list[3] = T_ULONG(0022)
	list[4] = T_ULONG(0022)
	list[5] = 0x13EA
	list[6] = T_64PVOID(0603)
	list[7] = 0x13B6

0x152a : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x1130, Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x12c3

0x152b : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 8, Arg list type = 0x1529

0x152c : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x152B

0x152d : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x10A1
	Index type = T_UQUAD(0023)
	length = 16
	Name = 

0x152e : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x11A9

0x152f : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x10BA, Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x152e

0x1530 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1311
	list[1] = T_ULONG(0022)
	list[2] = T_64PVOID(0603)

0x1531 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1530

0x1532 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1531

0x1533 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = T_64PUCHAR(0620)

0x1534 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x11BA
	list[1] = 0x11C0
	list[2] = 0x128D

0x1535 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1534

0x1536 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1311
	list[1] = 0x10E4
	list[2] = T_64PVOID(0603)

0x1537 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1533

0x1538 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1536

0x1539 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x11C0, Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x10bc

0x153a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1538

0x153b : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = T_ULONG(0022)
	list[1] = T_64PVOID(0603)
	list[2] = 0x110E

0x153c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x153b

0x153d : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x11BA
	list[1] = 0x11CF
	list[2] = T_64PVOID(0603)

0x153e : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x110E
	list[1] = T_ULONG(0022)

0x153f : Length = 78, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'DmaComplete'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'DmaAborted'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'DmaError'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'DmaCancelled'

0x1540 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x153d

0x1541 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x153e

0x1542 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x153f
	enum name = DMA_COMPLETION_STATUS, UDT(0x00001542)

0x1543 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1311
	list[1] = 0x10E4
	list[2] = T_64PVOID(0603)
	list[3] = 0x1542

0x1544 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1543

0x1545 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x12c3

0x1546 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1544

0x1547 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x1130

0x1548 : Length = 50, Leaf = 0x1201 LF_ARGLIST argument count = 11
	list[0] = 0x1311
	list[1] = 0x110E
	list[2] = T_64PVOID(0603)
	list[3] = T_UQUAD(0023)
	list[4] = T_ULONG(0022)
	list[5] = T_64PULONG(0622)
	list[6] = T_UCHAR(0020)
	list[7] = 0x1134
	list[8] = T_ULONG(0022)
	list[9] = 0x1546
	list[10] = T_64PVOID(0603)

0x1549 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x1375, Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1547

0x154a : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 11, Arg list type = 0x1548

0x154b : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x128D
	list[1] = T_ULONG(0022)

0x154c : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x154A

0x154d : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x154b

0x154e : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1134

0x154f : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x110E
	list[1] = T_RCHAR(0070)
	list[2] = 0x1068
	list[3] = T_64PVOID(0603)
	list[4] = T_ULONG(0022)
	list[5] = T_ULONG(0022)

0x1550 : Length = 58, Leaf = 0x1201 LF_ARGLIST argument count = 13
	list[0] = 0x1311
	list[1] = 0x10E4
	list[2] = T_64PVOID(0603)
	list[3] = 0x110E
	list[4] = T_UQUAD(0023)
	list[5] = T_ULONG(0022)
	list[6] = T_ULONG(0022)
	list[7] = 0x113B
	list[8] = T_64PVOID(0603)
	list[9] = T_UCHAR(0020)
	list[10] = 0x1546
	list[11] = T_64PVOID(0603)
	list[12] = 0x154E

0x1551 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = T_UQUAD(0023)
	list[1] = T_USHORT(0021)
	list[2] = 0x1126
	list[3] = 0x12FC

0x1552 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x154f

0x1553 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 13, Arg list type = 0x1550

0x1554 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1551

0x1555 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1552

0x1556 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1553

0x1557 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = T_ULONG(0022)

0x1558 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1557

0x1559 : Length = 66, Leaf = 0x1201 LF_ARGLIST argument count = 15
	list[0] = 0x1311
	list[1] = 0x10E4
	list[2] = T_64PVOID(0603)
	list[3] = 0x110E
	list[4] = T_UQUAD(0023)
	list[5] = T_ULONG(0022)
	list[6] = T_ULONG(0022)
	list[7] = 0x113B
	list[8] = T_64PVOID(0603)
	list[9] = T_UCHAR(0020)
	list[10] = T_64PVOID(0603)
	list[11] = T_ULONG(0022)
	list[12] = 0x1546
	list[13] = T_64PVOID(0603)
	list[14] = T_64PVOID(0603)

0x155a : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 15, Arg list type = 0x1559

0x155b : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x155A

0x155c : Length = 10, Leaf = 0x1002 LF_POINTER
	const Pointer (__ptr64), Size: 8
	Element type : 0x1387

0x155d : Length = 30, Leaf = 0x1201 LF_ARGLIST argument count = 6
	list[0] = 0x1311
	list[1] = 0x110E
	list[2] = T_64PVOID(0603)
	list[3] = T_UQUAD(0023)
	list[4] = T_ULONG(0022)
	list[5] = T_UCHAR(0020)

0x155e : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 6, Arg list type = 0x155d

0x155f : Length = 34, Leaf = 0x1201 LF_ARGLIST argument count = 7
	list[0] = T_UQUAD(0023)
	list[1] = T_USHORT(0021)
	list[2] = 0x1126
	list[3] = T_INT4(0074)
	list[4] = T_UINT4(0075)
	list[5] = T_UINT4(0075)
	list[6] = 0x12FC

0x1560 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x155E

0x1561 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 7, Arg list type = 0x155f

0x1562 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1311
	list[1] = 0x12F0

0x1563 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1562

0x1564 : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = T_UQUAD(0023)
	list[1] = T_USHORT(0021)
	list[2] = 0x1126
	list[3] = 0x12FC
	list[4] = T_UINT4(0075)

0x1565 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1563

0x1566 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x1564

0x1567 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1068

0x1568 : Length = 42, Leaf = 0x1201 LF_ARGLIST argument count = 9
	list[0] = 0x1311
	list[1] = T_64PVOID(0603)
	list[2] = 0x1114
	list[3] = T_ULONG(0022)
	list[4] = T_ULONG(0022)
	list[5] = 0x1567
	list[6] = T_ULONG(0022)
	list[7] = 0x1114
	list[8] = 0x13B6

0x1569 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 9, Arg list type = 0x1568

0x156a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1569

0x156b : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1311
	list[1] = 0x110E
	list[2] = T_UCHAR(0020)

0x156c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x156b

0x156d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x156C

0x156e : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x14c7

0x156f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x156E

0x1570 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x14c7

0x1571 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1570

0x1572 : Length = 38, Leaf = 0x1201 LF_ARGLIST argument count = 8
	list[0] = 0x1311
	list[1] = 0x1114
	list[2] = 0x1114
	list[3] = T_ULONG(0022)
	list[4] = T_ULONG(0022)
	list[5] = 0x1567
	list[6] = T_ULONG(0022)
	list[7] = 0x1114

0x1573 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 8, Arg list type = 0x1572

0x1574 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1573

0x1575 : Length = 78, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DMA_COMMON_BUFFER_VECTOR, unique name = .?AU_DMA_COMMON_BUFFER_VECTOR@@

0x1576 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1575

0x1577 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1576

0x1578 : Length = 42, Leaf = 0x1201 LF_ARGLIST argument count = 9
	list[0] = 0x1311
	list[1] = 0x1073
	list[2] = 0x1073
	list[3] = 0x1068
	list[4] = T_ULONG(0022)
	list[5] = T_ULONG(0022)
	list[6] = T_ULONG(0022)
	list[7] = T_UQUAD(0023)
	list[8] = 0x1577

0x1579 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 9, Arg list type = 0x1578

0x157a : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1579

0x157b : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x1311
	list[1] = 0x1576
	list[2] = T_ULONG(0022)
	list[3] = 0x13B6
	list[4] = 0x1114

0x157c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x157b

0x157d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x157C

0x157e : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x1311
	list[1] = 0x1576
	list[2] = T_ULONG(0022)

0x157f : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x157e

0x1580 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x157F

0x1581 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1311
	list[1] = 0x1576

0x1582 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1581

0x1583 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1582

0x1584 : Length = 1302, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = 0x14CC, offset = 8
		member name = 'PutDmaAdapter'
	list[2] = LF_MEMBER, public, type = 0x14D2, offset = 16
		member name = 'AllocateCommonBuffer'
	list[3] = LF_MEMBER, public, type = 0x14DA, offset = 24
		member name = 'FreeCommonBuffer'
	list[4] = LF_MEMBER, public, type = 0x14DF, offset = 32
		member name = 'AllocateAdapterChannel'
	list[5] = LF_MEMBER, public, type = 0x14E7, offset = 40
		member name = 'FlushAdapterBuffers'
	list[6] = LF_MEMBER, public, type = 0x14CC, offset = 48
		member name = 'FreeAdapterChannel'
	list[7] = LF_MEMBER, public, type = 0x14EE, offset = 56
		member name = 'FreeMapRegisters'
	list[8] = LF_MEMBER, public, type = 0x14F4, offset = 64
		member name = 'MapTransfer'
	list[9] = LF_MEMBER, public, type = 0x14F8, offset = 72
		member name = 'GetDmaAlignment'
	list[10] = LF_MEMBER, public, type = 0x14F8, offset = 80
		member name = 'ReadDmaCounter'
	list[11] = LF_MEMBER, public, type = 0x14FC, offset = 88
		member name = 'GetScatterGatherList'
	list[12] = LF_MEMBER, public, type = 0x1501, offset = 96
		member name = 'PutScatterGatherList'
	list[13] = LF_MEMBER, public, type = 0x1506, offset = 104
		member name = 'CalculateScatterGatherList'
	list[14] = LF_MEMBER, public, type = 0x150A, offset = 112
		member name = 'BuildScatterGatherList'
	list[15] = LF_MEMBER, public, type = 0x150F, offset = 120
		member name = 'BuildMdlFromScatterGatherList'
	list[16] = LF_MEMBER, public, type = 0x1516, offset = 128
		member name = 'GetDmaAdapterInfo'
	list[17] = LF_MEMBER, public, type = 0x151D, offset = 136
		member name = 'GetDmaTransferInfo'
	list[18] = LF_MEMBER, public, type = 0x1521, offset = 144
		member name = 'InitializeDmaTransferContext'
	list[19] = LF_MEMBER, public, type = 0x1526, offset = 152
		member name = 'AllocateCommonBufferEx'
	list[20] = LF_MEMBER, public, type = 0x152C, offset = 160
		member name = 'AllocateAdapterChannelEx'
	list[21] = LF_MEMBER, public, type = 0x1532, offset = 168
		member name = 'ConfigureAdapterChannel'
	list[22] = LF_MEMBER, public, type = 0x153A, offset = 176
		member name = 'CancelAdapterChannel'
	list[23] = LF_MEMBER, public, type = 0x154C, offset = 184
		member name = 'MapTransferEx'
	list[24] = LF_MEMBER, public, type = 0x1556, offset = 192
		member name = 'GetScatterGatherListEx'
	list[25] = LF_MEMBER, public, type = 0x155B, offset = 200
		member name = 'BuildScatterGatherListEx'
	list[26] = LF_MEMBER, public, type = 0x1560, offset = 208
		member name = 'FlushAdapterBuffersEx'
	list[27] = LF_MEMBER, public, type = 0x1565, offset = 216
		member name = 'FreeAdapterObject'
	list[28] = LF_MEMBER, public, type = 0x1521, offset = 224
		member name = 'CancelMappedTransfer'
	list[29] = LF_MEMBER, public, type = 0x156A, offset = 232
		member name = 'AllocateDomainCommonBuffer'
	list[30] = LF_MEMBER, public, type = 0x156D, offset = 240
		member name = 'FlushDmaBuffer'
	list[31] = LF_MEMBER, public, type = 0x1521, offset = 248
		member name = 'JoinDmaDomain'
	list[32] = LF_MEMBER, public, type = 0x156F, offset = 256
		member name = 'LeaveDmaDomain'
	list[33] = LF_MEMBER, public, type = 0x1571, offset = 264
		member name = 'GetDmaDomain'
	list[34] = LF_MEMBER, public, type = 0x1574, offset = 272
		member name = 'AllocateCommonBufferWithBounds'
	list[35] = LF_MEMBER, public, type = 0x157A, offset = 280
		member name = 'AllocateCommonBufferVector'
	list[36] = LF_MEMBER, public, type = 0x157D, offset = 288
		member name = 'GetCommonBufferFromVectorByIndex'
	list[37] = LF_MEMBER, public, type = 0x1580, offset = 296
		member name = 'FreeCommonBufferFromVector'
	list[38] = LF_MEMBER, public, type = 0x1583, offset = 304
		member name = 'FreeCommonBufferVector'
	list[39] = LF_MEMBER, public, type = 0x1319, offset = 312
		member name = 'CreateCommonBufferFromMdl'

0x1585 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 40,  field list type 0x1584, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 320, class name = _DMA_OPERATIONS, unique name = .?AU_DMA_OPERATIONS@@, UDT(0x00001585)

0x1586 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x10E1, Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1279

0x1587 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x111C
	list[1] = 0x11E4
	list[2] = 0x1126
	list[3] = 0x12FC

0x1588 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x1587

0x1589 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = T_64PUQUAD(0623)

0x158a : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1589

0x158b : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x10E1
	list[1] = 0x10AA
	list[2] = 0x110D
	list[3] = 0x129B
	list[4] = 0x129D

0x158c : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_RCHAR(0070)
	Index type = T_UQUAD(0023)
	length = 128
	Name = 

0x158d : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x158b

0x158e : Length = 22, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x158C, offset = 0
		member name = 'padding'

0x158f : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x129B
	list[1] = 0x1287

0x1590 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x158e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 128, class name = CastGuardVftables, unique name = .?AUCastGuardVftables@@, UDT(0x00001590)

0x1591 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x158f

0x1592 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x1294

0x1593 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1592

0x1594 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x110D
	list[1] = 0x14AA

0x1595 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1594

0x1596 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x110D
	list[1] = 0x149F

0x1597 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1596

0x1598 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10E1
	list[1] = 0x10AA

0x1599 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1598

0x159a : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x1126
	list[1] = 0x1322
	list[2] = T_64PVOID(0603)
	list[3] = T_64PUQUAD(0623)

0x159b : Length = 10, Leaf = 0x1001 LF_MODIFIER
	const, volatile, modifies type T_QUAD(0013)

0x159c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x159a

0x159d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x159B

0x159e : Length = 26, Leaf = 0x1201 LF_ARGLIST argument count = 5
	list[0] = 0x111C
	list[1] = 0x11E4
	list[2] = 0x1126
	list[3] = 0x12FC
	list[4] = 0x1277

0x159f : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x159D

0x15a0 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 5, Arg list type = 0x159e

0x15a1 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_QUAD(0013), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x159f

0x15a2 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = T_NOTYPE(0000)

0x15a3 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 0, Arg list type = 0x15a2

0x15a4 : Length = 10, Leaf = 0x1002 LF_POINTER
	volatile const Pointer (__ptr64), Size: 8
	Element type : T_VOID(0003)

0x15a5 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x15A4

0x15a6 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x111C
	list[1] = T_UCHAR(0020)
	list[2] = T_UQUAD(0023)

0x15a7 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_UCHAR(0020), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x15a6

0x15a8 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x15A5

0x15a9 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x15a8

0x15aa : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x159a

0x15ab : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x15AA

0x15ac : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x10A1
	Index type = T_UQUAD(0023)
	length = 32
	Name = 

0x15ad : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_INT4(0074), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x1085

0x15ae : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x10E4
	list[1] = T_ULONG(0022)

0x15af : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x15ae

0x15b0 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x15AF

0x15b1 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x108A

0x15b2 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_64PVOID(0603), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x15b1

0x15b3 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x15B2

0x15b4 : Length = 10, Leaf = 0x1002 LF_POINTER
	volatile Pointer (__ptr64), Size: 8
	Element type : 0x1087

0x15b5 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x1126
	list[1] = 0x1126

0x15b6 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_INT4(0074), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x15b5

0x15b7 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x129C

0x15b8 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = T_64PVOID(0603)
	list[1] = T_UQUAD(0023)
	list[2] = T_UQUAD(0023)

0x15b9 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x15b8

0x15ba : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_INT4(0074), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x15b8

0x15bb : Length = 826, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'FeatureConfigurationPriorityImageDefault'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'FeatureConfigurationPriorityEKB'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'FeatureConfigurationPrioritySafeguard'
	list[3] = LF_ENUMERATE, public, value = 2, name = 'FeatureConfigurationPriorityPersistent'
	list[4] = LF_ENUMERATE, public, value = 3, name = 'FeatureConfigurationPriorityImageDefaultEditionOverride'
	list[5] = LF_ENUMERATE, public, value = 4, name = 'FeatureConfigurationPriorityService'
	list[6] = LF_ENUMERATE, public, value = 5, name = 'FeatureConfigurationPriorityReserved5'
	list[7] = LF_ENUMERATE, public, value = 6, name = 'FeatureConfigurationPriorityDynamic'
	list[8] = LF_ENUMERATE, public, value = 7, name = 'FeatureConfigurationPriorityReserved7'
	list[9] = LF_ENUMERATE, public, value = 8, name = 'FeatureConfigurationPriorityUser'
	list[10] = LF_ENUMERATE, public, value = 9, name = 'FeatureConfigurationPrioritySecurity'
	list[11] = LF_ENUMERATE, public, value = 10, name = 'FeatureConfigurationPriorityUserPolicy'
	list[12] = LF_ENUMERATE, public, value = 11, name = 'FeatureConfigurationPriorityReserved11'
	list[13] = LF_ENUMERATE, public, value = 12, name = 'FeatureConfigurationPriorityTest'
	list[14] = LF_ENUMERATE, public, value = 13, name = 'FeatureConfigurationPriorityReserved13'
	list[15] = LF_ENUMERATE, public, value = 14, name = 'FeatureConfigurationPriorityReserved14'
	list[16] = LF_ENUMERATE, public, value = 15, name = 'FeatureConfigurationPriorityImageOverride'
	list[17] = LF_ENUMERATE, public, value = 15, name = 'FeatureConfigurationPriorityMax'

0x15bc : Length = 94, Leaf = 0x1507 LF_ENUM
	# members = 18,  type = T_INT4(0074) field list type 0x15bb
	enum name = _RTL_FEATURE_CONFIGURATION_PRIORITY, UDT(0x000015bc)

0x15bd : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_INT4(0074), Call type = C Near
	Func attr = none
	# Parms = 0, Arg list type = 0x100e

0x15be : Length = 1114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PsAttributeParentProcess'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'PsAttributeDebugObject'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PsAttributeToken'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'PsAttributeClientId'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'PsAttributeTebAddress'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'PsAttributeImageName'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'PsAttributeImageInfo'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'PsAttributeMemoryReserve'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'PsAttributePriorityClass'
	list[9] = LF_ENUMERATE, public, value = 9, name = 'PsAttributeErrorMode'
	list[10] = LF_ENUMERATE, public, value = 10, name = 'PsAttributeStdHandleInfo'
	list[11] = LF_ENUMERATE, public, value = 11, name = 'PsAttributeHandleList'
	list[12] = LF_ENUMERATE, public, value = 12, name = 'PsAttributeGroupAffinity'
	list[13] = LF_ENUMERATE, public, value = 13, name = 'PsAttributePreferredNode'
	list[14] = LF_ENUMERATE, public, value = 14, name = 'PsAttributeIdealProcessor'
	list[15] = LF_ENUMERATE, public, value = 15, name = 'PsAttributeUmsThread'
	list[16] = LF_ENUMERATE, public, value = 16, name = 'PsAttributeMitigationOptions'
	list[17] = LF_ENUMERATE, public, value = 17, name = 'PsAttributeProtectionLevel'
	list[18] = LF_ENUMERATE, public, value = 18, name = 'PsAttributeSecureProcess'
	list[19] = LF_ENUMERATE, public, value = 19, name = 'PsAttributeJobList'
	list[20] = LF_ENUMERATE, public, value = 20, name = 'PsAttributeChildProcessPolicy'
	list[21] = LF_ENUMERATE, public, value = 21, name = 'PsAttributeAllApplicationPackagesPolicy'
	list[22] = LF_ENUMERATE, public, value = 22, name = 'PsAttributeWin32kFilter'
	list[23] = LF_ENUMERATE, public, value = 23, name = 'PsAttributeSafeOpenPromptOriginClaim'
	list[24] = LF_ENUMERATE, public, value = 24, name = 'PsAttributeBnoIsolation'
	list[25] = LF_ENUMERATE, public, value = 25, name = 'PsAttributeDesktopAppPolicy'
	list[26] = LF_ENUMERATE, public, value = 26, name = 'PsAttributeChpe'
	list[27] = LF_ENUMERATE, public, value = 27, name = 'PsAttributeMitigationAuditOptions'
	list[28] = LF_ENUMERATE, public, value = 28, name = 'PsAttributeMachineType'
	list[29] = LF_ENUMERATE, public, value = 29, name = 'PsAttributeComponentFilter'
	list[30] = LF_ENUMERATE, public, value = 30, name = 'PsAttributeEnableOptionalXStateFeatures'
	list[31] = LF_ENUMERATE, public, value = 31, name = 'PsAttributeSupportedMachines'
	list[32] = LF_ENUMERATE, public, value = 32, name = 'PsAttributeSveVectorLength'
	list[33] = LF_ENUMERATE, public, value = 33, name = 'PsAttributeMax'

0x15bf : Length = 58, Leaf = 0x1507 LF_ENUM
	# members = 34,  type = T_INT4(0074) field list type 0x15be
	enum name = _PS_ATTRIBUTE_NUM, UDT(0x000015bf)

0x15c0 : Length = 10, Leaf = 0x1002 LF_POINTER
	volatile Pointer (__ptr64), Size: 8
	Element type : T_VOID(0003)

0x15c1 : Length = 242, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PsCreateInitialState'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'PsCreateFailOnFileOpen'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PsCreateFailOnSectionCreate'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'PsCreateFailExeFormat'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'PsCreateFailMachineMismatch'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'PsCreateFailExeName'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'PsCreateSuccess'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'PsCreateMaximumStates'

0x15c2 : Length = 54, Leaf = 0x1507 LF_ENUM
	# members = 8,  type = T_INT4(0074) field list type 0x15c1
	enum name = PS_CREATE_STATE, UDT(0x000015c2)

0x15c3 : Length = 106, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PsNeverDuplicate'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'PsRequestDuplicate'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PsAlwaysDuplicate'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'PsMaxStdHandleStates'

0x15c4 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x15c3
	enum name = _PS_STD_HANDLE_STATE, UDT(0x000015c4)

0x15c5 : Length = 318, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PsProtectedSignerNone'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'PsProtectedSignerAuthenticode'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PsProtectedSignerCodeGen'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'PsProtectedSignerAntimalware'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'PsProtectedSignerLsa'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'PsProtectedSignerWindows'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'PsProtectedSignerWinTcb'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'PsProtectedSignerWinSystem'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'PsProtectedSignerApp'
	list[9] = LF_ENUMERATE, public, value = 9, name = 'PsProtectedSignerMax'

0x15c6 : Length = 66, Leaf = 0x1507 LF_ENUM
	# members = 10,  type = T_INT4(0074) field list type 0x15c5
	enum name = _PS_PROTECTED_SIGNER, UDT(0x000015c6)

0x15c7 : Length = 18, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x13D6, offset = 0
		member name = 'info'

0x15c8 : Length = 126, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PsProtectedTypeNone'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'PsProtectedTypeProtectedLight'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PsProtectedTypeProtected'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'PsProtectedTypeMax'

0x15c9 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x15c7, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 64, class name = __isa_info_t, unique name = .?AU__isa_info_t@@, UDT(0x000015c9)

0x15ca : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x15c8
	enum name = _PS_PROTECTED_TYPE, UDT(0x000015ca)

0x15cb : Length = 362, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'VRF_TRIAGE_CONTEXT_NONE'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'VRF_TRIAGE_CONTEXT_DEFAULT'
	list[2] = LF_ENUMERATE, public, value = 1, name = 'VRF_TRIAGE_CONTEXT_DEVELOPMENT'
	list[3] = LF_ENUMERATE, public, value = 2, name = 'VRF_TRIAGE_CONTEXT_CERTIFICATION'
	list[4] = LF_ENUMERATE, public, value = 3, name = 'VRF_TRIAGE_CONTEXT_CERTIFICATION_STRICT'
	list[5] = LF_ENUMERATE, public, value = 4, name = 'VRF_TRIAGE_CONTEXT_FLIGHT_TARGETED'
	list[6] = LF_ENUMERATE, public, value = 5, name = 'VRF_TRIAGE_CONTEXT_FLIGHT_DIAGNOSTICS'
	list[7] = LF_ENUMERATE, public, value = 6, name = 'VRF_TRIAGE_CONTEXT_FLIGHT_MONITORING'
	list[8] = LF_ENUMERATE, public, value = 7, name = 'NUM_VRF_TRIAGE_CONTEXTS'

0x15cc : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 9,  type = T_INT4(0074) field list type 0x15cb
	enum name = _VRF_TRIAGE_CONTEXT, UDT(0x000015cc)

0x15cd : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x15BD

0x15ce : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_INT4(0074)
	Index type = T_UQUAD(0023)
	length = 16
	Name = 

0x15cf : Length = 9846, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'SystemBasicInformation'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'SystemProcessorInformation'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'SystemPerformanceInformation'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'SystemTimeOfDayInformation'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'SystemPathInformation'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'SystemProcessInformation'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'SystemCallCountInformation'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'SystemDeviceInformation'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'SystemProcessorPerformanceInformation'
	list[9] = LF_ENUMERATE, public, value = 9, name = 'SystemFlagsInformation'
	list[10] = LF_ENUMERATE, public, value = 10, name = 'SystemCallTimeInformation'
	list[11] = LF_ENUMERATE, public, value = 11, name = 'SystemModuleInformation'
	list[12] = LF_ENUMERATE, public, value = 12, name = 'SystemLocksInformation'
	list[13] = LF_ENUMERATE, public, value = 13, name = 'SystemStackTraceInformation'
	list[14] = LF_ENUMERATE, public, value = 14, name = 'SystemPagedPoolInformation'
	list[15] = LF_ENUMERATE, public, value = 15, name = 'SystemNonPagedPoolInformation'
	list[16] = LF_ENUMERATE, public, value = 16, name = 'SystemHandleInformation'
	list[17] = LF_ENUMERATE, public, value = 17, name = 'SystemObjectInformation'
	list[18] = LF_ENUMERATE, public, value = 18, name = 'SystemPageFileInformation'
	list[19] = LF_ENUMERATE, public, value = 19, name = 'SystemVdmInstemulInformation'
	list[20] = LF_ENUMERATE, public, value = 20, name = 'SystemVdmBopInformation'
	list[21] = LF_ENUMERATE, public, value = 21, name = 'SystemFileCacheInformation'
	list[22] = LF_ENUMERATE, public, value = 22, name = 'SystemPoolTagInformation'
	list[23] = LF_ENUMERATE, public, value = 23, name = 'SystemInterruptInformation'
	list[24] = LF_ENUMERATE, public, value = 24, name = 'SystemDpcBehaviorInformation'
	list[25] = LF_ENUMERATE, public, value = 25, name = 'SystemFullMemoryInformation'
	list[26] = LF_ENUMERATE, public, value = 26, name = 'SystemLoadGdiDriverInformation'
	list[27] = LF_ENUMERATE, public, value = 27, name = 'SystemUnloadGdiDriverInformation'
	list[28] = LF_ENUMERATE, public, value = 28, name = 'SystemTimeAdjustmentInformation'
	list[29] = LF_ENUMERATE, public, value = 29, name = 'SystemSummaryMemoryInformation'
	list[30] = LF_ENUMERATE, public, value = 30, name = 'SystemMirrorMemoryInformation'
	list[31] = LF_ENUMERATE, public, value = 31, name = 'SystemPerformanceTraceInformation'
	list[32] = LF_ENUMERATE, public, value = 32, name = 'SystemObsolete0'
	list[33] = LF_ENUMERATE, public, value = 33, name = 'SystemExceptionInformation'
	list[34] = LF_ENUMERATE, public, value = 34, name = 'SystemCrashDumpStateInformation'
	list[35] = LF_ENUMERATE, public, value = 35, name = 'SystemKernelDebuggerInformation'
	list[36] = LF_ENUMERATE, public, value = 36, name = 'SystemContextSwitchInformation'
	list[37] = LF_ENUMERATE, public, value = 37, name = 'SystemRegistryQuotaInformation'
	list[38] = LF_ENUMERATE, public, value = 38, name = 'SystemExtendServiceTableInformation'
	list[39] = LF_ENUMERATE, public, value = 39, name = 'SystemPrioritySeperation'
	list[40] = LF_ENUMERATE, public, value = 40, name = 'SystemVerifierAddDriverInformation'
	list[41] = LF_ENUMERATE, public, value = 41, name = 'SystemVerifierRemoveDriverInformation'
	list[42] = LF_ENUMERATE, public, value = 42, name = 'SystemProcessorIdleInformation'
	list[43] = LF_ENUMERATE, public, value = 43, name = 'SystemLegacyDriverInformation'
	list[44] = LF_ENUMERATE, public, value = 44, name = 'SystemCurrentTimeZoneInformation'
	list[45] = LF_ENUMERATE, public, value = 45, name = 'SystemLookasideInformation'
	list[46] = LF_ENUMERATE, public, value = 46, name = 'SystemTimeSlipNotification'
	list[47] = LF_ENUMERATE, public, value = 47, name = 'SystemSessionCreate'
	list[48] = LF_ENUMERATE, public, value = 48, name = 'SystemSessionDetach'
	list[49] = LF_ENUMERATE, public, value = 49, name = 'SystemSessionInformation'
	list[50] = LF_ENUMERATE, public, value = 50, name = 'SystemRangeStartInformation'
	list[51] = LF_ENUMERATE, public, value = 51, name = 'SystemVerifierInformation'
	list[52] = LF_ENUMERATE, public, value = 52, name = 'SystemVerifierReserved'
	list[53] = LF_ENUMERATE, public, value = 53, name = 'SystemSessionProcessInformation'
	list[54] = LF_ENUMERATE, public, value = 54, name = 'SystemLoadGdiDriverInSystemSpace'
	list[55] = LF_ENUMERATE, public, value = 55, name = 'SystemNumaProcessorMap'
	list[56] = LF_ENUMERATE, public, value = 56, name = 'SystemPrefetcherInformation'
	list[57] = LF_ENUMERATE, public, value = 57, name = 'SystemExtendedProcessInformation'
	list[58] = LF_ENUMERATE, public, value = 58, name = 'SystemRecommendedSharedDataAlignment'
	list[59] = LF_ENUMERATE, public, value = 59, name = 'SystemComPlusPackage'
	list[60] = LF_ENUMERATE, public, value = 60, name = 'SystemNumaAvailableMemory'
	list[61] = LF_ENUMERATE, public, value = 61, name = 'SystemProcessorPowerInformation'
	list[62] = LF_ENUMERATE, public, value = 62, name = 'SystemEmulationBasicInformation'
	list[63] = LF_ENUMERATE, public, value = 63, name = 'SystemEmulationProcessorInformation'
	list[64] = LF_ENUMERATE, public, value = 64, name = 'SystemExtendedHandleInformation'
	list[65] = LF_ENUMERATE, public, value = 65, name = 'SystemLostDelayedWriteInformation'
	list[66] = LF_ENUMERATE, public, value = 66, name = 'SystemBigPoolInformation'
	list[67] = LF_ENUMERATE, public, value = 67, name = 'SystemSessionPoolTagInformation'
	list[68] = LF_ENUMERATE, public, value = 68, name = 'SystemSessionMappedViewInformation'
	list[69] = LF_ENUMERATE, public, value = 69, name = 'SystemHotpatchInformation'
	list[70] = LF_ENUMERATE, public, value = 70, name = 'SystemObjectSecurityMode'
	list[71] = LF_ENUMERATE, public, value = 71, name = 'SystemWatchdogTimerHandler'
	list[72] = LF_ENUMERATE, public, value = 72, name = 'SystemWatchdogTimerInformation'
	list[73] = LF_ENUMERATE, public, value = 73, name = 'SystemLogicalProcessorInformation'
	list[74] = LF_ENUMERATE, public, value = 74, name = 'SystemWow64SharedInformationObsolete'
	list[75] = LF_ENUMERATE, public, value = 75, name = 'SystemRegisterFirmwareTableInformationHandler'
	list[76] = LF_ENUMERATE, public, value = 76, name = 'SystemFirmwareTableInformation'
	list[77] = LF_ENUMERATE, public, value = 77, name = 'SystemModuleInformationEx'
	list[78] = LF_ENUMERATE, public, value = 78, name = 'SystemVerifierTriageInformation'
	list[79] = LF_ENUMERATE, public, value = 79, name = 'SystemSuperfetchInformation'
	list[80] = LF_ENUMERATE, public, value = 80, name = 'SystemMemoryListInformation'
	list[81] = LF_ENUMERATE, public, value = 81, name = 'SystemFileCacheInformationEx'
	list[82] = LF_ENUMERATE, public, value = 82, name = 'SystemThreadPriorityClientIdInformation'
	list[83] = LF_ENUMERATE, public, value = 83, name = 'SystemProcessorIdleCycleTimeInformation'
	list[84] = LF_ENUMERATE, public, value = 84, name = 'SystemVerifierCancellationInformation'
	list[85] = LF_ENUMERATE, public, value = 85, name = 'SystemProcessorPowerInformationEx'
	list[86] = LF_ENUMERATE, public, value = 86, name = 'SystemRefTraceInformation'
	list[87] = LF_ENUMERATE, public, value = 87, name = 'SystemSpecialPoolInformation'
	list[88] = LF_ENUMERATE, public, value = 88, name = 'SystemProcessIdInformation'
	list[89] = LF_ENUMERATE, public, value = 89, name = 'SystemErrorPortInformation'
	list[90] = LF_ENUMERATE, public, value = 90, name = 'SystemBootEnvironmentInformation'
	list[91] = LF_ENUMERATE, public, value = 91, name = 'SystemHypervisorInformation'
	list[92] = LF_ENUMERATE, public, value = 92, name = 'SystemVerifierInformationEx'
	list[93] = LF_ENUMERATE, public, value = 93, name = 'SystemTimeZoneInformation'
	list[94] = LF_ENUMERATE, public, value = 94, name = 'SystemImageFileExecutionOptionsInformation'
	list[95] = LF_ENUMERATE, public, value = 95, name = 'SystemCoverageInformation'
	list[96] = LF_ENUMERATE, public, value = 96, name = 'SystemPrefetchPatchInformation'
	list[97] = LF_ENUMERATE, public, value = 97, name = 'SystemVerifierFaultsInformation'
	list[98] = LF_ENUMERATE, public, value = 98, name = 'SystemSystemPartitionInformation'
	list[99] = LF_ENUMERATE, public, value = 99, name = 'SystemSystemDiskInformation'
	list[100] = LF_ENUMERATE, public, value = 100, name = 'SystemProcessorPerformanceDistribution'
	list[101] = LF_ENUMERATE, public, value = 101, name = 'SystemNumaProximityNodeInformation'
	list[102] = LF_ENUMERATE, public, value = 102, name = 'SystemDynamicTimeZoneInformation'
	list[103] = LF_ENUMERATE, public, value = 103, name = 'SystemCodeIntegrityInformation'
	list[104] = LF_ENUMERATE, public, value = 104, name = 'SystemProcessorMicrocodeUpdateInformation'
	list[105] = LF_ENUMERATE, public, value = 105, name = 'SystemProcessorBrandString'
	list[106] = LF_ENUMERATE, public, value = 106, name = 'SystemVirtualAddressInformation'
	list[107] = LF_ENUMERATE, public, value = 107, name = 'SystemLogicalProcessorAndGroupInformation'
	list[108] = LF_ENUMERATE, public, value = 108, name = 'SystemProcessorCycleTimeInformation'
	list[109] = LF_ENUMERATE, public, value = 109, name = 'SystemStoreInformation'
	list[110] = LF_ENUMERATE, public, value = 110, name = 'SystemRegistryAppendString'
	list[111] = LF_ENUMERATE, public, value = 111, name = 'SystemAitSamplingValue'
	list[112] = LF_ENUMERATE, public, value = 112, name = 'SystemVhdBootInformation'
	list[113] = LF_ENUMERATE, public, value = 113, name = 'SystemCpuQuotaInformation'
	list[114] = LF_ENUMERATE, public, value = 114, name = 'SystemNativeBasicInformation'
	list[115] = LF_ENUMERATE, public, value = 115, name = 'SystemErrorPortTimeouts'
	list[116] = LF_ENUMERATE, public, value = 116, name = 'SystemLowPriorityIoInformation'
	list[117] = LF_ENUMERATE, public, value = 117, name = 'SystemBootEntropyInformation'
	list[118] = LF_ENUMERATE, public, value = 118, name = 'SystemVerifierCountersInformation'
	list[119] = LF_ENUMERATE, public, value = 119, name = 'SystemPagedPoolInformationEx'
	list[120] = LF_ENUMERATE, public, value = 120, name = 'SystemSystemPtesInformationEx'
	list[121] = LF_ENUMERATE, public, value = 121, name = 'SystemNodeDistanceInformation'
	list[122] = LF_ENUMERATE, public, value = 122, name = 'SystemAcpiAuditInformation'
	list[123] = LF_ENUMERATE, public, value = 123, name = 'SystemBasicPerformanceInformation'
	list[124] = LF_ENUMERATE, public, value = 124, name = 'SystemQueryPerformanceCounterInformation'
	list[125] = LF_ENUMERATE, public, value = 125, name = 'SystemSessionBigPoolInformation'
	list[126] = LF_ENUMERATE, public, value = 126, name = 'SystemBootGraphicsInformation'
	list[127] = LF_ENUMERATE, public, value = 127, name = 'SystemScrubPhysicalMemoryInformation'
	list[128] = LF_ENUMERATE, public, value = 128, name = 'SystemBadPageInformation'
	list[129] = LF_ENUMERATE, public, value = 129, name = 'SystemProcessorProfileControlArea'
	list[130] = LF_ENUMERATE, public, value = 130, name = 'SystemCombinePhysicalMemoryInformation'
	list[131] = LF_ENUMERATE, public, value = 131, name = 'SystemEntropyInterruptTimingInformation'
	list[132] = LF_ENUMERATE, public, value = 132, name = 'SystemConsoleInformation'
	list[133] = LF_ENUMERATE, public, value = 133, name = 'SystemPlatformBinaryInformation'
	list[134] = LF_ENUMERATE, public, value = 134, name = 'SystemPolicyInformation'
	list[135] = LF_ENUMERATE, public, value = 135, name = 'SystemHypervisorProcessorCountInformation'
	list[136] = LF_ENUMERATE, public, value = 136, name = 'SystemDeviceDataInformation'
	list[137] = LF_ENUMERATE, public, value = 137, name = 'SystemDeviceDataEnumerationInformation'
	list[138] = LF_ENUMERATE, public, value = 138, name = 'SystemMemoryTopologyInformation'
	list[139] = LF_ENUMERATE, public, value = 139, name = 'SystemMemoryChannelInformation'
	list[140] = LF_ENUMERATE, public, value = 140, name = 'SystemBootLogoInformation'
	list[141] = LF_ENUMERATE, public, value = 141, name = 'SystemProcessorPerformanceInformationEx'
	list[142] = LF_ENUMERATE, public, value = 142, name = 'SystemCriticalProcessErrorLogInformation'
	list[143] = LF_ENUMERATE, public, value = 143, name = 'SystemSecureBootPolicyInformation'
	list[144] = LF_ENUMERATE, public, value = 144, name = 'SystemPageFileInformationEx'
	list[145] = LF_ENUMERATE, public, value = 145, name = 'SystemSecureBootInformation'
	list[146] = LF_ENUMERATE, public, value = 146, name = 'SystemEntropyInterruptTimingRawInformation'
	list[147] = LF_ENUMERATE, public, value = 147, name = 'SystemPortableWorkspaceEfiLauncherInformation'
	list[148] = LF_ENUMERATE, public, value = 148, name = 'SystemFullProcessInformation'
	list[149] = LF_ENUMERATE, public, value = 149, name = 'SystemKernelDebuggerInformationEx'
	list[150] = LF_ENUMERATE, public, value = 150, name = 'SystemBootMetadataInformation'
	list[151] = LF_ENUMERATE, public, value = 151, name = 'SystemSoftRebootInformation'
	list[152] = LF_ENUMERATE, public, value = 152, name = 'SystemElamCertificateInformation'
	list[153] = LF_ENUMERATE, public, value = 153, name = 'SystemOfflineDumpConfigInformation'
	list[154] = LF_ENUMERATE, public, value = 154, name = 'SystemProcessorFeaturesInformation'
	list[155] = LF_ENUMERATE, public, value = 155, name = 'SystemRegistryReconciliationInformation'
	list[156] = LF_ENUMERATE, public, value = 156, name = 'SystemEdidInformation'
	list[157] = LF_ENUMERATE, public, value = 157, name = 'SystemManufacturingInformation'
	list[158] = LF_ENUMERATE, public, value = 158, name = 'SystemEnergyEstimationConfigInformation'
	list[159] = LF_ENUMERATE, public, value = 159, name = 'SystemHypervisorDetailInformation'
	list[160] = LF_ENUMERATE, public, value = 160, name = 'SystemProcessorCycleStatsInformation'
	list[161] = LF_ENUMERATE, public, value = 161, name = 'SystemVmGenerationCountInformation'
	list[162] = LF_ENUMERATE, public, value = 162, name = 'SystemTrustedPlatformModuleInformation'
	list[163] = LF_ENUMERATE, public, value = 163, name = 'SystemKernelDebuggerFlags'
	list[164] = LF_ENUMERATE, public, value = 164, name = 'SystemCodeIntegrityPolicyInformation'
	list[165] = LF_ENUMERATE, public, value = 165, name = 'SystemIsolatedUserModeInformation'
	list[166] = LF_ENUMERATE, public, value = 166, name = 'SystemHardwareSecurityTestInterfaceResultsInformation'
	list[167] = LF_ENUMERATE, public, value = 167, name = 'SystemSingleModuleInformation'
	list[168] = LF_ENUMERATE, public, value = 168, name = 'SystemAllowedCpuSetsInformation'
	list[169] = LF_ENUMERATE, public, value = 169, name = 'SystemVsmProtectionInformation'
	list[170] = LF_ENUMERATE, public, value = 170, name = 'SystemInterruptCpuSetsInformation'
	list[171] = LF_ENUMERATE, public, value = 171, name = 'SystemSecureBootPolicyFullInformation'
	list[172] = LF_ENUMERATE, public, value = 172, name = 'SystemCodeIntegrityPolicyFullInformation'
	list[173] = LF_ENUMERATE, public, value = 173, name = 'SystemAffinitizedInterruptProcessorInformation'
	list[174] = LF_ENUMERATE, public, value = 174, name = 'SystemRootSiloInformation'
	list[175] = LF_ENUMERATE, public, value = 175, name = 'SystemCpuSetInformation'
	list[176] = LF_ENUMERATE, public, value = 176, name = 'SystemCpuSetTagInformation'
	list[177] = LF_ENUMERATE, public, value = 177, name = 'SystemWin32WerStartCallout'
	list[178] = LF_ENUMERATE, public, value = 178, name = 'SystemSecureKernelProfileInformation'
	list[179] = LF_ENUMERATE, public, value = 179, name = 'SystemCodeIntegrityPlatformManifestInformation'
	list[180] = LF_ENUMERATE, public, value = 180, name = 'SystemInterruptSteeringInformation'
	list[181] = LF_ENUMERATE, public, value = 181, name = 'SystemSupportedProcessorArchitectures'
	list[182] = LF_ENUMERATE, public, value = 182, name = 'SystemMemoryUsageInformation'
	list[183] = LF_ENUMERATE, public, value = 183, name = 'SystemCodeIntegrityCertificateInformation'
	list[184] = LF_ENUMERATE, public, value = 184, name = 'SystemPhysicalMemoryInformation'
	list[185] = LF_ENUMERATE, public, value = 185, name = 'SystemControlFlowTransition'
	list[186] = LF_ENUMERATE, public, value = 186, name = 'SystemKernelDebuggingAllowed'
	list[187] = LF_ENUMERATE, public, value = 187, name = 'SystemActivityModerationExeState'
	list[188] = LF_ENUMERATE, public, value = 188, name = 'SystemActivityModerationUserSettings'
	list[189] = LF_ENUMERATE, public, value = 189, name = 'SystemCodeIntegrityPoliciesFullInformation'
	list[190] = LF_ENUMERATE, public, value = 190, name = 'SystemCodeIntegrityUnlockInformation'
	list[191] = LF_ENUMERATE, public, value = 191, name = 'SystemIntegrityQuotaInformation'
	list[192] = LF_ENUMERATE, public, value = 192, name = 'SystemFlushInformation'
	list[193] = LF_ENUMERATE, public, value = 193, name = 'SystemProcessorIdleMaskInformation'
	list[194] = LF_ENUMERATE, public, value = 194, name = 'SystemSecureDumpEncryptionInformation'
	list[195] = LF_ENUMERATE, public, value = 195, name = 'SystemWriteConstraintInformation'
	list[196] = LF_ENUMERATE, public, value = 196, name = 'SystemKernelVaShadowInformation'
	list[197] = LF_ENUMERATE, public, value = 197, name = 'SystemHypervisorSharedPageInformation'
	list[198] = LF_ENUMERATE, public, value = 198, name = 'SystemFirmwareBootPerformanceInformation'
	list[199] = LF_ENUMERATE, public, value = 199, name = 'SystemCodeIntegrityVerificationInformation'
	list[200] = LF_ENUMERATE, public, value = 200, name = 'SystemFirmwarePartitionInformation'
	list[201] = LF_ENUMERATE, public, value = 201, name = 'SystemSpeculationControlInformation'
	list[202] = LF_ENUMERATE, public, value = 202, name = 'SystemDmaGuardPolicyInformation'
	list[203] = LF_ENUMERATE, public, value = 203, name = 'SystemEnclaveLaunchControlInformation'
	list[204] = LF_ENUMERATE, public, value = 204, name = 'SystemWorkloadAllowedCpuSetsInformation'
	list[205] = LF_ENUMERATE, public, value = 205, name = 'SystemCodeIntegrityUnlockModeInformation'
	list[206] = LF_ENUMERATE, public, value = 206, name = 'SystemLeapSecondInformation'
	list[207] = LF_ENUMERATE, public, value = 207, name = 'SystemFlags2Information'
	list[208] = LF_ENUMERATE, public, value = 208, name = 'SystemSecurityModelInformation'
	list[209] = LF_ENUMERATE, public, value = 209, name = 'SystemCodeIntegritySyntheticCacheInformation'
	list[210] = LF_ENUMERATE, public, value = 210, name = 'SystemFeatureConfigurationInformation'
	list[211] = LF_ENUMERATE, public, value = 211, name = 'SystemFeatureConfigurationSectionInformation'
	list[212] = LF_ENUMERATE, public, value = 212, name = 'SystemFeatureUsageSubscriptionInformation'
	list[213] = LF_ENUMERATE, public, value = 213, name = 'SystemSecureSpeculationControlInformation'
	list[214] = LF_ENUMERATE, public, value = 214, name = 'SystemSpacesBootInformation'
	list[215] = LF_ENUMERATE, public, value = 215, name = 'SystemFwRamdiskInformation'
	list[216] = LF_ENUMERATE, public, value = 216, name = 'SystemWheaIpmiHardwareInformation'
	list[217] = LF_ENUMERATE, public, value = 217, name = 'SystemDifSetRuleClassInformation'
	list[218] = LF_ENUMERATE, public, value = 218, name = 'SystemDifClearRuleClassInformation'
	list[219] = LF_ENUMERATE, public, value = 219, name = 'SystemDifApplyPluginVerificationOnDriver'
	list[220] = LF_ENUMERATE, public, value = 220, name = 'SystemDifRemovePluginVerificationOnDriver'
	list[221] = LF_ENUMERATE, public, value = 221, name = 'SystemShadowStackInformation'
	list[222] = LF_ENUMERATE, public, value = 222, name = 'SystemBuildVersionInformation'
	list[223] = LF_ENUMERATE, public, value = 223, name = 'SystemPoolLimitInformation'
	list[224] = LF_ENUMERATE, public, value = 224, name = 'SystemCodeIntegrityAddDynamicStore'
	list[225] = LF_ENUMERATE, public, value = 225, name = 'SystemCodeIntegrityClearDynamicStores'
	list[226] = LF_ENUMERATE, public, value = 226, name = 'SystemDifPoolTrackingInformation'
	list[227] = LF_ENUMERATE, public, value = 227, name = 'SystemPoolZeroingInformation'
	list[228] = LF_ENUMERATE, public, value = 228, name = 'SystemDpcWatchdogInformation'
	list[229] = LF_ENUMERATE, public, value = 229, name = 'SystemDpcWatchdogInformation2'
	list[230] = LF_ENUMERATE, public, value = 230, name = 'SystemSupportedProcessorArchitectures2'
	list[231] = LF_ENUMERATE, public, value = 231, name = 'SystemSingleProcessorRelationshipInformation'
	list[232] = LF_ENUMERATE, public, value = 232, name = 'SystemXfgCheckFailureInformation'
	list[233] = LF_ENUMERATE, public, value = 233, name = 'SystemIommuStateInformation'
	list[234] = LF_ENUMERATE, public, value = 234, name = 'SystemHypervisorMinrootInformation'
	list[235] = LF_ENUMERATE, public, value = 235, name = 'SystemHypervisorBootPagesInformation'
	list[236] = LF_ENUMERATE, public, value = 236, name = 'SystemPointerAuthInformation'
	list[237] = LF_ENUMERATE, public, value = 237, name = 'SystemSecureKernelDebuggerInformation'
	list[238] = LF_ENUMERATE, public, value = 238, name = 'SystemOriginalImageFeatureInformation'
	list[239] = LF_ENUMERATE, public, value = 239, name = 'SystemMemoryNumaInformation'
	list[240] = LF_ENUMERATE, public, value = 240, name = 'SystemMemoryNumaPerformanceInformation'
	list[241] = LF_ENUMERATE, public, value = 241, name = 'SystemCodeIntegritySignedPoliciesFullInformation'
	list[242] = LF_ENUMERATE, public, value = 242, name = 'SystemSecureCoreInformation'
	list[243] = LF_ENUMERATE, public, value = 243, name = 'SystemTrustedAppsRuntimeInformation'
	list[244] = LF_ENUMERATE, public, value = 244, name = 'SystemBadPageInformationEx'
	list[245] = LF_ENUMERATE, public, value = 245, name = 'SystemResourceDeadlockTimeout'
	list[246] = LF_ENUMERATE, public, value = 246, name = 'SystemBreakOnContextUnwindFailureInformation'
	list[247] = LF_ENUMERATE, public, value = 247, name = 'SystemOslRamdiskInformation'
	list[248] = LF_ENUMERATE, public, value = 248, name = 'MaxSystemInfoClass'

0x15d0 : Length = 74, Leaf = 0x1507 LF_ENUM
	# members = 249,  type = T_INT4(0074) field list type 0x15cf
	enum name = _SYSTEM_INFORMATION_CLASS, UDT(0x000015d0)

0x15d1 : Length = 254, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'PsWakeReasonUser'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'PsWakeReasonExecutionRequired'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'PsWakeReasonKernel'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'PsWakeReasonInstrumentation'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'PsWakeReasonPreserveProcess'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'PsWakeReasonActivityReference'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'PsWakeReasonWorkOnBehalf'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'PsMaxWakeReasons'

0x15d2 : Length = 54, Leaf = 0x1507 LF_ENUM
	# members = 8,  type = T_INT4(0074) field list type 0x15d1
	enum name = _PS_WAKE_REASON, UDT(0x000015d2)

0x15d3 : Length = 94, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'JOBOBJECT_IO_PRIORITY_LIMIT_ENABLE'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'JOBOBJECT_IO_PRIORITY_LIMIT_VALID_FLAGS'

0x15d4 : Length = 94, Leaf = 0x1507 LF_ENUM
	# members = 2,  type = T_INT4(0074) field list type 0x15d3
	enum name = _JOBOBJECT_IO_PRIORITY_LIMIT_FLAGS, UDT(0x000015d4)

0x15d5 : Length = 94, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'JOBOBJECT_PAGE_PRIORITY_LIMIT_ENABLE'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'JOBOBJECT_PAGE_PRIORITY_LIMIT_VALID_FLAGS'

0x15d6 : Length = 98, Leaf = 0x1507 LF_ENUM
	# members = 2,  type = T_INT4(0074) field list type 0x15d5
	enum name = _JOBOBJECT_PAGE_PRIORITY_LIMIT_FLAGS, UDT(0x000015d6)

0x15d7 : Length = 266, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'SystemProcessClassificationNormal'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'SystemProcessClassificationSystem'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'SystemProcessClassificationSecureSystem'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'SystemProcessClassificationMemCompression'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'SystemProcessClassificationRegistry'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'SystemProcessClassificationMaximum'

0x15d8 : Length = 86, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x15d7
	enum name = _SYSTEM_PROCESS_CLASSIFICATION, UDT(0x000015d8)

0x15d9 : Length = 146, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'KCONTINUE_UNWIND'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'KCONTINUE_RESUME'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'KCONTINUE_LONGJUMP'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'KCONTINUE_SET'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'KCONTINUE_LAST'
	list[5] = LF_ENUMERATE, public, value = 4, name = 'KCONTINUE_INVALID'

0x15da : Length = 54, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x15d9
	enum name = _KCONTINUE_TYPE, UDT(0x000015da)

0x15db : Length = 214, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'SystemFeatureConfigurationSectionTypeBoot'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'SystemFeatureConfigurationSectionTypeRuntime'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'SystemFeatureConfigurationSectionTypeUsageTriggers'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'SystemFeatureConfigurationSectionTypeCount'

0x15dc : Length = 110, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x15db
	enum name = _SYSTEM_FEATURE_CONFIGURATION_SECTION_TYPE, UDT(0x000015dc)

0x15dd : Length = 70, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'SysPlMemPaged'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'SysPlMemNonPaged'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'SysPlMemTypeMax'

0x15de : Length = 78, Leaf = 0x1507 LF_ENUM
	# members = 3,  type = T_INT4(0074) field list type 0x15dd
	enum name = _SYSTEM_POOL_LIMIT_MEM_TYPE, UDT(0x000015de)

0x15df : Length = 202, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'MemDedicatedAttributeReadBandwidth'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'MemDedicatedAttributeReadLatency'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'MemDedicatedAttributeWriteBandwidth'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'MemDedicatedAttributeWriteLatency'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'MemDedicatedAttributeMax'

0x15e0 : Length = 82, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x15df
	enum name = _MEM_DEDICATED_ATTRIBUTE_TYPE, UDT(0x000015e0)

0x15e1 : Length = 162, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'MemoryNotContiguous'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'MemoryAlignedAndContiguous'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'MemoryNotResident'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'MemoryNotEligibleToMakeContiguous'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'MemoryContiguityStateMax'

0x15e2 : Length = 102, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x15e1
	enum name = _MEMORY_PHYSICAL_CONTIGUITY_UNIT_STATE, UDT(0x000015e2)

0x15e3 : Length = 230, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'SE_WS_APPX_SIGNATURE_ORIGIN_NOT_VALIDATED'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'SE_WS_APPX_SIGNATURE_ORIGIN_UNKNOWN'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'SE_WS_APPX_SIGNATURE_ORIGIN_APPSTORE'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'SE_WS_APPX_SIGNATURE_ORIGIN_WINDOWS'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'SE_WS_APPX_SIGNATURE_ORIGIN_ENTERPRISE'

0x15e4 : Length = 78, Leaf = 0x1507 LF_ENUM
	# members = 5,  type = T_INT4(0074) field list type 0x15e3
	enum name = SE_WS_APPX_SIGNATURE_ORIGIN, UDT(0x000015e4)

0x15e5 : Length = 390, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'REFS_STREAM_SNAPSHOT_OPERATION_INVALID'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'REFS_STREAM_SNAPSHOT_OPERATION_CREATE'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'REFS_STREAM_SNAPSHOT_OPERATION_LIST'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'REFS_STREAM_SNAPSHOT_OPERATION_QUERY_DELTAS'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'REFS_STREAM_SNAPSHOT_OPERATION_REVERT'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'REFS_STREAM_SNAPSHOT_OPERATION_SET_SHADOW_BTREE'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'REFS_STREAM_SNAPSHOT_OPERATION_CLEAR_SHADOW_BTREE'
	list[7] = LF_ENUMERATE, public, value = 6, name = 'REFS_STREAM_SNAPSHOT_OPERATION_MAX'

0x15e6 : Length = 86, Leaf = 0x1507 LF_ENUM
	# members = 8,  type = T_INT4(0074) field list type 0x15e5
	enum name = _REFS_STREAM_SNAPSHOT_OPERATION, UDT(0x000015e6)

0x15e7 : Length = 3114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'JobObjectBasicAccountingInformation'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'JobObjectBasicLimitInformation'
	list[2] = LF_ENUMERATE, public, value = 3, name = 'JobObjectBasicProcessIdList'
	list[3] = LF_ENUMERATE, public, value = 4, name = 'JobObjectBasicUIRestrictions'
	list[4] = LF_ENUMERATE, public, value = 5, name = 'JobObjectSecurityLimitInformation'
	list[5] = LF_ENUMERATE, public, value = 6, name = 'JobObjectEndOfJobTimeInformation'
	list[6] = LF_ENUMERATE, public, value = 7, name = 'JobObjectAssociateCompletionPortInformation'
	list[7] = LF_ENUMERATE, public, value = 8, name = 'JobObjectBasicAndIoAccountingInformation'
	list[8] = LF_ENUMERATE, public, value = 9, name = 'JobObjectExtendedLimitInformation'
	list[9] = LF_ENUMERATE, public, value = 10, name = 'JobObjectJobSetInformation'
	list[10] = LF_ENUMERATE, public, value = 11, name = 'JobObjectGroupInformation'
	list[11] = LF_ENUMERATE, public, value = 12, name = 'JobObjectNotificationLimitInformation'
	list[12] = LF_ENUMERATE, public, value = 13, name = 'JobObjectLimitViolationInformation'
	list[13] = LF_ENUMERATE, public, value = 14, name = 'JobObjectGroupInformationEx'
	list[14] = LF_ENUMERATE, public, value = 15, name = 'JobObjectCpuRateControlInformation'
	list[15] = LF_ENUMERATE, public, value = 16, name = 'JobObjectCompletionFilter'
	list[16] = LF_ENUMERATE, public, value = 17, name = 'JobObjectCompletionCounter'
	list[17] = LF_ENUMERATE, public, value = 18, name = 'JobObjectFreezeInformation'
	list[18] = LF_ENUMERATE, public, value = 19, name = 'JobObjectExtendedAccountingInformation'
	list[19] = LF_ENUMERATE, public, value = 20, name = 'JobObjectWakeInformation'
	list[20] = LF_ENUMERATE, public, value = 21, name = 'JobObjectBackgroundInformation'
	list[21] = LF_ENUMERATE, public, value = 22, name = 'JobObjectSchedulingRankBiasInformation'
	list[22] = LF_ENUMERATE, public, value = 23, name = 'JobObjectTimerVirtualizationInformation'
	list[23] = LF_ENUMERATE, public, value = 24, name = 'JobObjectCycleTimeNotification'
	list[24] = LF_ENUMERATE, public, value = 25, name = 'JobObjectClearEvent'
	list[25] = LF_ENUMERATE, public, value = 26, name = 'JobObjectInterferenceInformation'
	list[26] = LF_ENUMERATE, public, value = 27, name = 'JobObjectClearPeakJobMemoryUsed'
	list[27] = LF_ENUMERATE, public, value = 28, name = 'JobObjectMemoryUsageInformation'
	list[28] = LF_ENUMERATE, public, value = 29, name = 'JobObjectSharedCommit'
	list[29] = LF_ENUMERATE, public, value = 30, name = 'JobObjectContainerId'
	list[30] = LF_ENUMERATE, public, value = 31, name = 'JobObjectIoRateControlInformation'
	list[31] = LF_ENUMERATE, public, value = 37, name = 'JobObjectSiloRootDirectory'
	list[32] = LF_ENUMERATE, public, value = 38, name = 'JobObjectServerSiloBasicInformation'
	list[33] = LF_ENUMERATE, public, value = 39, name = 'JobObjectServerSiloUserSharedData'
	list[34] = LF_ENUMERATE, public, value = 40, name = 'JobObjectServerSiloInitialize'
	list[35] = LF_ENUMERATE, public, value = 41, name = 'JobObjectServerSiloRunningState'
	list[36] = LF_ENUMERATE, public, value = 42, name = 'JobObjectIoAttribution'
	list[37] = LF_ENUMERATE, public, value = 43, name = 'JobObjectMemoryPartitionInformation'
	list[38] = LF_ENUMERATE, public, value = 44, name = 'JobObjectContainerTelemetryId'
	list[39] = LF_ENUMERATE, public, value = 45, name = 'JobObjectSiloSystemRoot'
	list[40] = LF_ENUMERATE, public, value = 46, name = 'JobObjectEnergyTrackingState'
	list[41] = LF_ENUMERATE, public, value = 47, name = 'JobObjectThreadImpersonationInformation'
	list[42] = LF_ENUMERATE, public, value = 48, name = 'JobObjectIoPriorityLimit'
	list[43] = LF_ENUMERATE, public, value = 49, name = 'JobObjectPagePriorityLimit'
	list[44] = LF_ENUMERATE, public, value = 50, name = 'JobObjectServerSiloDiagnosticInformation'
	list[45] = LF_ENUMERATE, public, value = 18, name = 'JobObjectReserved1Information'
	list[46] = LF_ENUMERATE, public, value = 19, name = 'JobObjectReserved2Information'
	list[47] = LF_ENUMERATE, public, value = 20, name = 'JobObjectReserved3Information'
	list[48] = LF_ENUMERATE, public, value = 21, name = 'JobObjectReserved4Information'
	list[49] = LF_ENUMERATE, public, value = 22, name = 'JobObjectReserved5Information'
	list[50] = LF_ENUMERATE, public, value = 23, name = 'JobObjectReserved6Information'
	list[51] = LF_ENUMERATE, public, value = 24, name = 'JobObjectReserved7Information'
	list[52] = LF_ENUMERATE, public, value = 25, name = 'JobObjectReserved8Information'
	list[53] = LF_ENUMERATE, public, value = 26, name = 'JobObjectReserved9Information'
	list[54] = LF_ENUMERATE, public, value = 27, name = 'JobObjectReserved10Information'
	list[55] = LF_ENUMERATE, public, value = 28, name = 'JobObjectReserved11Information'
	list[56] = LF_ENUMERATE, public, value = 29, name = 'JobObjectReserved12Information'
	list[57] = LF_ENUMERATE, public, value = 30, name = 'JobObjectReserved13Information'
	list[58] = LF_ENUMERATE, public, value = 31, name = 'JobObjectReserved14Information'
	list[59] = LF_ENUMERATE, public, value = 32, name = 'JobObjectNetRateControlInformation'
	list[60] = LF_ENUMERATE, public, value = 33, name = 'JobObjectNotificationLimitInformation2'
	list[61] = LF_ENUMERATE, public, value = 34, name = 'JobObjectLimitViolationInformation2'
	list[62] = LF_ENUMERATE, public, value = 35, name = 'JobObjectCreateSilo'
	list[63] = LF_ENUMERATE, public, value = 36, name = 'JobObjectSiloBasicInformation'
	list[64] = LF_ENUMERATE, public, value = 37, name = 'JobObjectReserved15Information'
	list[65] = LF_ENUMERATE, public, value = 38, name = 'JobObjectReserved16Information'
	list[66] = LF_ENUMERATE, public, value = 39, name = 'JobObjectReserved17Information'
	list[67] = LF_ENUMERATE, public, value = 40, name = 'JobObjectReserved18Information'
	list[68] = LF_ENUMERATE, public, value = 41, name = 'JobObjectReserved19Information'
	list[69] = LF_ENUMERATE, public, value = 42, name = 'JobObjectReserved20Information'
	list[70] = LF_ENUMERATE, public, value = 43, name = 'JobObjectReserved21Information'
	list[71] = LF_ENUMERATE, public, value = 44, name = 'JobObjectReserved22Information'
	list[72] = LF_ENUMERATE, public, value = 45, name = 'JobObjectReserved23Information'
	list[73] = LF_ENUMERATE, public, value = 46, name = 'JobObjectReserved24Information'
	list[74] = LF_ENUMERATE, public, value = 47, name = 'JobObjectReserved25Information'
	list[75] = LF_ENUMERATE, public, value = 48, name = 'JobObjectReserved26Information'
	list[76] = LF_ENUMERATE, public, value = 49, name = 'JobObjectReserved27Information'
	list[77] = LF_ENUMERATE, public, value = 50, name = 'JobObjectReserved28Information'
	list[78] = LF_ENUMERATE, public, value = 51, name = 'JobObjectNetworkAccountingInformation'
	list[79] = LF_ENUMERATE, public, value = 52, name = 'MaxJobObjectInfoClass'

0x15e8 : Length = 62, Leaf = 0x1507 LF_ENUM
	# members = 80,  type = T_INT4(0074) field list type 0x15e7
	enum name = _JOBOBJECTINFOCLASS, UDT(0x000015e8)

0x15e9 : Length = 134, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'ExceptionContinueExecution'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'ExceptionContinueSearch'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'ExceptionNestedException'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'ExceptionCollidedUnwind'

0x15ea : Length = 70, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x15e9
	enum name = _EXCEPTION_DISPOSITION, UDT(0x000015ea)

0x15eb : Length = 42, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _M128A, unique name = .?AU_M128A@@, UDT(0x000015fa)

0x15ec : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x15EB
	Index type = T_UQUAD(0023)
	length = 128
	Name = 

0x15ed : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x15EB
	Index type = T_UQUAD(0023)
	length = 256
	Name = 

0x15ee : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_UCHAR(0020)
	Index type = T_UQUAD(0023)
	length = 96
	Name = 

0x15ef : Length = 362, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'ControlWord'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'StatusWord'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 4
		member name = 'TagWord'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 5
		member name = 'Reserved1'
	list[4] = LF_MEMBER, public, type = T_USHORT(0021), offset = 6
		member name = 'ErrorOpcode'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'ErrorOffset'
	list[6] = LF_MEMBER, public, type = T_USHORT(0021), offset = 12
		member name = 'ErrorSelector'
	list[7] = LF_MEMBER, public, type = T_USHORT(0021), offset = 14
		member name = 'Reserved2'
	list[8] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'DataOffset'
	list[9] = LF_MEMBER, public, type = T_USHORT(0021), offset = 20
		member name = 'DataSelector'
	list[10] = LF_MEMBER, public, type = T_USHORT(0021), offset = 22
		member name = 'Reserved3'
	list[11] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'MxCsr'
	list[12] = LF_MEMBER, public, type = T_ULONG(0022), offset = 28
		member name = 'MxCsr_Mask'
	list[13] = LF_MEMBER, public, type = 0x15EC, offset = 32
		member name = 'FloatRegisters'
	list[14] = LF_MEMBER, public, type = 0x15ED, offset = 160
		member name = 'XmmRegisters'
	list[15] = LF_MEMBER, public, type = 0x15EE, offset = 416
		member name = 'Reserved4'

0x15f0 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 16,  field list type 0x15ef, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 512, class name = _XSAVE_FORMAT, unique name = .?AU_XSAVE_FORMAT@@, UDT(0x000015f0)

0x15f1 : Length = 46, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CONTEXT, unique name = .?AU_CONTEXT@@, UDT(0x00001604)

0x15f2 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x15F1

0x15f3 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IMAGE_RUNTIME_FUNCTION_ENTRY, unique name = .?AU_IMAGE_RUNTIME_FUNCTION_ENTRY@@, UDT(0x00001613)

0x15f4 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x15F3

0x15f5 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _GS_HANDLER_DATA, unique name = .?AU_GS_HANDLER_DATA@@, UDT(0x0000160e)

0x15f6 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x15F5

0x15f7 : Length = 46, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 0
		member name = 'ImageBase'
	list[1] = LF_MEMBER, public, type = 0x15F4, offset = 8
		member name = 'FunctionEntry'

0x15f8 : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x15f7, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _UNWIND_HISTORY_TABLE_ENTRY, unique name = .?AU_UNWIND_HISTORY_TABLE_ENTRY@@, UDT(0x000015f8)

0x15f9 : Length = 34, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 0
		member name = 'Low'
	list[1] = LF_MEMBER, public, type = T_QUAD(0013), offset = 8
		member name = 'High'

0x15fa : Length = 42, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x15f9, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _M128A, unique name = .?AU_M128A@@, UDT(0x000015fa)

0x15fb : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _EXCEPTION_RECORD, unique name = .?AU_EXCEPTION_RECORD@@, UDT(0x00001611)

0x15fc : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x15FB

0x15fd : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x15FC
	list[1] = T_64PVOID(0603)
	list[2] = 0x15F2
	list[3] = T_64PVOID(0603)

0x15fe : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x15EA, Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x15fd

0x15ff : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x15FE

0x1600 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _XSAVE_FORMAT, unique name = .?AU_XSAVE_FORMAT@@, UDT(0x000015f0)

0x1601 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x15EB
	Index type = T_UQUAD(0023)
	length = 32
	Name = 

0x1602 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x15EB
	Index type = T_UQUAD(0023)
	length = 416
	Name = 

0x1603 : Length = 1158, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 0
		member name = 'P1Home'
	list[1] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'P2Home'
	list[2] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 16
		member name = 'P3Home'
	list[3] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 24
		member name = 'P4Home'
	list[4] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 32
		member name = 'P5Home'
	list[5] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 40
		member name = 'P6Home'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 48
		member name = 'ContextFlags'
	list[7] = LF_MEMBER, public, type = T_ULONG(0022), offset = 52
		member name = 'MxCsr'
	list[8] = LF_MEMBER, public, type = T_USHORT(0021), offset = 56
		member name = 'SegCs'
	list[9] = LF_MEMBER, public, type = T_USHORT(0021), offset = 58
		member name = 'SegDs'
	list[10] = LF_MEMBER, public, type = T_USHORT(0021), offset = 60
		member name = 'SegEs'
	list[11] = LF_MEMBER, public, type = T_USHORT(0021), offset = 62
		member name = 'SegFs'
	list[12] = LF_MEMBER, public, type = T_USHORT(0021), offset = 64
		member name = 'SegGs'
	list[13] = LF_MEMBER, public, type = T_USHORT(0021), offset = 66
		member name = 'SegSs'
	list[14] = LF_MEMBER, public, type = T_ULONG(0022), offset = 68
		member name = 'EFlags'
	list[15] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 72
		member name = 'Dr0'
	list[16] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 80
		member name = 'Dr1'
	list[17] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 88
		member name = 'Dr2'
	list[18] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 96
		member name = 'Dr3'
	list[19] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 104
		member name = 'Dr6'
	list[20] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 112
		member name = 'Dr7'
	list[21] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 120
		member name = 'Rax'
	list[22] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 128
		member name = 'Rcx'
	list[23] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 136
		member name = 'Rdx'
	list[24] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 144
		member name = 'Rbx'
	list[25] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 152
		member name = 'Rsp'
	list[26] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 160
		member name = 'Rbp'
	list[27] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 168
		member name = 'Rsi'
	list[28] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 176
		member name = 'Rdi'
	list[29] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 184
		member name = 'R8'
	list[30] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 192
		member name = 'R9'
	list[31] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 200
		member name = 'R10'
	list[32] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 208
		member name = 'R11'
	list[33] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 216
		member name = 'R12'
	list[34] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 224
		member name = 'R13'
	list[35] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 232
		member name = 'R14'
	list[36] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 240
		member name = 'R15'
	list[37] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 248
		member name = 'Rip'
	list[38] = LF_MEMBER, public, type = 0x1600, offset = 256
		member name = 'FltSave'
	list[39] = LF_MEMBER, public, type = 0x1601, offset = 256
		member name = 'Header'
	list[40] = LF_MEMBER, public, type = 0x15EC, offset = 288
		member name = 'Legacy'
	list[41] = LF_MEMBER, public, type = 0x15EB, offset = 416
		member name = 'Xmm0'
	list[42] = LF_MEMBER, public, type = 0x15EB, offset = 432
		member name = 'Xmm1'
	list[43] = LF_MEMBER, public, type = 0x15EB, offset = 448
		member name = 'Xmm2'
	list[44] = LF_MEMBER, public, type = 0x15EB, offset = 464
		member name = 'Xmm3'
	list[45] = LF_MEMBER, public, type = 0x15EB, offset = 480
		member name = 'Xmm4'
	list[46] = LF_MEMBER, public, type = 0x15EB, offset = 496
		member name = 'Xmm5'
	list[47] = LF_MEMBER, public, type = 0x15EB, offset = 512
		member name = 'Xmm6'
	list[48] = LF_MEMBER, public, type = 0x15EB, offset = 528
		member name = 'Xmm7'
	list[49] = LF_MEMBER, public, type = 0x15EB, offset = 544
		member name = 'Xmm8'
	list[50] = LF_MEMBER, public, type = 0x15EB, offset = 560
		member name = 'Xmm9'
	list[51] = LF_MEMBER, public, type = 0x15EB, offset = 576
		member name = 'Xmm10'
	list[52] = LF_MEMBER, public, type = 0x15EB, offset = 592
		member name = 'Xmm11'
	list[53] = LF_MEMBER, public, type = 0x15EB, offset = 608
		member name = 'Xmm12'
	list[54] = LF_MEMBER, public, type = 0x15EB, offset = 624
		member name = 'Xmm13'
	list[55] = LF_MEMBER, public, type = 0x15EB, offset = 640
		member name = 'Xmm14'
	list[56] = LF_MEMBER, public, type = 0x15EB, offset = 656
		member name = 'Xmm15'
	list[57] = LF_MEMBER, public, type = 0x1602, offset = 768
		member name = 'VectorRegister'
	list[58] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 1184
		member name = 'VectorControl'
	list[59] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 1192
		member name = 'DebugControl'
	list[60] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 1200
		member name = 'LastBranchToRip'
	list[61] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 1208
		member name = 'LastBranchFromRip'
	list[62] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 1216
		member name = 'LastExceptionToRip'
	list[63] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 1224
		member name = 'LastExceptionFromRip'

0x1604 : Length = 46, Leaf = 0x1505 LF_STRUCTURE
	# members = 64,  field list type 0x1603, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 1232, class name = _CONTEXT, unique name = .?AU_CONTEXT@@, UDT(0x00001604)

0x1605 : Length = 82, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _UNWIND_HISTORY_TABLE_ENTRY, unique name = .?AU_UNWIND_HISTORY_TABLE_ENTRY@@, UDT(0x000015f8)

0x1606 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x1605
	Index type = T_UQUAD(0023)
	length = 192
	Name = 

0x1607 : Length = 162, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Count'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 4
		member name = 'LocalHint'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 5
		member name = 'GlobalHint'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 6
		member name = 'Search'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 7
		member name = 'Once'
	list[5] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'LowAddress'
	list[6] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 16
		member name = 'HighAddress'
	list[7] = LF_MEMBER, public, type = 0x1606, offset = 24
		member name = 'Entry'

0x1608 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x1607, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 216, class name = _UNWIND_HISTORY_TABLE, unique name = .?AU_UNWIND_HISTORY_TABLE@@, UDT(0x00001608)

0x1609 : Length = 66, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1408, offset = 0
		member name = 'EHandler'
	list[1] = LF_MEMBER, public, type = 0x1409, offset = 0
		member name = 'UHandler'
	list[2] = LF_MEMBER, public, type = 0x140B, offset = 0
		member name = 'HasAlignment'

0x160a : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1609, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = <unnamed-tag>, unique name = .?AU<unnamed-tag>@@

0x160b : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x160A, offset = 0
		member name = 'Bits'
	list[1] = LF_MEMBER, public, type = T_LONG(0012), offset = 0
		member name = 'CookieOffset'

0x160c : Length = 46, Leaf = 0x1506 LF_UNION
	# members = 2,  field list type 0x160b, SEALED, Size = 4	,class name = <unnamed-tag>, unique name = .?AT<unnamed-tag>@@

0x160d : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x160C, offset = 0
		member name = 'u'
	list[1] = LF_MEMBER, public, type = T_LONG(0012), offset = 4
		member name = 'AlignedBaseOffset'
	list[2] = LF_MEMBER, public, type = T_LONG(0012), offset = 8
		member name = 'Alignment'

0x160e : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x160d, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _GS_HANDLER_DATA, unique name = .?AU_GS_HANDLER_DATA@@, UDT(0x0000160e)

0x160f : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_UQUAD(0023)
	Index type = T_UQUAD(0023)
	length = 120
	Name = 

0x1610 : Length = 170, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_LONG(0012), offset = 0
		member name = 'ExceptionCode'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'ExceptionFlags'
	list[2] = LF_MEMBER, public, type = 0x15FC, offset = 8
		member name = 'ExceptionRecord'
	list[3] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 16
		member name = 'ExceptionAddress'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'NumberParameters'
	list[5] = LF_MEMBER, public, type = 0x160F, offset = 32
		member name = 'ExceptionInformation'

0x1611 : Length = 62, Leaf = 0x1505 LF_STRUCTURE
	# members = 6,  field list type 0x1610, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 152, class name = _EXCEPTION_RECORD, unique name = .?AU_EXCEPTION_RECORD@@, UDT(0x00001611)

0x1612 : Length = 102, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'BeginAddress'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'EndAddress'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'UnwindInfoAddress'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'UnwindData'

0x1613 : Length = 86, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1612, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _IMAGE_RUNTIME_FUNCTION_ENTRY, unique name = .?AU_IMAGE_RUNTIME_FUNCTION_ENTRY@@, UDT(0x00001613)

0x1614 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _DISPATCHER_CONTEXT, unique name = .?AU_DISPATCHER_CONTEXT@@, UDT(0x00001619)

0x1615 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1614

0x1616 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _UNWIND_HISTORY_TABLE, unique name = .?AU_UNWIND_HISTORY_TABLE@@, UDT(0x00001608)

0x1617 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1616

0x1618 : Length = 254, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 0
		member name = 'ControlPc'
	list[1] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 8
		member name = 'ImageBase'
	list[2] = LF_MEMBER, public, type = 0x15F4, offset = 16
		member name = 'FunctionEntry'
	list[3] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 24
		member name = 'EstablisherFrame'
	list[4] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 32
		member name = 'TargetIp'
	list[5] = LF_MEMBER, public, type = 0x15F2, offset = 40
		member name = 'ContextRecord'
	list[6] = LF_MEMBER, public, type = 0x15FF, offset = 48
		member name = 'LanguageHandler'
	list[7] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 56
		member name = 'HandlerData'
	list[8] = LF_MEMBER, public, type = 0x1617, offset = 64
		member name = 'HistoryTable'
	list[9] = LF_MEMBER, public, type = T_ULONG(0022), offset = 72
		member name = 'ScopeIndex'
	list[10] = LF_MEMBER, public, type = T_ULONG(0022), offset = 76
		member name = 'Fill0'

0x1619 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 11,  field list type 0x1618, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 80, class name = _DISPATCHER_CONTEXT, unique name = .?AU_DISPATCHER_CONTEXT@@, UDT(0x00001619)

0x161a : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x15FC
	list[1] = T_64PVOID(0603)
	list[2] = 0x15F2
	list[3] = 0x1615

0x161b : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x15EA, Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x161a

0x161c : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = T_64PVOID(0603)
	list[1] = 0x1615
	list[2] = 0x15F6

0x161d : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x161c

0x161e : Length = 150, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'IoPriorityVeryLow'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'IoPriorityLow'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'IoPriorityNormal'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'IoPriorityHigh'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'IoPriorityCritical'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'MaxIoPriorityTypes'

0x161f : Length = 58, Leaf = 0x1507 LF_ENUM
	# members = 6,  type = T_INT4(0074) field list type 0x161e
	enum name = _IO_PRIORITY_HINT, UDT(0x0000161f)

0x1620 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 32
	Name = 

0x1621 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 56
	Name = 

0x1622 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 88
	Name = 

0x1623 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 8
	Name = 

0x1624 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 60
	Name = 

0x1625 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 112
	Name = 

0x1626 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 116
	Name = 

0x1627 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = 0x114C
	Index type = T_UQUAD(0023)
	length = 128
	Name = 

0x1628 : Length = 114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'WdfDriverInitNonPnpDriver'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'WdfDriverInitNoDispatchOverride'
	list[2] = LF_ENUMERATE, public, value = 4, name = 'WdfVerifyOn'
	list[3] = LF_ENUMERATE, public, value = 8, name = 'WdfVerifierOn'

0x1629 : Length = 70, Leaf = 0x1507 LF_ENUM
	# members = 4,  type = T_INT4(0074) field list type 0x1628
	enum name = _WDF_DRIVER_INIT_FLAGS, UDT(0x00001629)

0x162a : Length = 46, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 1, name = 'DrvRtPoolNxOptIn'
	list[1] = LF_ENUMERATE, public, value = 2, name = 'LastDrvRtFlag'

0x162b : Length = 78, Leaf = 0x1507 LF_ENUM
	# members = 2,  type = T_INT4(0074) field list type 0x162a
	enum name = _DRIVER_RUNTIME_INIT_FLAGS, UDT(0x0000162b)

0x162c : Length = 3906, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_ENUMERATE, public, value = 0, name = 'DPFLTR_SYSTEM_ID'
	list[1] = LF_ENUMERATE, public, value = 1, name = 'DPFLTR_SMSS_ID'
	list[2] = LF_ENUMERATE, public, value = 2, name = 'DPFLTR_SETUP_ID'
	list[3] = LF_ENUMERATE, public, value = 3, name = 'DPFLTR_NTFS_ID'
	list[4] = LF_ENUMERATE, public, value = 4, name = 'DPFLTR_FSTUB_ID'
	list[5] = LF_ENUMERATE, public, value = 5, name = 'DPFLTR_CRASHDUMP_ID'
	list[6] = LF_ENUMERATE, public, value = 6, name = 'DPFLTR_CDAUDIO_ID'
	list[7] = LF_ENUMERATE, public, value = 7, name = 'DPFLTR_CDROM_ID'
	list[8] = LF_ENUMERATE, public, value = 8, name = 'DPFLTR_CLASSPNP_ID'
	list[9] = LF_ENUMERATE, public, value = 9, name = 'DPFLTR_DISK_ID'
	list[10] = LF_ENUMERATE, public, value = 10, name = 'DPFLTR_REDBOOK_ID'
	list[11] = LF_ENUMERATE, public, value = 11, name = 'DPFLTR_STORPROP_ID'
	list[12] = LF_ENUMERATE, public, value = 12, name = 'DPFLTR_SCSIPORT_ID'
	list[13] = LF_ENUMERATE, public, value = 13, name = 'DPFLTR_SCSIMINIPORT_ID'
	list[14] = LF_ENUMERATE, public, value = 14, name = 'DPFLTR_CONFIG_ID'
	list[15] = LF_ENUMERATE, public, value = 15, name = 'DPFLTR_I8042PRT_ID'
	list[16] = LF_ENUMERATE, public, value = 16, name = 'DPFLTR_SERMOUSE_ID'
	list[17] = LF_ENUMERATE, public, value = 17, name = 'DPFLTR_LSERMOUS_ID'
	list[18] = LF_ENUMERATE, public, value = 18, name = 'DPFLTR_KBDHID_ID'
	list[19] = LF_ENUMERATE, public, value = 19, name = 'DPFLTR_MOUHID_ID'
	list[20] = LF_ENUMERATE, public, value = 20, name = 'DPFLTR_KBDCLASS_ID'
	list[21] = LF_ENUMERATE, public, value = 21, name = 'DPFLTR_MOUCLASS_ID'
	list[22] = LF_ENUMERATE, public, value = 22, name = 'DPFLTR_TWOTRACK_ID'
	list[23] = LF_ENUMERATE, public, value = 23, name = 'DPFLTR_WMILIB_ID'
	list[24] = LF_ENUMERATE, public, value = 24, name = 'DPFLTR_ACPI_ID'
	list[25] = LF_ENUMERATE, public, value = 25, name = 'DPFLTR_AMLI_ID'
	list[26] = LF_ENUMERATE, public, value = 26, name = 'DPFLTR_HALIA64_ID'
	list[27] = LF_ENUMERATE, public, value = 27, name = 'DPFLTR_VIDEO_ID'
	list[28] = LF_ENUMERATE, public, value = 28, name = 'DPFLTR_SVCHOST_ID'
	list[29] = LF_ENUMERATE, public, value = 29, name = 'DPFLTR_VIDEOPRT_ID'
	list[30] = LF_ENUMERATE, public, value = 30, name = 'DPFLTR_TCPIP_ID'
	list[31] = LF_ENUMERATE, public, value = 31, name = 'DPFLTR_DMSYNTH_ID'
	list[32] = LF_ENUMERATE, public, value = 32, name = 'DPFLTR_NTOSPNP_ID'
	list[33] = LF_ENUMERATE, public, value = 33, name = 'DPFLTR_FASTFAT_ID'
	list[34] = LF_ENUMERATE, public, value = 34, name = 'DPFLTR_SAMSS_ID'
	list[35] = LF_ENUMERATE, public, value = 35, name = 'DPFLTR_PNPMGR_ID'
	list[36] = LF_ENUMERATE, public, value = 36, name = 'DPFLTR_NETAPI_ID'
	list[37] = LF_ENUMERATE, public, value = 37, name = 'DPFLTR_SCSERVER_ID'
	list[38] = LF_ENUMERATE, public, value = 38, name = 'DPFLTR_SCCLIENT_ID'
	list[39] = LF_ENUMERATE, public, value = 39, name = 'DPFLTR_SERIAL_ID'
	list[40] = LF_ENUMERATE, public, value = 40, name = 'DPFLTR_SERENUM_ID'
	list[41] = LF_ENUMERATE, public, value = 41, name = 'DPFLTR_UHCD_ID'
	list[42] = LF_ENUMERATE, public, value = 42, name = 'DPFLTR_RPCPROXY_ID'
	list[43] = LF_ENUMERATE, public, value = 43, name = 'DPFLTR_AUTOCHK_ID'
	list[44] = LF_ENUMERATE, public, value = 44, name = 'DPFLTR_DCOMSS_ID'
	list[45] = LF_ENUMERATE, public, value = 45, name = 'DPFLTR_UNIMODEM_ID'
	list[46] = LF_ENUMERATE, public, value = 46, name = 'DPFLTR_SIS_ID'
	list[47] = LF_ENUMERATE, public, value = 47, name = 'DPFLTR_FLTMGR_ID'
	list[48] = LF_ENUMERATE, public, value = 48, name = 'DPFLTR_WMICORE_ID'
	list[49] = LF_ENUMERATE, public, value = 49, name = 'DPFLTR_BURNENG_ID'
	list[50] = LF_ENUMERATE, public, value = 50, name = 'DPFLTR_IMAPI_ID'
	list[51] = LF_ENUMERATE, public, value = 51, name = 'DPFLTR_SXS_ID'
	list[52] = LF_ENUMERATE, public, value = 52, name = 'DPFLTR_FUSION_ID'
	list[53] = LF_ENUMERATE, public, value = 53, name = 'DPFLTR_IDLETASK_ID'
	list[54] = LF_ENUMERATE, public, value = 54, name = 'DPFLTR_SOFTPCI_ID'
	list[55] = LF_ENUMERATE, public, value = 55, name = 'DPFLTR_TAPE_ID'
	list[56] = LF_ENUMERATE, public, value = 56, name = 'DPFLTR_MCHGR_ID'
	list[57] = LF_ENUMERATE, public, value = 57, name = 'DPFLTR_IDEP_ID'
	list[58] = LF_ENUMERATE, public, value = 58, name = 'DPFLTR_PCIIDE_ID'
	list[59] = LF_ENUMERATE, public, value = 59, name = 'DPFLTR_FLOPPY_ID'
	list[60] = LF_ENUMERATE, public, value = 60, name = 'DPFLTR_FDC_ID'
	list[61] = LF_ENUMERATE, public, value = 61, name = 'DPFLTR_TERMSRV_ID'
	list[62] = LF_ENUMERATE, public, value = 62, name = 'DPFLTR_W32TIME_ID'
	list[63] = LF_ENUMERATE, public, value = 63, name = 'DPFLTR_PREFETCHER_ID'
	list[64] = LF_ENUMERATE, public, value = 64, name = 'DPFLTR_RSFILTER_ID'
	list[65] = LF_ENUMERATE, public, value = 65, name = 'DPFLTR_FCPORT_ID'
	list[66] = LF_ENUMERATE, public, value = 66, name = 'DPFLTR_PCI_ID'
	list[67] = LF_ENUMERATE, public, value = 67, name = 'DPFLTR_DMIO_ID'
	list[68] = LF_ENUMERATE, public, value = 68, name = 'DPFLTR_DMCONFIG_ID'
	list[69] = LF_ENUMERATE, public, value = 69, name = 'DPFLTR_DMADMIN_ID'
	list[70] = LF_ENUMERATE, public, value = 70, name = 'DPFLTR_WSOCKTRANSPORT_ID'
	list[71] = LF_ENUMERATE, public, value = 71, name = 'DPFLTR_VSS_ID'
	list[72] = LF_ENUMERATE, public, value = 72, name = 'DPFLTR_PNPMEM_ID'
	list[73] = LF_ENUMERATE, public, value = 73, name = 'DPFLTR_PROCESSOR_ID'
	list[74] = LF_ENUMERATE, public, value = 74, name = 'DPFLTR_DMSERVER_ID'
	list[75] = LF_ENUMERATE, public, value = 75, name = 'DPFLTR_SR_ID'
	list[76] = LF_ENUMERATE, public, value = 76, name = 'DPFLTR_INFINIBAND_ID'
	list[77] = LF_ENUMERATE, public, value = 77, name = 'DPFLTR_IHVDRIVER_ID'
	list[78] = LF_ENUMERATE, public, value = 78, name = 'DPFLTR_IHVVIDEO_ID'
	list[79] = LF_ENUMERATE, public, value = 79, name = 'DPFLTR_IHVAUDIO_ID'
	list[80] = LF_ENUMERATE, public, value = 80, name = 'DPFLTR_IHVNETWORK_ID'
	list[81] = LF_ENUMERATE, public, value = 81, name = 'DPFLTR_IHVSTREAMING_ID'
	list[82] = LF_ENUMERATE, public, value = 82, name = 'DPFLTR_IHVBUS_ID'
	list[83] = LF_ENUMERATE, public, value = 83, name = 'DPFLTR_HPS_ID'
	list[84] = LF_ENUMERATE, public, value = 84, name = 'DPFLTR_RTLTHREADPOOL_ID'
	list[85] = LF_ENUMERATE, public, value = 85, name = 'DPFLTR_LDR_ID'
	list[86] = LF_ENUMERATE, public, value = 86, name = 'DPFLTR_TCPIP6_ID'
	list[87] = LF_ENUMERATE, public, value = 87, name = 'DPFLTR_ISAPNP_ID'
	list[88] = LF_ENUMERATE, public, value = 88, name = 'DPFLTR_SHPC_ID'
	list[89] = LF_ENUMERATE, public, value = 89, name = 'DPFLTR_STORPORT_ID'
	list[90] = LF_ENUMERATE, public, value = 90, name = 'DPFLTR_STORMINIPORT_ID'
	list[91] = LF_ENUMERATE, public, value = 91, name = 'DPFLTR_PRINTSPOOLER_ID'
	list[92] = LF_ENUMERATE, public, value = 92, name = 'DPFLTR_VSSDYNDISK_ID'
	list[93] = LF_ENUMERATE, public, value = 93, name = 'DPFLTR_VERIFIER_ID'
	list[94] = LF_ENUMERATE, public, value = 94, name = 'DPFLTR_VDS_ID'
	list[95] = LF_ENUMERATE, public, value = 95, name = 'DPFLTR_VDSBAS_ID'
	list[96] = LF_ENUMERATE, public, value = 96, name = 'DPFLTR_VDSDYN_ID'
	list[97] = LF_ENUMERATE, public, value = 97, name = 'DPFLTR_VDSDYNDR_ID'
	list[98] = LF_ENUMERATE, public, value = 98, name = 'DPFLTR_VDSLDR_ID'
	list[99] = LF_ENUMERATE, public, value = 99, name = 'DPFLTR_VDSUTIL_ID'
	list[100] = LF_ENUMERATE, public, value = 100, name = 'DPFLTR_DFRGIFC_ID'
	list[101] = LF_ENUMERATE, public, value = 101, name = 'DPFLTR_DEFAULT_ID'
	list[102] = LF_ENUMERATE, public, value = 102, name = 'DPFLTR_MM_ID'
	list[103] = LF_ENUMERATE, public, value = 103, name = 'DPFLTR_DFSC_ID'
	list[104] = LF_ENUMERATE, public, value = 104, name = 'DPFLTR_WOW64_ID'
	list[105] = LF_ENUMERATE, public, value = 105, name = 'DPFLTR_ALPC_ID'
	list[106] = LF_ENUMERATE, public, value = 106, name = 'DPFLTR_WDI_ID'
	list[107] = LF_ENUMERATE, public, value = 107, name = 'DPFLTR_PERFLIB_ID'
	list[108] = LF_ENUMERATE, public, value = 108, name = 'DPFLTR_KTM_ID'
	list[109] = LF_ENUMERATE, public, value = 109, name = 'DPFLTR_IOSTRESS_ID'
	list[110] = LF_ENUMERATE, public, value = 110, name = 'DPFLTR_HEAP_ID'
	list[111] = LF_ENUMERATE, public, value = 111, name = 'DPFLTR_WHEA_ID'
	list[112] = LF_ENUMERATE, public, value = 112, name = 'DPFLTR_USERGDI_ID'
	list[113] = LF_ENUMERATE, public, value = 113, name = 'DPFLTR_MMCSS_ID'
	list[114] = LF_ENUMERATE, public, value = 114, name = 'DPFLTR_TPM_ID'
	list[115] = LF_ENUMERATE, public, value = 115, name = 'DPFLTR_THREADORDER_ID'
	list[116] = LF_ENUMERATE, public, value = 116, name = 'DPFLTR_ENVIRON_ID'
	list[117] = LF_ENUMERATE, public, value = 117, name = 'DPFLTR_EMS_ID'
	list[118] = LF_ENUMERATE, public, value = 118, name = 'DPFLTR_WDT_ID'
	list[119] = LF_ENUMERATE, public, value = 119, name = 'DPFLTR_FVEVOL_ID'
	list[120] = LF_ENUMERATE, public, value = 120, name = 'DPFLTR_NDIS_ID'
	list[121] = LF_ENUMERATE, public, value = 121, name = 'DPFLTR_NVCTRACE_ID'
	list[122] = LF_ENUMERATE, public, value = 122, name = 'DPFLTR_LUAFV_ID'
	list[123] = LF_ENUMERATE, public, value = 123, name = 'DPFLTR_APPCOMPAT_ID'
	list[124] = LF_ENUMERATE, public, value = 124, name = 'DPFLTR_USBSTOR_ID'
	list[125] = LF_ENUMERATE, public, value = 125, name = 'DPFLTR_SBP2PORT_ID'
	list[126] = LF_ENUMERATE, public, value = 126, name = 'DPFLTR_COVERAGE_ID'
	list[127] = LF_ENUMERATE, public, value = 127, name = 'DPFLTR_CACHEMGR_ID'
	list[128] = LF_ENUMERATE, public, value = 128, name = 'DPFLTR_MOUNTMGR_ID'
	list[129] = LF_ENUMERATE, public, value = 129, name = 'DPFLTR_CFR_ID'
	list[130] = LF_ENUMERATE, public, value = 130, name = 'DPFLTR_TXF_ID'
	list[131] = LF_ENUMERATE, public, value = 131, name = 'DPFLTR_KSECDD_ID'
	list[132] = LF_ENUMERATE, public, value = 132, name = 'DPFLTR_FLTREGRESS_ID'
	list[133] = LF_ENUMERATE, public, value = 133, name = 'DPFLTR_MPIO_ID'
	list[134] = LF_ENUMERATE, public, value = 134, name = 'DPFLTR_MSDSM_ID'
	list[135] = LF_ENUMERATE, public, value = 135, name = 'DPFLTR_UDFS_ID'
	list[136] = LF_ENUMERATE, public, value = 136, name = 'DPFLTR_PSHED_ID'
	list[137] = LF_ENUMERATE, public, value = 137, name = 'DPFLTR_STORVSP_ID'
	list[138] = LF_ENUMERATE, public, value = 138, name = 'DPFLTR_LSASS_ID'
	list[139] = LF_ENUMERATE, public, value = 139, name = 'DPFLTR_SSPICLI_ID'
	list[140] = LF_ENUMERATE, public, value = 140, name = 'DPFLTR_CNG_ID'
	list[141] = LF_ENUMERATE, public, value = 141, name = 'DPFLTR_EXFAT_ID'
	list[142] = LF_ENUMERATE, public, value = 142, name = 'DPFLTR_FILETRACE_ID'
	list[143] = LF_ENUMERATE, public, value = 143, name = 'DPFLTR_XSAVE_ID'
	list[144] = LF_ENUMERATE, public, value = 144, name = 'DPFLTR_SE_ID'
	list[145] = LF_ENUMERATE, public, value = 145, name = 'DPFLTR_DRIVEEXTENDER_ID'
	list[146] = LF_ENUMERATE, public, value = 146, name = 'DPFLTR_POWER_ID'
	list[147] = LF_ENUMERATE, public, value = 147, name = 'DPFLTR_CRASHDUMPXHCI_ID'
	list[148] = LF_ENUMERATE, public, value = 148, name = 'DPFLTR_GPIO_ID'
	list[149] = LF_ENUMERATE, public, value = 149, name = 'DPFLTR_REFS_ID'
	list[150] = LF_ENUMERATE, public, value = 150, name = 'DPFLTR_WER_ID'
	list[151] = LF_ENUMERATE, public, value = 151, name = 'DPFLTR_CAPIMG_ID'
	list[152] = LF_ENUMERATE, public, value = 152, name = 'DPFLTR_VPCI_ID'
	list[153] = LF_ENUMERATE, public, value = 153, name = 'DPFLTR_STORAGECLASSMEMORY_ID'
	list[154] = LF_ENUMERATE, public, value = 154, name = 'DPFLTR_FSLIB_ID'
	list[155] = LF_ENUMERATE, public, value = 155, name = 'DPFLTR_ENDOFTABLE_ID'

0x162d : Length = 50, Leaf = 0x1507 LF_ENUM
	# members = 156,  type = T_INT4(0074) field list type 0x162c
	enum name = _DPFLTR_TYPE, UDT(0x0000162d)

0x162e : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_IFR_HEADER, unique name = .?AU_WDF_IFR_HEADER@@, UDT(0x00001654)

0x162f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x162E

0x1630 : Length = 118, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, Size = 0	,class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>, unique name = .?AT<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016cd)

0x1631 : Length = 102, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'ShareDisposition'
	list[2] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Flags'
	list[3] = LF_NESTTYPE, type = 0x1630, <unnamed-type-u>
	list[4] = LF_MEMBER, public, type = 0x1630, offset = 4
		member name = 'u'

0x1632 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x1631, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 20, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR, unique name = .?AU_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x00001632)

0x1633 : Length = 102, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, Size = 0	,class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>, unique name = .?AT<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x000016fc)

0x1634 : Length = 162, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'Option'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'Type'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'ShareDisposition'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'Spare1'
	list[4] = LF_MEMBER, public, type = T_USHORT(0021), offset = 4
		member name = 'Flags'
	list[5] = LF_MEMBER, public, type = T_USHORT(0021), offset = 6
		member name = 'Spare2'
	list[6] = LF_NESTTYPE, type = 0x1633, <unnamed-type-u>
	list[7] = LF_MEMBER, public, type = 0x1633, offset = 8
		member name = 'u'

0x1635 : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x1634, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_RESOURCE_DESCRIPTOR, unique name = .?AU_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001635)

0x1636 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_VERSION, unique name = .?AU_WDF_VERSION@@, UDT(0x000016c0)

0x1637 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x10F3

0x1638 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _LIBRARY_MODULE, unique name = .?AU_LIBRARY_MODULE@@

0x1639 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1638

0x163a : Length = 118, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = T_64PWCHAR(0671), offset = 8
		member name = 'Component'
	list[2] = LF_MEMBER, public, type = 0x1636, offset = 16
		member name = 'Version'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 28
		member name = 'FuncCount'
	list[4] = LF_MEMBER, public, type = 0x1637, offset = 32
		member name = 'FuncTable'
	list[5] = LF_MEMBER, public, type = 0x1639, offset = 40
		member name = 'Module'

0x163b : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 6,  field list type 0x163a, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 48, class name = _WDF_BIND_INFO, unique name = .?AU_WDF_BIND_INFO@@, UDT(0x0000163b)

0x163c : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 0, Arg list type = 0x100e

0x163d : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x163C

0x163e : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_BIND_INFO, unique name = .?AU_WDF_BIND_INFO@@, UDT(0x0000163b)

0x163f : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x163E

0x1640 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x163F
	list[1] = 0x13B6

0x1641 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1640

0x1642 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1641

0x1643 : Length = 86, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, Size = 0	,class name = _WDF_IFR_OFFSET::<unnamed-type-u>, unique name = .?AT<unnamed-type-u>@_WDF_IFR_OFFSET@@, UDT(0x00001648)

0x1644 : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_NESTTYPE, type = 0x1643, <unnamed-type-u>
	list[1] = LF_MEMBER, public, type = 0x1643, offset = 0
		member name = 'u'

0x1645 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1644, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = _WDF_IFR_OFFSET, unique name = .?AU_WDF_IFR_OFFSET@@, UDT(0x00001645)

0x1646 : Length = 130, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_IFR_OFFSET::<unnamed-type-u>::<unnamed-type-s>, unique name = .?AU<unnamed-type-s>@<unnamed-type-u>@_WDF_IFR_OFFSET@@, UDT(0x0000164a)

0x1647 : Length = 62, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_NESTTYPE, type = 0x1646, <unnamed-type-s>
	list[1] = LF_MEMBER, public, type = 0x1646, offset = 0
		member name = 's'
	list[2] = LF_MEMBER, public, type = T_LONG(0012), offset = 0
		member name = 'AsLONG'

0x1648 : Length = 86, Leaf = 0x1506 LF_UNION
	# members = 3,  field list type 0x1647, NESTED, CONTAINS NESTED, SEALED, Size = 4	,class name = _WDF_IFR_OFFSET::<unnamed-type-u>, unique name = .?AT<unnamed-type-u>@_WDF_IFR_OFFSET@@, UDT(0x00001648)

0x1649 : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Current'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Previous'

0x164a : Length = 130, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1649, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = _WDF_IFR_OFFSET::<unnamed-type-u>::<unnamed-type-s>, unique name = .?AU<unnamed-type-s>@<unnamed-type-u>@_WDF_IFR_OFFSET@@, UDT(0x0000164a)

0x164b : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_UCHAR(0020)
	Index type = T_UQUAD(0023)
	length = 16
	Name = 

0x164c : Length = 102, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, Size = 0	,class name = _ACCESS_STATE::<unnamed-type-Privileges>, unique name = .?AT<unnamed-type-Privileges>@_ACCESS_STATE@@, UDT(0x00001651)

0x164d : Length = 18, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x164B, offset = 0
		member name = 'Pad'

0x164e : Length = 486, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x10EE, offset = 0
		member name = 'OperationID'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 8
		member name = 'SecurityEvaluated'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 9
		member name = 'GenerateAudit'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 10
		member name = 'GenerateOnClose'
	list[4] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 11
		member name = 'PrivilegesAllocated'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'Flags'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'RemainingDesiredAccess'
	list[7] = LF_MEMBER, public, type = T_ULONG(0022), offset = 20
		member name = 'PreviouslyGrantedAccess'
	list[8] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'OriginalDesiredAccess'
	list[9] = LF_MEMBER, public, type = 0x114B, offset = 32
		member name = 'SubjectSecurityContext'
	list[10] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 64
		member name = 'SecurityDescriptor'
	list[11] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 72
		member name = 'AuxData'
	list[12] = LF_NESTTYPE, type = 0x164C, <unnamed-type-Privileges>
	list[13] = LF_MEMBER, public, type = 0x164C, offset = 80
		member name = 'Privileges'
	list[14] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 124
		member name = 'AuditPrivileges'
	list[15] = LF_MEMBER, public, type = 0x1089, offset = 128
		member name = 'ObjectName'
	list[16] = LF_MEMBER, public, type = 0x1089, offset = 144
		member name = 'ObjectTypeName'

0x164f : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x164d, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _MARKER_TYPE, unique name = .?AU_MARKER_TYPE@@, UDT(0x0000164f)

0x1650 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 17,  field list type 0x164e, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 160, class name = _ACCESS_STATE, unique name = .?AU_ACCESS_STATE@@, UDT(0x00001650)

0x1651 : Length = 102, Leaf = 0x1506 LF_UNION
	# members = 2,  field list type 0x1151, NESTED, SEALED, Size = 44	,class name = _ACCESS_STATE::<unnamed-type-Privileges>, unique name = .?AT<unnamed-type-Privileges>@_ACCESS_STATE@@, UDT(0x00001651)

0x1652 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_IFR_OFFSET, unique name = .?AU_WDF_IFR_OFFSET@@, UDT(0x00001645)

0x1653 : Length = 166, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x10D5, offset = 0
		member name = 'Guid'
	list[1] = LF_MEMBER, public, type = T_64PUCHAR(0620), offset = 16
		member name = 'Base'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 24
		member name = 'Size'
	list[3] = LF_MEMBER, public, type = 0x1652, offset = 28
		member name = 'Offset'
	list[4] = LF_MEMBER, public, type = T_LONG(0012), offset = 32
		member name = 'Sequence'
	list[5] = LF_MEMBER, public, type = 0x11FB, offset = 36
		member name = 'DriverName'
	list[6] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 68
		member name = 'UseTimeStamp'
	list[7] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 69
		member name = 'PreciseTimeStamp'

0x1654 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x1653, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 72, class name = _WDF_IFR_HEADER, unique name = .?AU_WDF_IFR_HEADER@@, UDT(0x00001654)

0x1655 : Length = 110, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, Size = 0	,class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>, unique name = .?AT<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001686)

0x1656 : Length = 242, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 0
		member name = 'MajorFunction'
	list[1] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 1
		member name = 'MinorFunction'
	list[2] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 2
		member name = 'Flags'
	list[3] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 3
		member name = 'Control'
	list[4] = LF_NESTTYPE, type = 0x1655, <unnamed-type-Parameters>
	list[5] = LF_MEMBER, public, type = 0x1655, offset = 8
		member name = 'Parameters'
	list[6] = LF_MEMBER, public, type = 0x10E4, offset = 40
		member name = 'DeviceObject'
	list[7] = LF_MEMBER, public, type = 0x110A, offset = 48
		member name = 'FileObject'
	list[8] = LF_MEMBER, public, type = 0x126D, offset = 56
		member name = 'CompletionRoutine'
	list[9] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 64
		member name = 'Context'

0x1657 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 10,  field list type 0x1656, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 72, class name = _IO_STACK_LOCATION, unique name = .?AU_IO_STACK_LOCATION@@, UDT(0x00001657)

0x1658 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Create>, unique name = .?AU<unnamed-type-Create>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016b4)

0x1659 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-CreatePipe>, unique name = .?AU<unnamed-type-CreatePipe>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016b3)

0x165a : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-CreateMailslot>, unique name = .?AU<unnamed-type-CreateMailslot>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016b1)

0x165b : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1093

0x165c : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Read>, unique name = .?AU<unnamed-type-Read>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016b0)

0x165d : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Write>, unique name = .?AU<unnamed-type-Write>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016ae)

0x165e : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryDirectory>, unique name = .?AU<unnamed-type-QueryDirectory>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016ad)

0x165f : Length = 182, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-NotifyDirectory>, unique name = .?AU<unnamed-type-NotifyDirectory>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016ab)

0x1660 : Length = 186, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-NotifyDirectoryEx>, unique name = .?AU<unnamed-type-NotifyDirectoryEx>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a9)

0x1661 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryFile>, unique name = .?AU<unnamed-type-QueryFile>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a7)

0x1662 : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetFile>, unique name = .?AU<unnamed-type-SetFile>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a6)

0x1663 : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryEa>, unique name = .?AU<unnamed-type-QueryEa>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a5)

0x1664 : Length = 10, Leaf = 0x1002 LF_POINTER
	const Pointer (__ptr64), Size: 8
	Element type : 0x1093

0x1665 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x107D
	list[1] = 0x1664

0x1666 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetEa>, unique name = .?AU<unnamed-type-SetEa>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a4)

0x1667 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x165B, Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1665

0x1668 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryVolume>, unique name = .?AU<unnamed-type-QueryVolume>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a3)

0x1669 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetVolume>, unique name = .?AU<unnamed-type-SetVolume>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a2)

0x166a : Length = 186, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-FileSystemControl>, unique name = .?AU<unnamed-type-FileSystemControl>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a1)

0x166b : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-LockControl>, unique name = .?AU<unnamed-type-LockControl>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a0)

0x166c : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = T_ULONG(0022)
	list[1] = T_ULONG(0022)
	list[2] = 0x1091
	list[3] = T_NOTYPE(0000)

0x166d : Length = 182, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-DeviceIoControl>, unique name = .?AU<unnamed-type-DeviceIoControl>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169f)

0x166e : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_ULONG(0022), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x166c

0x166f : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QuerySecurity>, unique name = .?AU<unnamed-type-QuerySecurity>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169e)

0x1670 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetSecurity>, unique name = .?AU<unnamed-type-SetSecurity>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169d)

0x1671 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-MountVolume>, unique name = .?AU<unnamed-type-MountVolume>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169c)

0x1672 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-VerifyVolume>, unique name = .?AU<unnamed-type-VerifyVolume>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169b)

0x1673 : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Scsi>, unique name = .?AU<unnamed-type-Scsi>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169a)

0x1674 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryQuota>, unique name = .?AU<unnamed-type-QueryQuota>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001699)

0x1675 : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetQuota>, unique name = .?AU<unnamed-type-SetQuota>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001698)

0x1676 : Length = 190, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryDeviceRelations>, unique name = .?AU<unnamed-type-QueryDeviceRelations>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001697)

0x1677 : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryInterface>, unique name = .?AU<unnamed-type-QueryInterface>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001695)

0x1678 : Length = 186, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-DeviceCapabilities>, unique name = .?AU<unnamed-type-DeviceCapabilities>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001693)

0x1679 : Length = 202, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-FilterResourceRequirements>, unique name = .?AU<unnamed-type-FilterResourceRequirements>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001692)

0x167a : Length = 182, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-ReadWriteConfig>, unique name = .?AU<unnamed-type-ReadWriteConfig>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001691)

0x167b : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetLock>, unique name = .?AU<unnamed-type-SetLock>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001690)

0x167c : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryId>, unique name = .?AU<unnamed-type-QueryId>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168f)

0x167d : Length = 182, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryDeviceText>, unique name = .?AU<unnamed-type-QueryDeviceText>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168e)

0x167e : Length = 186, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-UsageNotification>, unique name = .?AU<unnamed-type-UsageNotification>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168d)

0x167f : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-WaitWake>, unique name = .?AU<unnamed-type-WaitWake>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168c)

0x1680 : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-PowerSequence>, unique name = .?AU<unnamed-type-PowerSequence>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168b)

0x1681 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Power>, unique name = .?AU<unnamed-type-Power>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168a)

0x1682 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-StartDevice>, unique name = .?AU<unnamed-type-StartDevice>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001689)

0x1683 : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-WMI>, unique name = .?AU<unnamed-type-WMI>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001688)

0x1684 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Others>, unique name = .?AU<unnamed-type-Others>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001687)

0x1685 : Length = 2350, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_NESTTYPE, type = 0x1658, <unnamed-type-Create>
	list[1] = LF_MEMBER, public, type = 0x1658, offset = 0
		member name = 'Create'
	list[2] = LF_NESTTYPE, type = 0x1659, <unnamed-type-CreatePipe>
	list[3] = LF_MEMBER, public, type = 0x1659, offset = 0
		member name = 'CreatePipe'
	list[4] = LF_NESTTYPE, type = 0x165A, <unnamed-type-CreateMailslot>
	list[5] = LF_MEMBER, public, type = 0x165A, offset = 0
		member name = 'CreateMailslot'
	list[6] = LF_NESTTYPE, type = 0x165C, <unnamed-type-Read>
	list[7] = LF_MEMBER, public, type = 0x165C, offset = 0
		member name = 'Read'
	list[8] = LF_NESTTYPE, type = 0x165D, <unnamed-type-Write>
	list[9] = LF_MEMBER, public, type = 0x165D, offset = 0
		member name = 'Write'
	list[10] = LF_NESTTYPE, type = 0x165E, <unnamed-type-QueryDirectory>
	list[11] = LF_MEMBER, public, type = 0x165E, offset = 0
		member name = 'QueryDirectory'
	list[12] = LF_NESTTYPE, type = 0x165F, <unnamed-type-NotifyDirectory>
	list[13] = LF_MEMBER, public, type = 0x165F, offset = 0
		member name = 'NotifyDirectory'
	list[14] = LF_NESTTYPE, type = 0x1660, <unnamed-type-NotifyDirectoryEx>
	list[15] = LF_MEMBER, public, type = 0x1660, offset = 0
		member name = 'NotifyDirectoryEx'
	list[16] = LF_NESTTYPE, type = 0x1661, <unnamed-type-QueryFile>
	list[17] = LF_MEMBER, public, type = 0x1661, offset = 0
		member name = 'QueryFile'
	list[18] = LF_NESTTYPE, type = 0x1662, <unnamed-type-SetFile>
	list[19] = LF_MEMBER, public, type = 0x1662, offset = 0
		member name = 'SetFile'
	list[20] = LF_NESTTYPE, type = 0x1663, <unnamed-type-QueryEa>
	list[21] = LF_MEMBER, public, type = 0x1663, offset = 0
		member name = 'QueryEa'
	list[22] = LF_NESTTYPE, type = 0x1666, <unnamed-type-SetEa>
	list[23] = LF_MEMBER, public, type = 0x1666, offset = 0
		member name = 'SetEa'
	list[24] = LF_NESTTYPE, type = 0x1668, <unnamed-type-QueryVolume>
	list[25] = LF_MEMBER, public, type = 0x1668, offset = 0
		member name = 'QueryVolume'
	list[26] = LF_NESTTYPE, type = 0x1669, <unnamed-type-SetVolume>
	list[27] = LF_MEMBER, public, type = 0x1669, offset = 0
		member name = 'SetVolume'
	list[28] = LF_NESTTYPE, type = 0x166A, <unnamed-type-FileSystemControl>
	list[29] = LF_MEMBER, public, type = 0x166A, offset = 0
		member name = 'FileSystemControl'
	list[30] = LF_NESTTYPE, type = 0x166B, <unnamed-type-LockControl>
	list[31] = LF_MEMBER, public, type = 0x166B, offset = 0
		member name = 'LockControl'
	list[32] = LF_NESTTYPE, type = 0x166D, <unnamed-type-DeviceIoControl>
	list[33] = LF_MEMBER, public, type = 0x166D, offset = 0
		member name = 'DeviceIoControl'
	list[34] = LF_NESTTYPE, type = 0x166F, <unnamed-type-QuerySecurity>
	list[35] = LF_MEMBER, public, type = 0x166F, offset = 0
		member name = 'QuerySecurity'
	list[36] = LF_NESTTYPE, type = 0x1670, <unnamed-type-SetSecurity>
	list[37] = LF_MEMBER, public, type = 0x1670, offset = 0
		member name = 'SetSecurity'
	list[38] = LF_NESTTYPE, type = 0x1671, <unnamed-type-MountVolume>
	list[39] = LF_MEMBER, public, type = 0x1671, offset = 0
		member name = 'MountVolume'
	list[40] = LF_NESTTYPE, type = 0x1672, <unnamed-type-VerifyVolume>
	list[41] = LF_MEMBER, public, type = 0x1672, offset = 0
		member name = 'VerifyVolume'
	list[42] = LF_NESTTYPE, type = 0x1673, <unnamed-type-Scsi>
	list[43] = LF_MEMBER, public, type = 0x1673, offset = 0
		member name = 'Scsi'
	list[44] = LF_NESTTYPE, type = 0x1674, <unnamed-type-QueryQuota>
	list[45] = LF_MEMBER, public, type = 0x1674, offset = 0
		member name = 'QueryQuota'
	list[46] = LF_NESTTYPE, type = 0x1675, <unnamed-type-SetQuota>
	list[47] = LF_MEMBER, public, type = 0x1675, offset = 0
		member name = 'SetQuota'
	list[48] = LF_NESTTYPE, type = 0x1676, <unnamed-type-QueryDeviceRelations>
	list[49] = LF_MEMBER, public, type = 0x1676, offset = 0
		member name = 'QueryDeviceRelations'
	list[50] = LF_NESTTYPE, type = 0x1677, <unnamed-type-QueryInterface>
	list[51] = LF_MEMBER, public, type = 0x1677, offset = 0
		member name = 'QueryInterface'
	list[52] = LF_NESTTYPE, type = 0x1678, <unnamed-type-DeviceCapabilities>
	list[53] = LF_MEMBER, public, type = 0x1678, offset = 0
		member name = 'DeviceCapabilities'
	list[54] = LF_NESTTYPE, type = 0x1679, <unnamed-type-FilterResourceRequirements>
	list[55] = LF_MEMBER, public, type = 0x1679, offset = 0
		member name = 'FilterResourceRequirements'
	list[56] = LF_NESTTYPE, type = 0x167A, <unnamed-type-ReadWriteConfig>
	list[57] = LF_MEMBER, public, type = 0x167A, offset = 0
		member name = 'ReadWriteConfig'
	list[58] = LF_NESTTYPE, type = 0x167B, <unnamed-type-SetLock>
	list[59] = LF_MEMBER, public, type = 0x167B, offset = 0
		member name = 'SetLock'
	list[60] = LF_NESTTYPE, type = 0x167C, <unnamed-type-QueryId>
	list[61] = LF_MEMBER, public, type = 0x167C, offset = 0
		member name = 'QueryId'
	list[62] = LF_NESTTYPE, type = 0x167D, <unnamed-type-QueryDeviceText>
	list[63] = LF_MEMBER, public, type = 0x167D, offset = 0
		member name = 'QueryDeviceText'
	list[64] = LF_NESTTYPE, type = 0x167E, <unnamed-type-UsageNotification>
	list[65] = LF_MEMBER, public, type = 0x167E, offset = 0
		member name = 'UsageNotification'
	list[66] = LF_NESTTYPE, type = 0x167F, <unnamed-type-WaitWake>
	list[67] = LF_MEMBER, public, type = 0x167F, offset = 0
		member name = 'WaitWake'
	list[68] = LF_NESTTYPE, type = 0x1680, <unnamed-type-PowerSequence>
	list[69] = LF_MEMBER, public, type = 0x1680, offset = 0
		member name = 'PowerSequence'
	list[70] = LF_NESTTYPE, type = 0x1681, <unnamed-type-Power>
	list[71] = LF_MEMBER, public, type = 0x1681, offset = 0
		member name = 'Power'
	list[72] = LF_NESTTYPE, type = 0x1682, <unnamed-type-StartDevice>
	list[73] = LF_MEMBER, public, type = 0x1682, offset = 0
		member name = 'StartDevice'
	list[74] = LF_NESTTYPE, type = 0x1683, <unnamed-type-WMI>
	list[75] = LF_MEMBER, public, type = 0x1683, offset = 0
		member name = 'WMI'
	list[76] = LF_NESTTYPE, type = 0x1684, <unnamed-type-Others>
	list[77] = LF_MEMBER, public, type = 0x1684, offset = 0
		member name = 'Others'

0x1686 : Length = 110, Leaf = 0x1506 LF_UNION
	# members = 78,  field list type 0x1685, NESTED, CONTAINS NESTED, SEALED, Size = 32	,class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>, unique name = .?AT<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001686)

0x1687 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1263, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Others>, unique name = .?AU<unnamed-type-Others>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001687)

0x1688 : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1260, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-WMI>, unique name = .?AU<unnamed-type-WMI>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001688)

0x1689 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x125d, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-StartDevice>, unique name = .?AU<unnamed-type-StartDevice>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001689)

0x168a : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x1257, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Power>, unique name = .?AU<unnamed-type-Power>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168a)

0x168b : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1249, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-PowerSequence>, unique name = .?AU<unnamed-type-PowerSequence>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168b)

0x168c : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1246, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-WaitWake>, unique name = .?AU<unnamed-type-WaitWake>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168c)

0x168d : Length = 186, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1243, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-UsageNotification>, unique name = .?AU<unnamed-type-UsageNotification>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168d)

0x168e : Length = 182, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x123d, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryDeviceText>, unique name = .?AU<unnamed-type-QueryDeviceText>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168e)

0x168f : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x123a, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryId>, unique name = .?AU<unnamed-type-QueryId>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000168f)

0x1690 : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1237, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 1, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetLock>, unique name = .?AU<unnamed-type-SetLock>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001690)

0x1691 : Length = 182, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1234, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-ReadWriteConfig>, unique name = .?AU<unnamed-type-ReadWriteConfig>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001691)

0x1692 : Length = 202, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1230, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-FilterResourceRequirements>, unique name = .?AU<unnamed-type-FilterResourceRequirements>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001692)

0x1693 : Length = 186, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x122d, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-DeviceCapabilities>, unique name = .?AU<unnamed-type-DeviceCapabilities>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001693)

0x1694 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_CLASS_BIND_INFO, unique name = .?AU_WDF_CLASS_BIND_INFO@@, UDT(0x000016d2)

0x1695 : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x122a, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryInterface>, unique name = .?AU<unnamed-type-QueryInterface>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001695)

0x1696 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1694

0x1697 : Length = 190, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1222, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryDeviceRelations>, unique name = .?AU<unnamed-type-QueryDeviceRelations>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001697)

0x1698 : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x11f7, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetQuota>, unique name = .?AU<unnamed-type-SetQuota>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001698)

0x1699 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x121b, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryQuota>, unique name = .?AU<unnamed-type-QueryQuota>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x00001699)

0x169a : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1217, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Scsi>, unique name = .?AU<unnamed-type-Scsi>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169a)

0x169b : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1213, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-VerifyVolume>, unique name = .?AU<unnamed-type-VerifyVolume>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169b)

0x169c : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1211, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-MountVolume>, unique name = .?AU<unnamed-type-MountVolume>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169c)

0x169d : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x120d, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetSecurity>, unique name = .?AU<unnamed-type-SetSecurity>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169d)

0x169e : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x120b, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QuerySecurity>, unique name = .?AU<unnamed-type-QuerySecurity>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169e)

0x169f : Length = 182, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1209, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-DeviceIoControl>, unique name = .?AU<unnamed-type-DeviceIoControl>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x0000169f)

0x16a0 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1207, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-LockControl>, unique name = .?AU<unnamed-type-LockControl>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a0)

0x16a1 : Length = 186, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1205, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-FileSystemControl>, unique name = .?AU<unnamed-type-FileSystemControl>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a1)

0x16a2 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1200, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetVolume>, unique name = .?AU<unnamed-type-SetVolume>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a2)

0x16a3 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1200, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryVolume>, unique name = .?AU<unnamed-type-QueryVolume>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a3)

0x16a4 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x11f7, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 4, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetEa>, unique name = .?AU<unnamed-type-SetEa>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a4)

0x16a5 : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x11f3, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryEa>, unique name = .?AU<unnamed-type-QueryEa>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a5)

0x16a6 : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 7,  field list type 0x11ef, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-SetFile>, unique name = .?AU<unnamed-type-SetFile>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a6)

0x16a7 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x11eb, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryFile>, unique name = .?AU<unnamed-type-QueryFile>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a7)

0x16a8 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x163F
	list[1] = 0x13B6
	list[2] = 0x1696

0x16a9 : Length = 186, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x11e7, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-NotifyDirectoryEx>, unique name = .?AU<unnamed-type-NotifyDirectoryEx>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016a9)

0x16aa : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x16a8

0x16ab : Length = 182, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x11df, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-NotifyDirectory>, unique name = .?AU<unnamed-type-NotifyDirectory>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016ab)

0x16ac : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x16AA

0x16ad : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x11da, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-QueryDirectory>, unique name = .?AU<unnamed-type-QueryDirectory>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016ad)

0x16ae : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x11cb, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Write>, unique name = .?AU<unnamed-type-Write>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016ae)

0x16af : Length = 50, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Major'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'Minor'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Build'

0x16b0 : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x11cb, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Read>, unique name = .?AU<unnamed-type-Read>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016b0)

0x16b1 : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x11c5, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-CreateMailslot>, unique name = .?AU<unnamed-type-CreateMailslot>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016b1)

0x16b2 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x16af, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _WDF_CLASS_VERSION, unique name = .?AU_WDF_CLASS_VERSION@@, UDT(0x000016b2)

0x16b3 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x11bb, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-CreatePipe>, unique name = .?AU<unnamed-type-CreatePipe>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016b3)

0x16b4 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x11af, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_STACK_LOCATION::<unnamed-type-Parameters>::<unnamed-type-Create>, unique name = .?AU<unnamed-type-Create>@<unnamed-type-Parameters>@_IO_STACK_LOCATION@@, UDT(0x000016b4)

0x16b5 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x16a8

0x16b6 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x16B5

0x16b7 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x16B6
	list[1] = 0x163F
	list[2] = 0x13B6
	list[3] = 0x1696

0x16b8 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Generic>, unique name = .?AU<unnamed-type-Generic>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e8)

0x16b9 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x16b7

0x16ba : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Port>, unique name = .?AU<unnamed-type-Port>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e7)

0x16bb : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Interrupt>, unique name = .?AU<unnamed-type-Interrupt>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e6)

0x16bc : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x16B9

0x16bd : Length = 190, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-MessageInterrupt>, unique name = .?AU<unnamed-type-MessageInterrupt>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e2)

0x16be : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory>, unique name = .?AU<unnamed-type-Memory>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016dc)

0x16bf : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Dma>, unique name = .?AU<unnamed-type-Dma>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016da)

0x16c0 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x16af, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _WDF_VERSION, unique name = .?AU_WDF_VERSION@@, UDT(0x000016c0)

0x16c1 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-DmaV3>, unique name = .?AU<unnamed-type-DmaV3>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d8)

0x16c2 : Length = 186, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-DevicePrivate>, unique name = .?AU<unnamed-type-DevicePrivate>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d7)

0x16c3 : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-BusNumber>, unique name = .?AU<unnamed-type-BusNumber>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d6)

0x16c4 : Length = 194, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-DeviceSpecificData>, unique name = .?AU<unnamed-type-DeviceSpecificData>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d5)

0x16c5 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory40>, unique name = .?AU<unnamed-type-Memory40>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d4)

0x16c6 : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x16AC
	list[1] = 0x163F
	list[2] = 0x13B6
	list[3] = 0x1696

0x16c7 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory48>, unique name = .?AU<unnamed-type-Memory48>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d3)

0x16c8 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x16c6

0x16c9 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory64>, unique name = .?AU<unnamed-type-Memory64>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d1)

0x16ca : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x16C8

0x16cb : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Connection>, unique name = .?AU<unnamed-type-Connection>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016cf)

0x16cc : Length = 778, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_NESTTYPE, type = 0x16B8, <unnamed-type-Generic>
	list[1] = LF_MEMBER, public, type = 0x16B8, offset = 0
		member name = 'Generic'
	list[2] = LF_NESTTYPE, type = 0x16BA, <unnamed-type-Port>
	list[3] = LF_MEMBER, public, type = 0x16BA, offset = 0
		member name = 'Port'
	list[4] = LF_NESTTYPE, type = 0x16BB, <unnamed-type-Interrupt>
	list[5] = LF_MEMBER, public, type = 0x16BB, offset = 0
		member name = 'Interrupt'
	list[6] = LF_NESTTYPE, type = 0x16BD, <unnamed-type-MessageInterrupt>
	list[7] = LF_MEMBER, public, type = 0x16BD, offset = 0
		member name = 'MessageInterrupt'
	list[8] = LF_NESTTYPE, type = 0x16BE, <unnamed-type-Memory>
	list[9] = LF_MEMBER, public, type = 0x16BE, offset = 0
		member name = 'Memory'
	list[10] = LF_NESTTYPE, type = 0x16BF, <unnamed-type-Dma>
	list[11] = LF_MEMBER, public, type = 0x16BF, offset = 0
		member name = 'Dma'
	list[12] = LF_NESTTYPE, type = 0x16C1, <unnamed-type-DmaV3>
	list[13] = LF_MEMBER, public, type = 0x16C1, offset = 0
		member name = 'DmaV3'
	list[14] = LF_NESTTYPE, type = 0x16C2, <unnamed-type-DevicePrivate>
	list[15] = LF_MEMBER, public, type = 0x16C2, offset = 0
		member name = 'DevicePrivate'
	list[16] = LF_NESTTYPE, type = 0x16C3, <unnamed-type-BusNumber>
	list[17] = LF_MEMBER, public, type = 0x16C3, offset = 0
		member name = 'BusNumber'
	list[18] = LF_NESTTYPE, type = 0x16C4, <unnamed-type-DeviceSpecificData>
	list[19] = LF_MEMBER, public, type = 0x16C4, offset = 0
		member name = 'DeviceSpecificData'
	list[20] = LF_NESTTYPE, type = 0x16C5, <unnamed-type-Memory40>
	list[21] = LF_MEMBER, public, type = 0x16C5, offset = 0
		member name = 'Memory40'
	list[22] = LF_NESTTYPE, type = 0x16C7, <unnamed-type-Memory48>
	list[23] = LF_MEMBER, public, type = 0x16C7, offset = 0
		member name = 'Memory48'
	list[24] = LF_NESTTYPE, type = 0x16C9, <unnamed-type-Memory64>
	list[25] = LF_MEMBER, public, type = 0x16C9, offset = 0
		member name = 'Memory64'
	list[26] = LF_NESTTYPE, type = 0x16CB, <unnamed-type-Connection>
	list[27] = LF_MEMBER, public, type = 0x16CB, offset = 0
		member name = 'Connection'

0x16cd : Length = 118, Leaf = 0x1506 LF_UNION
	# members = 28,  field list type 0x16cc, NESTED, CONTAINS NESTED, SEALED, Size = 16	,class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>, unique name = .?AT<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016cd)

0x16ce : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_CLASS_VERSION, unique name = .?AU_WDF_CLASS_VERSION@@, UDT(0x000016b2)

0x16cf : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 6,  field list type 0x10ab, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Connection>, unique name = .?AU<unnamed-type-Connection>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016cf)

0x16d0 : Length = 218, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = T_64PWCHAR(0671), offset = 8
		member name = 'ClassName'
	list[2] = LF_MEMBER, public, type = 0x16CE, offset = 16
		member name = 'Version'
	list[3] = LF_MEMBER, public, type = 0x1637, offset = 32
		member name = 'FunctionTable'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 40
		member name = 'FunctionTableCount'
	list[5] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 48
		member name = 'ClassBindInfo'
	list[6] = LF_MEMBER, public, type = 0x16CA, offset = 56
		member name = 'ClientBindClass'
	list[7] = LF_MEMBER, public, type = 0x16BC, offset = 64
		member name = 'ClientUnbindClass'
	list[8] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 72
		member name = 'ClassModule'

0x16d1 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x10a7, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory64>, unique name = .?AU<unnamed-type-Memory64>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d1)

0x16d2 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 9,  field list type 0x16d0, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 80, class name = _WDF_CLASS_BIND_INFO, unique name = .?AU_WDF_CLASS_BIND_INFO@@, UDT(0x000016d2)

0x16d3 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x10a2, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory48>, unique name = .?AU<unnamed-type-Memory48>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d3)

0x16d4 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x109f, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory40>, unique name = .?AU<unnamed-type-Memory40>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d4)

0x16d5 : Length = 194, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x109b, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-DeviceSpecificData>, unique name = .?AU<unnamed-type-DeviceSpecificData>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d5)

0x16d6 : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1096, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-BusNumber>, unique name = .?AU<unnamed-type-BusNumber>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d6)

0x16d7 : Length = 186, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1092, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-DevicePrivate>, unique name = .?AU<unnamed-type-DevicePrivate>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d7)

0x16d8 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 6,  field list type 0x108b, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-DmaV3>, unique name = .?AU<unnamed-type-DmaV3>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016d8)

0x16d9 : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x163F

0x16da : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x1086, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Dma>, unique name = .?AU<unnamed-type-Dma>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016da)

0x16db : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x16d9

0x16dc : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1075, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory>, unique name = .?AU<unnamed-type-Memory>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016dc)

0x16dd : Length = 258, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-MessageInterrupt>::<unnamed-tag>::<unnamed-type-Raw>, unique name = .?AU<unnamed-type-Raw>@<unnamed-tag>@<unnamed-type-MessageInterrupt>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e5)

0x16de : Length = 10, Leaf = 0x1002 LF_POINTER
	const Pointer (__ptr64), Size: 8
	Element type : 0x1694

0x16df : Length = 274, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-MessageInterrupt>::<unnamed-tag>::<unnamed-type-Translated>, unique name = .?AU<unnamed-type-Translated>@<unnamed-tag>@<unnamed-type-MessageInterrupt>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e4)

0x16e0 : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x16DD, offset = 0
		member name = 'Raw'
	list[1] = LF_MEMBER, public, type = 0x16DF, offset = 0
		member name = 'Translated'

0x16e1 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x107D
	list[1] = 0x16DE

0x16e2 : Length = 190, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x16e0, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-MessageInterrupt>, unique name = .?AU<unnamed-type-MessageInterrupt>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e2)

0x16e3 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = 0x1696, Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x16e1

0x16e4 : Length = 274, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x107a, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-MessageInterrupt>::<unnamed-tag>::<unnamed-type-Translated>, unique name = .?AU<unnamed-type-Translated>@<unnamed-tag>@<unnamed-type-MessageInterrupt>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e4)

0x16e5 : Length = 258, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x107e, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-MessageInterrupt>::<unnamed-tag>::<unnamed-type-Raw>, unique name = .?AU<unnamed-type-Raw>@<unnamed-tag>@<unnamed-type-MessageInterrupt>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e5)

0x16e6 : Length = 178, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x107a, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Interrupt>, unique name = .?AU<unnamed-type-Interrupt>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e6)

0x16e7 : Length = 166, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1075, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Port>, unique name = .?AU<unnamed-type-Port>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e7)

0x16e8 : Length = 174, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1075, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Generic>, unique name = .?AU<unnamed-type-Generic>@<unnamed-type-u>@_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x000016e8)

0x16e9 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x16d9

0x16ea : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x13B6

0x16eb : Length = 22, Leaf = 0x1201 LF_ARGLIST argument count = 4
	list[0] = 0x10E1
	list[1] = 0x108A
	list[2] = 0x163F
	list[3] = 0x16EA

0x16ec : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 4, Arg list type = 0x16eb

0x16ed : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x16EC

0x16ee : Length = 150, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Port>, unique name = .?AU<unnamed-type-Port>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001709)

0x16ef : Length = 154, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory>, unique name = .?AU<unnamed-type-Memory>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001708)

0x16f0 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Interrupt>, unique name = .?AU<unnamed-type-Interrupt>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001707)

0x16f1 : Length = 150, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Dma>, unique name = .?AU<unnamed-type-Dma>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001706)

0x16f2 : Length = 154, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-DmaV3>, unique name = .?AU<unnamed-type-DmaV3>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001705)

0x16f3 : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Generic>, unique name = .?AU<unnamed-type-Generic>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001704)

0x16f4 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-DevicePrivate>, unique name = .?AU<unnamed-type-DevicePrivate>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001703)

0x16f5 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-BusNumber>, unique name = .?AU<unnamed-type-BusNumber>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001702)

0x16f6 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-ConfigData>, unique name = .?AU<unnamed-type-ConfigData>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001701)

0x16f7 : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory40>, unique name = .?AU<unnamed-type-Memory40>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001700)

0x16f8 : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory48>, unique name = .?AU<unnamed-type-Memory48>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x000016ff)

0x16f9 : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory64>, unique name = .?AU<unnamed-type-Memory64>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x000016fe)

0x16fa : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Connection>, unique name = .?AU<unnamed-type-Connection>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x000016fd)

0x16fb : Length = 694, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_NESTTYPE, type = 0x16EE, <unnamed-type-Port>
	list[1] = LF_MEMBER, public, type = 0x16EE, offset = 0
		member name = 'Port'
	list[2] = LF_NESTTYPE, type = 0x16EF, <unnamed-type-Memory>
	list[3] = LF_MEMBER, public, type = 0x16EF, offset = 0
		member name = 'Memory'
	list[4] = LF_NESTTYPE, type = 0x16F0, <unnamed-type-Interrupt>
	list[5] = LF_MEMBER, public, type = 0x16F0, offset = 0
		member name = 'Interrupt'
	list[6] = LF_NESTTYPE, type = 0x16F1, <unnamed-type-Dma>
	list[7] = LF_MEMBER, public, type = 0x16F1, offset = 0
		member name = 'Dma'
	list[8] = LF_NESTTYPE, type = 0x16F2, <unnamed-type-DmaV3>
	list[9] = LF_MEMBER, public, type = 0x16F2, offset = 0
		member name = 'DmaV3'
	list[10] = LF_NESTTYPE, type = 0x16F3, <unnamed-type-Generic>
	list[11] = LF_MEMBER, public, type = 0x16F3, offset = 0
		member name = 'Generic'
	list[12] = LF_NESTTYPE, type = 0x16F4, <unnamed-type-DevicePrivate>
	list[13] = LF_MEMBER, public, type = 0x16F4, offset = 0
		member name = 'DevicePrivate'
	list[14] = LF_NESTTYPE, type = 0x16F5, <unnamed-type-BusNumber>
	list[15] = LF_MEMBER, public, type = 0x16F5, offset = 0
		member name = 'BusNumber'
	list[16] = LF_NESTTYPE, type = 0x16F6, <unnamed-type-ConfigData>
	list[17] = LF_MEMBER, public, type = 0x16F6, offset = 0
		member name = 'ConfigData'
	list[18] = LF_NESTTYPE, type = 0x16F7, <unnamed-type-Memory40>
	list[19] = LF_MEMBER, public, type = 0x16F7, offset = 0
		member name = 'Memory40'
	list[20] = LF_NESTTYPE, type = 0x16F8, <unnamed-type-Memory48>
	list[21] = LF_MEMBER, public, type = 0x16F8, offset = 0
		member name = 'Memory48'
	list[22] = LF_NESTTYPE, type = 0x16F9, <unnamed-type-Memory64>
	list[23] = LF_MEMBER, public, type = 0x16F9, offset = 0
		member name = 'Memory64'
	list[24] = LF_NESTTYPE, type = 0x16FA, <unnamed-type-Connection>
	list[25] = LF_MEMBER, public, type = 0x16FA, offset = 0
		member name = 'Connection'

0x16fc : Length = 102, Leaf = 0x1506 LF_UNION
	# members = 26,  field list type 0x16fb, NESTED, CONTAINS NESTED, SEALED, Size = 24	,class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>, unique name = .?AT<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x000016fc)

0x16fd : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 6,  field list type 0x10ab, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Connection>, unique name = .?AU<unnamed-type-Connection>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x000016fd)

0x16fe : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1196, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory64>, unique name = .?AU<unnamed-type-Memory64>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x000016fe)

0x16ff : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1194, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory48>, unique name = .?AU<unnamed-type-Memory48>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x000016ff)

0x1700 : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1192, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory40>, unique name = .?AU<unnamed-type-Memory40>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001700)

0x1701 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 3,  field list type 0x118e, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-ConfigData>, unique name = .?AU<unnamed-type-ConfigData>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001701)

0x1702 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x118b, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-BusNumber>, unique name = .?AU<unnamed-type-BusNumber>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001702)

0x1703 : Length = 170, Leaf = 0x1505 LF_STRUCTURE
	# members = 1,  field list type 0x1092, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-DevicePrivate>, unique name = .?AU<unnamed-type-DevicePrivate>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001703)

0x1704 : Length = 158, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1174, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Generic>, unique name = .?AU<unnamed-type-Generic>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001704)

0x1705 : Length = 154, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1188, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-DmaV3>, unique name = .?AU<unnamed-type-DmaV3>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001705)

0x1706 : Length = 150, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1184, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Dma>, unique name = .?AU<unnamed-type-Dma>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001706)

0x1707 : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x1180, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Interrupt>, unique name = .?AU<unnamed-type-Interrupt>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001707)

0x1708 : Length = 154, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1174, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Memory>, unique name = .?AU<unnamed-type-Memory>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001708)

0x1709 : Length = 150, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1174, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _IO_RESOURCE_DESCRIPTOR::<unnamed-type-u>::<unnamed-type-Port>, unique name = .?AU<unnamed-type-Port>@<unnamed-type-u>@_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001709)

0x170a : Length = 94, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _LARGE_INTEGER::<unnamed-type-u>, unique name = .?AU<unnamed-type-u>@_LARGE_INTEGER@@, UDT(0x0000170d)

0x170b : Length = 102, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'LowPart'
	list[1] = LF_MEMBER, public, type = T_LONG(0012), offset = 4
		member name = 'HighPart'
	list[2] = LF_NESTTYPE, type = 0x170A, <unnamed-type-u>
	list[3] = LF_MEMBER, public, type = 0x170A, offset = 0
		member name = 'u'
	list[4] = LF_MEMBER, public, type = T_QUAD(0013), offset = 0
		member name = 'QuadPart'

0x170c : Length = 50, Leaf = 0x1506 LF_UNION
	# members = 5,  field list type 0x170b, CONTAINS NESTED, SEALED, Size = 8	,class name = _LARGE_INTEGER, unique name = .?AT_LARGE_INTEGER@@, UDT(0x0000170c)

0x170d : Length = 94, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x12e4, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 8, class name = _LARGE_INTEGER::<unnamed-type-u>, unique name = .?AU<unnamed-type-u>@_LARGE_INTEGER@@, UDT(0x0000170d)

0x170e : Length = 50, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1126, offset = 0
		member name = 'InterfaceType'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'InterfaceSize'

0x170f : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x170e, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _WDF_INTERFACE_HEADER, unique name = .?AU_WDF_INTERFACE_HEADER@@, UDT(0x0000170f)

0x1710 : Length = 70, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_INTERFACE_HEADER, unique name = .?AU_WDF_INTERFACE_HEADER@@, UDT(0x0000170f)

0x1711 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1710

0x1712 : Length = 90, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, Size = 0	,class name = _IRP::<unnamed-type-AssociatedIrp>, unique name = .?AT<unnamed-type-AssociatedIrp>@_IRP@@, UDT(0x0000171f)

0x1713 : Length = 78, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, Size = 0	,class name = _IRP::<unnamed-type-Overlay>, unique name = .?AT<unnamed-type-Overlay>@_IRP@@, UDT(0x0000171d)

0x1714 : Length = 70, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, Size = 0	,class name = _IRP::<unnamed-type-Tail>, unique name = .?AT<unnamed-type-Tail>@_IRP@@, UDT(0x00001719)

0x1715 : Length = 598, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_SHORT(0011), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = 0x110E, offset = 8
		member name = 'MdlAddress'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'Flags'
	list[4] = LF_NESTTYPE, type = 0x1712, <unnamed-type-AssociatedIrp>
	list[5] = LF_MEMBER, public, type = 0x1712, offset = 24
		member name = 'AssociatedIrp'
	list[6] = LF_MEMBER, public, type = 0x12B5, offset = 32
		member name = 'ThreadListEntry'
	list[7] = LF_MEMBER, public, type = 0x1118, offset = 48
		member name = 'IoStatus'
	list[8] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 64
		member name = 'RequestorMode'
	list[9] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 65
		member name = 'PendingReturned'
	list[10] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 66
		member name = 'StackCount'
	list[11] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 67
		member name = 'CurrentLocation'
	list[12] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 68
		member name = 'Cancel'
	list[13] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 69
		member name = 'CancelIrql'
	list[14] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 70
		member name = 'ApcEnvironment'
	list[15] = LF_MEMBER, public, type = T_UCHAR(0020), offset = 71
		member name = 'AllocationFlags'
	list[16] = LF_MEMBER, public, type = 0x111A, offset = 72
		member name = 'UserIosb'
	list[17] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 72
		member name = 'IoRingContext'
	list[18] = LF_MEMBER, public, type = 0x12CE, offset = 80
		member name = 'UserEvent'
	list[19] = LF_NESTTYPE, type = 0x1713, <unnamed-type-Overlay>
	list[20] = LF_MEMBER, public, type = 0x1713, offset = 88
		member name = 'Overlay'
	list[21] = LF_MEMBER, public, type = 0x1302, offset = 104
		member name = 'CancelRoutine'
	list[22] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 112
		member name = 'UserBuffer'
	list[23] = LF_NESTTYPE, type = 0x1714, <unnamed-type-Tail>
	list[24] = LF_MEMBER, public, type = 0x1714, offset = 120
		member name = 'Tail'

0x1716 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 25,  field list type 0x1715, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 208, class name = _IRP, unique name = .?AU_IRP@@, UDT(0x00001716)

0x1717 : Length = 126, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IRP::<unnamed-type-Tail>::<unnamed-type-Overlay>, unique name = .?AU<unnamed-type-Overlay>@<unnamed-type-Tail>@_IRP@@, UDT(0x0000171a)

0x1718 : Length = 94, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_NESTTYPE, type = 0x1717, <unnamed-type-Overlay>
	list[1] = LF_MEMBER, public, type = 0x1717, offset = 0
		member name = 'Overlay'
	list[2] = LF_MEMBER, public, type = 0x137B, offset = 0
		member name = 'Apc'
	list[3] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 0
		member name = 'CompletionKey'

0x1719 : Length = 70, Leaf = 0x1506 LF_UNION
	# members = 4,  field list type 0x1718, NESTED, CONTAINS NESTED, SEALED, Size = 88	,class name = _IRP::<unnamed-type-Tail>, unique name = .?AT<unnamed-type-Tail>@_IRP@@, UDT(0x00001719)

0x171a : Length = 126, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x1376, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 80, class name = _IRP::<unnamed-type-Tail>::<unnamed-type-Overlay>, unique name = .?AU<unnamed-type-Overlay>@<unnamed-type-Tail>@_IRP@@, UDT(0x0000171a)

0x171b : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IRP::<unnamed-type-Overlay>::<unnamed-type-AsynchronousParameters>, unique name = .?AU<unnamed-type-AsynchronousParameters>@<unnamed-type-Overlay>@_IRP@@, UDT(0x0000171e)

0x171c : Length = 114, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_NESTTYPE, type = 0x171B, <unnamed-type-AsynchronousParameters>
	list[1] = LF_MEMBER, public, type = 0x171B, offset = 0
		member name = 'AsynchronousParameters'
	list[2] = LF_MEMBER, public, type = 0x1073, offset = 0
		member name = 'AllocationSize'

0x171d : Length = 78, Leaf = 0x1506 LF_UNION
	# members = 3,  field list type 0x171c, NESTED, CONTAINS NESTED, SEALED, Size = 16	,class name = _IRP::<unnamed-type-Overlay>, unique name = .?AT<unnamed-type-Overlay>@_IRP@@, UDT(0x0000171d)

0x171e : Length = 162, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x135e, NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 16, class name = _IRP::<unnamed-type-Overlay>::<unnamed-type-AsynchronousParameters>, unique name = .?AU<unnamed-type-AsynchronousParameters>@<unnamed-type-Overlay>@_IRP@@, UDT(0x0000171e)

0x171f : Length = 90, Leaf = 0x1506 LF_UNION
	# members = 3,  field list type 0x134c, NESTED, SEALED, Size = 8	,class name = _IRP::<unnamed-type-AssociatedIrp>, unique name = .?AT<unnamed-type-AssociatedIrp>@_IRP@@, UDT(0x0000171f)

0x1720 : Length = 42, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = 0x1710, offset = 0
		member name = 'Header'
	list[1] = LF_MEMBER, public, type = 0x1642, offset = 16
		member name = 'Notify'

0x1721 : Length = 114, Leaf = 0x1505 LF_STRUCTURE
	# members = 2,  field list type 0x1720, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 24, class name = _WDF_LOADER_INTERFACE_DRIVER_ENTRY_FAILURE, unique name = .?AU_WDF_LOADER_INTERFACE_DRIVER_ENTRY_FAILURE@@, UDT(0x00001721)

0x1722 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x12b2

0x1723 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1722

0x1724 : Length = 114, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _WDF_LOADER_INTERFACE_DRIVER_ENTRY_FAILURE, unique name = .?AU_WDF_LOADER_INTERFACE_DRIVER_ENTRY_FAILURE@@, UDT(0x00001721)

0x1725 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1724

0x1726 : Length = 18, Leaf = 0x1201 LF_ARGLIST argument count = 3
	list[0] = 0x108A
	list[1] = 0x163F
	list[2] = 0x13B6

0x1727 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 3, Arg list type = 0x1726

0x1728 : Length = 10, Leaf = 0x1002 LF_POINTER
	Pointer (__ptr64), Size: 8
	Element type : 0x1727

0x1729 : Length = 94, Leaf = 0x1506 LF_UNION
	# members = 0,  field list type 0x0000, NESTED, FORWARD REF, Size = 0	,class name = _DEVICE_OBJECT::<unnamed-type-Queue>, unique name = .?AT<unnamed-type-Queue>@_DEVICE_OBJECT@@, UDT(0x0000172c)

0x172a : Length = 610, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_SHORT(0011), offset = 0
		member name = 'Type'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Size'
	list[2] = LF_MEMBER, public, type = T_LONG(0012), offset = 4
		member name = 'ReferenceCount'
	list[3] = LF_MEMBER, public, type = 0x10E1, offset = 8
		member name = 'DriverObject'
	list[4] = LF_MEMBER, public, type = 0x10E4, offset = 16
		member name = 'NextDevice'
	list[5] = LF_MEMBER, public, type = 0x10E4, offset = 24
		member name = 'AttachedDevice'
	list[6] = LF_MEMBER, public, type = 0x1130, offset = 32
		member name = 'CurrentIrp'
	list[7] = LF_MEMBER, public, type = 0x148E, offset = 40
		member name = 'Timer'
	list[8] = LF_MEMBER, public, type = T_ULONG(0022), offset = 48
		member name = 'Flags'
	list[9] = LF_MEMBER, public, type = T_ULONG(0022), offset = 52
		member name = 'Characteristics'
	list[10] = LF_MEMBER, public, type = 0x1210, offset = 56
		member name = 'Vpb'
	list[11] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 64
		member name = 'DeviceExtension'
	list[12] = LF_MEMBER, public, type = T_ULONG(0022), offset = 72
		member name = 'DeviceType'
	list[13] = LF_MEMBER, public, type = T_RCHAR(0070), offset = 76
		member name = 'StackSize'
	list[14] = LF_NESTTYPE, type = 0x1729, <unnamed-type-Queue>
	list[15] = LF_MEMBER, public, type = 0x1729, offset = 80
		member name = 'Queue'
	list[16] = LF_MEMBER, public, type = T_ULONG(0022), offset = 152
		member name = 'AlignmentRequirement'
	list[17] = LF_MEMBER, public, type = 0x14BD, offset = 160
		member name = 'DeviceQueue'
	list[18] = LF_MEMBER, public, type = 0x1346, offset = 200
		member name = 'Dpc'
	list[19] = LF_MEMBER, public, type = T_ULONG(0022), offset = 264
		member name = 'ActiveThreadCount'
	list[20] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 272
		member name = 'SecurityDescriptor'
	list[21] = LF_MEMBER, public, type = 0x12CC, offset = 280
		member name = 'DeviceLock'
	list[22] = LF_MEMBER, public, type = T_USHORT(0021), offset = 304
		member name = 'SectorSize'
	list[23] = LF_MEMBER, public, type = T_USHORT(0021), offset = 306
		member name = 'Spare1'
	list[24] = LF_MEMBER, public, type = 0x14C0, offset = 312
		member name = 'DeviceObjectExtension'
	list[25] = LF_MEMBER, public, type = T_64PVOID(0603), offset = 320
		member name = 'Reserved'

0x172b : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 26,  field list type 0x172a, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 336, class name = _DEVICE_OBJECT, unique name = .?AU_DEVICE_OBJECT@@, UDT(0x0000172b)

0x172c : Length = 94, Leaf = 0x1506 LF_UNION
	# members = 2,  field list type 0x14ba, NESTED, SEALED, Size = 72	,class name = _DEVICE_OBJECT::<unnamed-type-Queue>, unique name = .?AT<unnamed-type-Queue>@_DEVICE_OBJECT@@, UDT(0x0000172c)

0x172d : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x1725

0x172e : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x172d

0x172f : Length = 10, Leaf = 0x1201 LF_ARGLIST argument count = 1
	list[0] = 0x1711

0x1730 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_LONG(0012), Call type = C Near
	Func attr = none
	# Parms = 1, Arg list type = 0x172f

0x1731 : Length = 14, Leaf = 0x1201 LF_ARGLIST argument count = 2
	list[0] = 0x108A
	list[1] = 0x10AA

0x1732 : Length = 14, Leaf = 0x1008 LF_PROCEDURE
	Return type = T_VOID(0003), Call type = C Near
	Func attr = none
	# Parms = 2, Arg list type = 0x1731

0x1733 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_WCHAR(0071)
	Index type = T_UQUAD(0023)
	length = 520
	Name = 

0x1734 : Length = 14, Leaf = 0x1503 LF_ARRAY
	Element type = T_64PVOID(0603)
	Index type = T_UQUAD(0023)
	length = 0
	Name = 

0x1735 : Length = 94, Leaf = 0x1505 LF_STRUCTURE
	# members = 0,  field list type 0x0000, FORWARD REF, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 0, class name = _IMAGE_LOAD_CONFIG_CODE_INTEGRITY, unique name = .?AU_IMAGE_LOAD_CONFIG_CODE_INTEGRITY@@, UDT(0x00001739)

0x1736 : Length = 1654, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_ULONG(0022), offset = 0
		member name = 'Size'
	list[1] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'TimeDateStamp'
	list[2] = LF_MEMBER, public, type = T_USHORT(0021), offset = 8
		member name = 'MajorVersion'
	list[3] = LF_MEMBER, public, type = T_USHORT(0021), offset = 10
		member name = 'MinorVersion'
	list[4] = LF_MEMBER, public, type = T_ULONG(0022), offset = 12
		member name = 'GlobalFlagsClear'
	list[5] = LF_MEMBER, public, type = T_ULONG(0022), offset = 16
		member name = 'GlobalFlagsSet'
	list[6] = LF_MEMBER, public, type = T_ULONG(0022), offset = 20
		member name = 'CriticalSectionDefaultTimeout'
	list[7] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 24
		member name = 'DeCommitFreeBlockThreshold'
	list[8] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 32
		member name = 'DeCommitTotalFreeThreshold'
	list[9] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 40
		member name = 'LockPrefixTable'
	list[10] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 48
		member name = 'MaximumAllocationSize'
	list[11] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 56
		member name = 'VirtualMemoryThreshold'
	list[12] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 64
		member name = 'ProcessAffinityMask'
	list[13] = LF_MEMBER, public, type = T_ULONG(0022), offset = 72
		member name = 'ProcessHeapFlags'
	list[14] = LF_MEMBER, public, type = T_USHORT(0021), offset = 76
		member name = 'CSDVersion'
	list[15] = LF_MEMBER, public, type = T_USHORT(0021), offset = 78
		member name = 'DependentLoadFlags'
	list[16] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 80
		member name = 'EditList'
	list[17] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 88
		member name = 'SecurityCookie'
	list[18] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 96
		member name = 'SEHandlerTable'
	list[19] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 104
		member name = 'SEHandlerCount'
	list[20] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 112
		member name = 'GuardCFCheckFunctionPointer'
	list[21] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 120
		member name = 'GuardCFDispatchFunctionPointer'
	list[22] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 128
		member name = 'GuardCFFunctionTable'
	list[23] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 136
		member name = 'GuardCFFunctionCount'
	list[24] = LF_MEMBER, public, type = T_ULONG(0022), offset = 144
		member name = 'GuardFlags'
	list[25] = LF_MEMBER, public, type = 0x1735, offset = 148
		member name = 'CodeIntegrity'
	list[26] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 160
		member name = 'GuardAddressTakenIatEntryTable'
	list[27] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 168
		member name = 'GuardAddressTakenIatEntryCount'
	list[28] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 176
		member name = 'GuardLongJumpTargetTable'
	list[29] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 184
		member name = 'GuardLongJumpTargetCount'
	list[30] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 192
		member name = 'DynamicValueRelocTable'
	list[31] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 200
		member name = 'CHPEMetadataPointer'
	list[32] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 208
		member name = 'GuardRFFailureRoutine'
	list[33] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 216
		member name = 'GuardRFFailureRoutineFunctionPointer'
	list[34] = LF_MEMBER, public, type = T_ULONG(0022), offset = 224
		member name = 'DynamicValueRelocTableOffset'
	list[35] = LF_MEMBER, public, type = T_USHORT(0021), offset = 228
		member name = 'DynamicValueRelocTableSection'
	list[36] = LF_MEMBER, public, type = T_USHORT(0021), offset = 230
		member name = 'Reserved2'
	list[37] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 232
		member name = 'GuardRFVerifyStackPointerFunctionPointer'
	list[38] = LF_MEMBER, public, type = T_ULONG(0022), offset = 240
		member name = 'HotPatchTableOffset'
	list[39] = LF_MEMBER, public, type = T_ULONG(0022), offset = 244
		member name = 'Reserved3'
	list[40] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 248
		member name = 'EnclaveConfigurationPointer'
	list[41] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 256
		member name = 'VolatileMetadataPointer'
	list[42] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 264
		member name = 'GuardEHContinuationTable'
	list[43] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 272
		member name = 'GuardEHContinuationCount'
	list[44] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 280
		member name = 'GuardXFGCheckFunctionPointer'
	list[45] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 288
		member name = 'GuardXFGDispatchFunctionPointer'
	list[46] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 296
		member name = 'GuardXFGTableDispatchFunctionPointer'
	list[47] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 304
		member name = 'CastGuardOsDeterminedFailureMode'
	list[48] = LF_MEMBER, public, type = T_UQUAD(0023), offset = 312
		member name = 'GuardMemcpyFunctionPointer'

0x1737 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 49,  field list type 0x1736, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 320, class name = _IMAGE_LOAD_CONFIG_DIRECTORY64, unique name = .?AU_IMAGE_LOAD_CONFIG_DIRECTORY64@@, UDT(0x00001737)

0x1738 : Length = 82, Leaf = 0x1203 LF_FIELDLIST
	list[0] = LF_MEMBER, public, type = T_USHORT(0021), offset = 0
		member name = 'Flags'
	list[1] = LF_MEMBER, public, type = T_USHORT(0021), offset = 2
		member name = 'Catalog'
	list[2] = LF_MEMBER, public, type = T_ULONG(0022), offset = 4
		member name = 'CatalogOffset'
	list[3] = LF_MEMBER, public, type = T_ULONG(0022), offset = 8
		member name = 'Reserved'

0x1739 : Length = 94, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x1738, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 12, class name = _IMAGE_LOAD_CONFIG_CODE_INTEGRITY, unique name = .?AU_IMAGE_LOAD_CONFIG_CODE_INTEGRITY@@, UDT(0x00001739)


*** TYPES Mismatch Warnings

WARNING: UDT mismatch for _CM_PARTIAL_RESOURCE_DESCRIPTOR
<<<<<<
0x10b6 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 4,  field list type 0x10b4, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 20, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR, unique name = .?AU_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x00001632)

******
0x1632 : Length = 90, Leaf = 0x1505 LF_STRUCTURE
	# members = 5,  field list type 0x1631, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 20, class name = _CM_PARTIAL_RESOURCE_DESCRIPTOR, unique name = .?AU_CM_PARTIAL_RESOURCE_DESCRIPTOR@@, UDT(0x00001632)

>>>>>>

WARNING: UDT mismatch for _ACCESS_STATE
<<<<<<
0x1155 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 16,  field list type 0x1153, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 160, class name = _ACCESS_STATE, unique name = .?AU_ACCESS_STATE@@, UDT(0x00001650)

******
0x1650 : Length = 54, Leaf = 0x1505 LF_STRUCTURE
	# members = 17,  field list type 0x164e, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 160, class name = _ACCESS_STATE, unique name = .?AU_ACCESS_STATE@@, UDT(0x00001650)

>>>>>>

WARNING: UDT mismatch for _IO_RESOURCE_DESCRIPTOR
<<<<<<
0x119e : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 7,  field list type 0x119c, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_RESOURCE_DESCRIPTOR, unique name = .?AU_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001635)

******
0x1635 : Length = 74, Leaf = 0x1505 LF_STRUCTURE
	# members = 8,  field list type 0x1634, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 32, class name = _IO_RESOURCE_DESCRIPTOR, unique name = .?AU_IO_RESOURCE_DESCRIPTOR@@, UDT(0x00001635)

>>>>>>

WARNING: UDT mismatch for _IO_STACK_LOCATION
<<<<<<
0x1271 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 9,  field list type 0x126f, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 72, class name = _IO_STACK_LOCATION, unique name = .?AU_IO_STACK_LOCATION@@, UDT(0x00001657)

******
0x1657 : Length = 66, Leaf = 0x1505 LF_STRUCTURE
	# members = 10,  field list type 0x1656, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 72, class name = _IO_STACK_LOCATION, unique name = .?AU_IO_STACK_LOCATION@@, UDT(0x00001657)

>>>>>>

WARNING: UDT mismatch for _LARGE_INTEGER
<<<<<<
0x12eb : Length = 50, Leaf = 0x1506 LF_UNION
	# members = 4,  field list type 0x12e9, SEALED, Size = 8	,class name = _LARGE_INTEGER, unique name = .?AT_LARGE_INTEGER@@, UDT(0x0000170c)

******
0x170c : Length = 50, Leaf = 0x1506 LF_UNION
	# members = 5,  field list type 0x170b, CONTAINS NESTED, SEALED, Size = 8	,class name = _LARGE_INTEGER, unique name = .?AT_LARGE_INTEGER@@, UDT(0x0000170c)

>>>>>>

WARNING: UDT mismatch for _IRP
<<<<<<
0x1386 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 22,  field list type 0x1382, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 208, class name = _IRP, unique name = .?AU_IRP@@, UDT(0x00001716)

******
0x1716 : Length = 38, Leaf = 0x1505 LF_STRUCTURE
	# members = 25,  field list type 0x1715, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 208, class name = _IRP, unique name = .?AU_IRP@@, UDT(0x00001716)

>>>>>>

WARNING: UDT mismatch for _DEVICE_OBJECT
<<<<<<
0x14c3 : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 25,  field list type 0x14c1, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 336, class name = _DEVICE_OBJECT, unique name = .?AU_DEVICE_OBJECT@@, UDT(0x0000172b)

******
0x172b : Length = 58, Leaf = 0x1505 LF_STRUCTURE
	# members = 26,  field list type 0x172a, CONTAINS NESTED, 
	Derivation list type 0x0000, VT shape type 0x0000
	Size = 336, class name = _DEVICE_OBJECT, unique name = .?AU_DEVICE_OBJECT@@, UDT(0x0000172b)

>>>>>>


*** SYMBOLS

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

(000004) S_OBJNAME: Signature: 00000000, C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj

(000050) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 43, Build = 34808, QFE = 0
         Backend Version: Major = 19, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) Optimizing Compiler

(00008C) S_BUILDINFO:             0x10DF

(000094) S_GPROC32: [0005:00000000], Cb: 000008BA, Type:             0x121E, BthPS3PSM_CreateDevice
         Parent: 00000000, End: 00001738, Next: 00000000
         Debug start: 0000002D, Debug end: 00000891
         Flags: Optimized Debug Info

(0000D4)  S_LOCAL: Param: 000010C1, DeviceInit
(0000EC)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0050 	  FULL_SCOPE 
(0000F4)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00000000] - [0005:00000049], 0 Gaps
(000104)  S_DEFRANGE_REGISTER: r8
	Range: [0005:00000049] - [0005:000000F9], 1 Gaps (startOffset, length): (0099, A)
(000118)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0180 
	Range: [0005:000000E7] - [0005:000008BA], 0 Gaps
(000128)  S_LOCAL: Local: 00001177, deviceAttributes
(000144)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0080 	  FULL_SCOPE 
(00014C)  S_LOCAL: Local: 00000020, ret
(00015C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0040 	  FULL_SCOPE 
(000164)  S_LOCAL: Local: 00001221, patchPSMRegValue_buffer
(000188)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0118 	  FULL_SCOPE 
(000190)  S_LOCAL: Local: 000010BA, device
(0001A4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0048 	  FULL_SCOPE 
(0001AC)  S_LOCAL: Local: 00001177, stringAttributes
(0001C8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00B8 	  FULL_SCOPE 
(0001D0)  S_LOCAL: Local: 000010B7, linkNameRegValue
(0001EC)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0070 	  FULL_SCOPE 
(0001F4)  S_LOCAL: Local: 00001224, linkNameRegValue_buffer
(000218)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00F0 	  FULL_SCOPE 
(000220)  S_LOCAL: Local: 00001111, instanceId
(000238)  S_DEFRANGE_REGISTER: rdx
	Range: [0005:000007D7] - [0005:000007FB], 0 Gaps
(000248)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0058 	  FULL_SCOPE 
(000250)  S_LOCAL: Local: 00000012, status
(000264)  S_DEFRANGE_REGISTER: ebx
	Range: [0005:0000014C] - [0005:00000831], 0 Gaps
(000274)  S_DEFRANGE_REGISTER:MayAvailable ebx
	Range: [0005:00000891] - [0005:000008A9], 0 Gaps
(000284)  S_LOCAL: Local: 000010B7, patchPSMRegValue
(0002A0)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0060 	  FULL_SCOPE 
(0002A8)  S_LOCAL: Local: 000011E8, deviceContext
(0002C0)  S_DEFRANGE_REGISTER: r13
	Range: [0005:000002E3] - [0005:000007D2], 0 Gaps
(0002D0)  S_DEFRANGE_REGISTER:MayAvailable r13
	Range: [0005:000001A7] - [0005:000008B6], 2 Gaps (startOffset, length): (002E, 5FD) (068A, 60)
(0002E8)  S_LOCAL: Local: 00001225, instanceIdString
(000304)  S_DEFRANGE_REGISTER: rax
	Range: [0005:000005E9] - [0005:00000614], 0 Gaps
(000314)  S_DEFRANGE_REGISTER:MayAvailable rax
	Range: [0005:00000614] - [0005:00000621], 0 Gaps

(000324)  S_INLINESITE: Parent: 00000094, End: 00000348, Inlinee:             0x10E1
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset c 1f5  CodeLengthAndCodeOffset 4 1c  CodeLengthAndCodeOffset 5 7
                                CodeLengthAndCodeOffset 7 1e  CodeLengthAndCodeOffset f 10
          BinaryAnnotation Length: 20 bytes (2 bytes padding)

(000348)  S_INLINESITE_END

(00034C)  S_INLINESITE: Parent: 00000094, End: 0000036C, Inlinee:             0x10E2
          BinaryAnnotations:    LineOffset 3  CodeLengthAndCodeOffset 10 201  LineOffset 1  CodeLengthAndCodeOffset 3 14
                                LineOffset fffffffd  CodeLengthAndCodeOffset 9 28
          BinaryAnnotation Length: 16 bytes (0 bytes padding)

(00036C)  S_INLINESITE_END

(000370)  S_INLINESITE: Parent: 00000094, End: 00000388, Inlinee:             0x10E3
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 20 1d5
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000388)  S_INLINESITE_END

(00038C)  S_INLINESITE: Parent: 00000094, End: 000003C8, Inlinee:             0x10E4
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 3 2dd  CodeLengthAndCodeOffset 7 a  CodeLengthAndCodeOffset 16 e
          BinaryAnnotation Length: 12 bytes (0 bytes padding)

(0003A8)   S_LOCAL: Param: 00001025, Lock
(0003B8)   S_DEFRANGE_REGISTER: rdx
	Range: [0005:000002F5] - [0005:00000309], 0 Gaps

(0003C8)  S_INLINESITE_END

(0003CC)  S_INLINESITE: Parent: 00000094, End: 00000428, Inlinee:             0x10E5
          BinaryAnnotations:    CodeLengthAndCodeOffset 27 2b1  CodeLengthAndCodeOffset 3 2f
          BinaryAnnotation Length: 8 bytes (1 bytes padding)

(0003E4)   S_INLINESITE: Parent: 000003CC, End: 00000424, Inlinee:             0x10E6
           BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 2b1  CodeLengthAndCodeOffset 19 e  CodeLengthAndCodeOffset 3 21
           BinaryAnnotation Length: 12 bytes (0 bytes padding)

(000400)    S_LOCAL: Param: 00001097, TypeInfo
(000414)    S_DEFRANGE_REGISTER: r8
	Range: [0005:000002BF] - [0005:000002D8], 0 Gaps

(000424)   S_INLINESITE_END

(000428)  S_INLINESITE_END

(00042C)  S_INLINESITE: Parent: 00000094, End: 00000470, Inlinee:             0x10E7
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 367  CodeLengthAndCodeOffset 18 e
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(000448)   S_LOCAL: Param: 00001022, Collection
(000460)   S_DEFRANGE_REGISTER: rdx
	Range: [0005:00000375] - [0005:0000038B], 0 Gaps

(000470)  S_INLINESITE_END

(000474)  S_INLINESITE: Parent: 00000094, End: 0000048C, Inlinee:             0x10E8
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 22 409
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(00048C)  S_INLINESITE_END

(000490)  S_INLINESITE: Parent: 00000094, End: 000004AC, Inlinee:             0x10E9
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 433  CodeLengthAndCodeOffset 35 b
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(0004AC)  S_INLINESITE_END

(0004B0)  S_INLINESITE: Parent: 00000094, End: 000004EC, Inlinee:             0x10EA
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset b 4cf  CodeLengthAndCodeOffset 1b e
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(0004CC)   S_LOCAL: Param: 000010A6, Key
(0004DC)   S_DEFRANGE_REGISTER: rdx
	Range: [0005:000004DD] - [0005:000004F6], 0 Gaps

(0004EC)  S_INLINESITE_END

(0004F0)  S_INLINESITE: Parent: 00000094, End: 00000514, Inlinee:             0x10EB
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset b 614  CodeLengthAndCodeOffset 4 d  CodeLengthAndCodeOffset 2 14
                                CodeLengthAndCodeOffset 7 15  CodeLengthAndCodeOffset f 12
          BinaryAnnotation Length: 20 bytes (2 bytes padding)

(000514)  S_INLINESITE_END

(000518)  S_INLINESITE: Parent: 00000094, End: 0000054C, Inlinee:             0x10E2
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 2 61f  CodeLengthAndCodeOffset 4 6  CodeOffsetAndLineOffset 7
                                LineOffset 2  CodeLengthAndCodeOffset 5 4  CodeOffsetAndLineOffset 7  LineOffset 1
                                CodeLengthAndCodeOffset 3 3  LineOffset fffffffd  CodeLengthAndCodeOffset 4 8  CodeOffsetAndLineOffset f
                                LineOffset 1  CodeLengthAndCodeOffset 7 4
          BinaryAnnotation Length: 36 bytes (1 bytes padding)

(00054C)  S_INLINESITE_END

(000550)  S_INLINESITE: Parent: 00000094, End: 00000568, Inlinee:             0x10EC
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 23 5c6
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000568)  S_INLINESITE_END

(00056C)  S_INLINESITE: Parent: 00000094, End: 000005CC, Inlinee:             0x10ED
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset c 6ce  CodeLengthAndCodeOffset 16 13
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(000588)   S_LOCAL: Param: 000010A6, Key
(000598)   S_DEFRANGE_REGISTER: rdx
	Range: [0005:000006E1] - [0005:000006F5], 0 Gaps
(0005A8)   S_LOCAL: Param: 000010AE, String
(0005BC)   S_DEFRANGE_REGISTER: r9
	Range: [0005:000006DE] - [0005:000006F5], 0 Gaps

(0005CC)  S_INLINESITE_END

(0005D0)  S_INLINESITE: Parent: 00000094, End: 000005E8, Inlinee:             0x10EE
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1b 7e0
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0005E8)  S_INLINESITE_END

(0005EC)  S_CALLEES: Count: 23
                       0x10EF (0) ,             0x10F0 (0) ,             0x10EF (0) ,             0x10F1 (0) , 
                       0x10F5 (0) ,             0x10F6 (0) ,             0x10F5 (0) ,             0x10F5 (0) , 
                       0x10F5 (0) ,             0x10F6 (0) ,             0x10F5 (0) ,             0x10F5 (0) , 
                       0x10F6 (0) ,             0x10EF (0) ,             0x10F7 (0) ,             0x10F5 (0) , 
                       0x10F5 (0) ,             0x10F8 (0) ,             0x10F5 (0) ,             0x10F9 (0) , 
                       0x10F5 (0) ,             0x10EF (0) ,             0x10EF (0) 
(000650)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(000670)  S_DEFRANGE_REGISTER: rax
	Range: [0005:0000015B] - [0005:00000193], 0 Gaps
(000680)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:000000B7] - [0005:0000087E], 12 Gaps (startOffset, length): (0021, 3B) (0073, 136) (01C9, 96) (027F, 65) (0301, C6) (03E4, FC) (04FE, C1) (05E3, 68) (066F, 48) (06DB, 70) (0762, 1F) (0798, 18)
(0006C0)  S_DEFRANGE_REGISTER: rdx
	Range: [0005:00000512] - [0005:00000542], 0 Gaps
(0006D0)  S_FRAMEPROC:
          Frame size = 0x00000150 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000028
          Address of exception handler = 0000:00000000
          Function info: gschecks asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214300)
Error: unknown symbol record type 1168!

(000730)  S_FRAMECOOKIE: rsp+00000148, Type: , Flags: 19
(00073C)  S_ANNOTATION: [0005:00000860]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c104 13 "%0 [%!FUNC!] <--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE"
              4: "{"
              5: "}"

(0007F4)  S_ANNOTATION: [0005:00000831]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c93 12 "%0 [%!FUNC!]Unsupported device type, aborting initialization" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_DEVICE"
              4: "{"
              5: "}"

(0008D8)  S_ANNOTATION: [0005:000007FB]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c336 24 "%0 [%!FUNC!] <-- Exit <status=%10!s!>" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0009C0)  S_ANNOTATION: [0005:00000767]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c311 23 "%0 [%!FUNC!] ERROR:BthPS3PSM_CreateControlDevice failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DEVICE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(000ACC)  S_ANNOTATION: [0005:000006FB]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c289 22 "%0 [%!FUNC!] ERROR:WdfRegistryQueryString failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DEVICE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(000BD0)  S_ANNOTATION: [0005:0000066F]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c271 21 "%0 [%!FUNC!] ERROR:WdfStringCreate failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DEVICE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(000CCC)  S_ANNOTATION: [0005:00000590]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c245 20 "%0 [%!FUNC!]BthPS3PSMPatchEnabled value retrieved" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE"
              4: "{"
              5: "}"

(000DA4)  S_ANNOTATION: [0005:0000050B]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c235 19 "%0 [%!FUNC!] ERROR:WdfRegistryQueryULong failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DEVICE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(000EA8)  S_ANNOTATION: [0005:00000477]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c212 18 "%0 [%!FUNC!] ERROR:WdfDeviceOpenRegistryKey failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DEVICE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(000FB0)  S_ANNOTATION: [0005:00000394]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c181 17 "%0 [%!FUNC!] ERROR:WdfCollectionAdd failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DEVICE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0010B0)  S_ANNOTATION: [0005:0000030F]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c163 16 "%0 [%!FUNC!] ERROR:WdfWaitLockAcquire failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DEVICE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0011B0)  S_ANNOTATION: [0005:00000259]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c138 15 "%0 [%!FUNC!] ERROR:WdfDeviceCreate failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DEVICE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0012AC)  S_ANNOTATION: [0005:00000154]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c115 14 "%0 [%!FUNC!] ERROR:BthPS3PSM_GetPropertyInstanceId failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DEVICE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0013B8)  S_ANNOTATION: [0005:0000010C]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c85 11 "%0 [%!FUNC!]Device is USB Bluetooth device" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE"
              4: "{"
              5: "}"

(001488)  S_ANNOTATION: [0005:000000B0]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c79 10 "%0 [%!FUNC!] --> Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE"
              4: "{"
              5: "}"

(001544)  S_REGREL32: rsp+00000180, Type:             0x10C1, DeviceInit
(001560)  S_REGREL32: rsp+00000080, Type:             0x1177, deviceAttributes
(001580)  S_REGREL32: rsp+00000040, Type:      T_UCHAR(0020), ret
(001594)  S_REGREL32: rsp+00000118, Type:             0x1221, patchPSMRegValue_buffer
(0015BC)  S_REGREL32: rsp+00000048, Type:             0x10BA, device
(0015D4)  S_REGREL32: rsp+000000B8, Type:             0x1177, stringAttributes
(0015F4)  S_REGREL32: rsp+00000070, Type:             0x10B7, linkNameRegValue
(001614)  S_REGREL32: rsp+000000F0, Type:             0x1224, linkNameRegValue_buffer
(00163C)  S_REGREL32: rsp+00000058, Type:             0x1111, instanceId
(001658)  S_REGREL32: rsp+00000060, Type:             0x10B7, patchPSMRegValue
(001678)  S_CALLSITEINFO: [0005:000001EF], type =             0x10C5
(001688)  S_CALLSITEINFO: [0005:0000024D], type =             0x115D
(001698)  S_CALLSITEINFO: [0005:000002D2], type =             0x10E8
(0016A8)  S_CALLSITEINFO: [0005:00000303], type =             0x11D0
(0016B8)  S_CALLSITEINFO: [0005:00000385], type =             0x1167
(0016C8)  S_CALLSITEINFO: [0005:00000425], type =             0x11F5
(0016D8)  S_CALLSITEINFO: [0005:0000046B], type =             0x11D7
(0016E8)  S_CALLSITEINFO: [0005:000004F0], type =             0x118C
(0016F8)  S_CALLSITEINFO: [0005:000005E3], type =             0x11F0
(001708)  S_CALLSITEINFO: [0005:00000663], type =             0x1146
(001718)  S_CALLSITEINFO: [0005:000006EF], type =             0x10B3
(001728)  S_CALLSITEINFO: [0005:000007F5], type =             0x1123

(001738) S_END

(00173C) S_GPROC32: [0005:000008C0], Cb: 0000022E, Type:             0x1087, BthPS3PSM_EvtDeviceContextCleanup
         Parent: 00000000, End: 00001DA4, Next: 00000000
         Debug start: 00000019, Debug end: 00000213
         Flags: Optimized Debug Info

(001788)  S_LOCAL: Param: 00000603, Device
(00179C)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:000008C0] - [0005:000008DC], 0 Gaps
(0017AC)  S_DEFRANGE_REGISTER: rsi
	Range: [0005:000008DC] - [0005:00000AE2], 0 Gaps
(0017BC)  S_LOCAL: Local: 0000129C, count
(0017CC)  S_DEFRANGE_REGISTER: edi
	Range: [0005:000009FA] - [0005:00000AE7], 0 Gaps
(0017DC)  S_LOCAL: Local: 0000129E, pDevCtx
(0017F0)  S_DEFRANGE_REGISTER: rbp
	Range: [0005:0000094A] - [0005:00000ADD], 0 Gaps
(001800)  S_LOCAL: Local: 00000012, status
(001814)  S_DEFRANGE_REGISTER: edi
	Range: [0005:00000962] - [0005:000009FA], 0 Gaps
(001824)  S_LOCAL: Local: 00000022, i
(001830)  S_DEFRANGE_REGISTER: ebx
	Range: [0005:00000960] - [0005:00000AD8], 0 Gaps
(001840)  S_LOCAL: Local: 000010BA, devIter
(001854)  S_DEFRANGE_REGISTER: rax
	Range: [0005:00000A32] - [0005:00000A46], 0 Gaps
(001864)  S_DEFRANGE_REGISTER:MayAvailable rax
	Range: [0005:00000A0D] - [0005:00000A6B], 1 Gaps (startOffset, length): (0007, 50)

(001878)  S_INLINESITE: Parent: 0000173C, End: 000018B4, Inlinee:             0x10E4
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 76  CodeLengthAndCodeOffset 14 14  CodeLengthAndCodeOffset 2 16
          BinaryAnnotation Length: 12 bytes (1 bytes padding)

(001894)   S_LOCAL: Param: 00001025, Lock
(0018A4)   S_DEFRANGE_REGISTER: rdx
	Range: [0005:00000947] - [0005:0000095E], 0 Gaps

(0018B4)  S_INLINESITE_END

(0018B8)  S_INLINESITE: Parent: 0000173C, End: 00001914, Inlinee:             0x10E5
          BinaryAnnotations:    CodeLengthAndCodeOffset 25 51  CodeLengthAndCodeOffset 3 36
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0018D0)   S_INLINESITE: Parent: 000018B8, End: 00001910, Inlinee:             0x10E6
           BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 51  CodeLengthAndCodeOffset 14 11  CodeLengthAndCodeOffset 3 25
           BinaryAnnotation Length: 12 bytes (1 bytes padding)

(0018EC)    S_LOCAL: Param: 00001097, TypeInfo
(001900)    S_DEFRANGE_REGISTER: r8
	Range: [0005:00000922] - [0005:00000936], 0 Gaps

(001910)   S_INLINESITE_END

(001914)  S_INLINESITE_END

(001918)  S_INLINESITE: Parent: 0000173C, End: 0000195C, Inlinee:             0x10FF
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 119  CodeLengthAndCodeOffset 13 e
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001934)   S_LOCAL: Param: 00001022, Collection
(00194C)   S_DEFRANGE_REGISTER: rdx
	Range: [0005:000009E7] - [0005:000009F8], 0 Gaps

(00195C)  S_INLINESITE_END

(001960)  S_INLINESITE: Parent: 0000173C, End: 000019A4, Inlinee:             0x1102
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 14d  CodeLengthAndCodeOffset 14 11
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(00197C)   S_LOCAL: Param: 00001022, Collection
(001994)   S_DEFRANGE_REGISTER: rdx
	Range: [0005:00000A1E] - [0005:00000A32], 0 Gaps

(0019A4)  S_INLINESITE_END

(0019A8)  S_INLINESITE: Parent: 0000173C, End: 000019C0, Inlinee:             0x10EE
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1f 1c6
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0019C0)  S_INLINESITE_END

(0019C4)  S_INLINESITE: Parent: 0000173C, End: 000019DC, Inlinee:             0x10E8
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 22 1a4
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0019DC)  S_INLINESITE_END

(0019E0)  S_INLINESITE: Parent: 0000173C, End: 000019F8, Inlinee:             0x1103
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 25 17f
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0019F8)  S_INLINESITE_END

(0019FC)  S_CALLEES: Count: 5
                       0x10EF (0) ,             0x10F5 (0) ,             0x10F6 (0) ,             0x1104 (0) , 
                       0x10EF (0) 
(001A18)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(001A38)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:000008E3] - [0005:00000AC2], 1 Gaps (startOffset, length): (001D, 1AC)
(001A4C)  S_DEFRANGE_REGISTER: rdx
	Range: [0005:0000096D] - [0005:0000098D], 0 Gaps
(001A5C)  S_FRAMEPROC:
          Frame size = 0x00000030 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(001AA4)  S_ANNOTATION: [0005:00000AA5]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c491 27 "%0 [%!FUNC!] <--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE"
              4: "{"
              5: "}"

(001B5C)  S_ANNOTATION: [0005:00000966]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c441 26 "%0 [%!FUNC!] ERROR:WdfWaitLockAcquire failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QUEUE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(001C5C)  S_ANNOTATION: [0005:000008DC]
              1: "TMF:"
              2: "ca66b9c0-97d7-3776-3daf-3296492866aa BthPS3PSM // SRC=Device.c MJ= MN="
              3: "#typev Device_c428 25 "%0 [%!FUNC!] --> Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DEVICE"
              4: "{"
              5: "}"

(001D1C)  S_REGREL32: rsp+00000040, Type:    T_64PVOID(0603), Device
(001D34)  S_CALLSITEINFO: [0005:00000930], type =             0x10E8
(001D44)  S_CALLSITEINFO: [0005:00000958], type =             0x11D0
(001D54)  S_CALLSITEINFO: [0005:000009F2], type =             0x1203
(001D64)  S_CALLSITEINFO: [0005:00000A2C], type =             0x11A6
(001D74)  S_CALLSITEINFO: [0005:00000A5E], type =             0x1108
(001D84)  S_CALLSITEINFO: [0005:00000A80], type =             0x11F5
(001D94)  S_CALLSITEINFO: [0005:00000A9F], type =             0x1123

(001DA4) S_END

(001DA8) S_GPROC32: [0001:00000000], Cb: 00000096, Type:             0x1270, BthPS3PSM_GetPropertyInstanceId
         Parent: 00000000, End: 00001FE8, Next: 00000000
         Debug start: 0000000F, Debug end: 0000008D
         Flags: Optimized Debug Info

(001DF0)  S_LOCAL: Param: 000010C1, DeviceInit
(001E08)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000000] - [0001:00000075], 0 Gaps
(001E18)  S_LOCAL: Param: 00001113, Memory
(001E2C)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00000000] - [0001:00000048], 0 Gaps
(001E3C)  S_LOCAL: Local: 000010E2, property
(001E50)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0040 	  FULL_SCOPE 
(001E58)  S_LOCAL: Local: 00001177, attributes
(001E70)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0058 	  FULL_SCOPE 
(001E78)  S_LOCAL: Local: 00000022, type
(001E88)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00B0 
	Range: [0001:0000008D] - [0001:00000096], 0 Gaps

(001E98)  S_INLINESITE: Parent: 00001DA8, End: 00001EC4, Inlinee:             0x1108
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 4 1d  CodeLengthAndCodeOffset 4 7  CodeLengthAndCodeOffset 8 8
                                CodeLengthAndCodeOffset 4 18  CodeLengthAndCodeOffset 6 7  CodeLengthAndCodeOffset 4 11  CodeLengthAndCodeOffset 11 8
                                CodeLengthAndCodeOffset d 1c
          BinaryAnnotation Length: 28 bytes (2 bytes padding)

(001EC4)  S_INLINESITE_END

(001EC8)  S_INLINESITE: Parent: 00001DA8, End: 00001EEC, Inlinee:             0x110B
          BinaryAnnotations:    LineOffset 3  CodeLengthAndCodeOffset 8 11  LineOffset fffffffe  CodeLengthAndCodeOffset 8 28
                                LineOffset 3  CodeLengthAndCodeOffset 7 1c  CodeLengthAndCodeOffset 4 b
          BinaryAnnotation Length: 20 bytes (2 bytes padding)

(001EEC)  S_INLINESITE_END

(001EF0)  S_INLINESITE: Parent: 00001DA8, End: 00001F24, Inlinee:             0x10E2
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 2 f  CodeLengthAndCodeOffset 4 a  CodeLengthAndCodeOffset 4 f
                                LineOffset 2  CodeLengthAndCodeOffset 5 c  CodeLengthAndCodeOffset 3 d  LineOffset 1
                                CodeLengthAndCodeOffset 3 7  LineOffset fffffffd  CodeLengthAndCodeOffset 4 9  CodeOffset 24
                                LineOffset 1  CodeLengthAndCodeOffset 7 4
          BinaryAnnotation Length: 36 bytes (0 bytes padding)

(001F24)  S_INLINESITE_END

(001F28)  S_FRAMEPROC:
          Frame size = 0x00000090 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(001F5C)  S_REGREL32: rsp+000000A0, Type:             0x10C1, DeviceInit
(001F78)  S_REGREL32: rsp+000000A8, Type:             0x1113, Memory
(001F90)  S_REGREL32: rsp+00000040, Type:             0x10E2, property
(001FA8)  S_REGREL32: rsp+00000058, Type:             0x1177, attributes
(001FC4)  S_REGREL32: rsp+000000B0, Type:      T_ULONG(0022), type
(001FD8)  S_CALLSITEINFO: [0001:00000087], type =             0x1119

(001FE8) S_END

(001FEC) S_GPROC32: [0001:00000098], Cb: 00000160, Type:             0x126B, BthPS3PSM_IsBthUsbDevice
         Parent: 00000000, End: 000023D4, Next: 00000000
         Debug start: 00000028, Debug end: 0000013E
         Flags: Optimized Debug Info

(00202C)  S_LOCAL: Param: 000010C1, DeviceInit
(002044)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:000000C6] - [0001:000001A2], 0 Gaps
(002054)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000098] - [0001:000000C6], 0 Gaps
(002064)  S_DEFRANGE_REGISTER:MayAvailable rbx
	Range: [0001:000001D4] - [0001:000001ED], 0 Gaps
(002074)  S_LOCAL: Param: 00000620, Result
(002088)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00000098] - [0001:000000C3], 0 Gaps
(002098)  S_DEFRANGE_REGISTER: rsi
	Range: [0001:000000C3] - [0001:000001F6], 0 Gaps
(0020A8)  S_LOCAL: Local: 000010B7, lhsClassName
(0020C0)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0078 	  FULL_SCOPE 
(0020C8)  S_LOCAL: Local: 000010B7, lhsEnumeratorName
(0020E4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0058 	  FULL_SCOPE 
(0020EC)  S_LOCAL: Local: 000012CF, className
(002100)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0220 	  FULL_SCOPE 
(002108)  S_LOCAL: Local: 000010B7, rhsEnumeratorName
(002124)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0048 	  FULL_SCOPE 
(00212C)  S_LOCAL: Local: 000010B7, rhsClassName
(002144)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0068 	  FULL_SCOPE 
(00214C)  S_LOCAL: Local: 00000022, returnSize
(002164)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0040 	  FULL_SCOPE 
(00216C)  S_LOCAL: Local: 000012CF, enumeratorName
(002188)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0090 	  FULL_SCOPE 
(002190)  S_LOCAL: Local: 00000012, status
(0021A4)  S_DEFRANGE_REGISTER: eax
	Range: [0001:00000129] - [0001:0000013B], 0 Gaps
(0021B4)  S_DEFRANGE_REGISTER: edi
	Range: [0001:00000173] - [0001:000001D6], 0 Gaps
(0021C4)  S_DEFRANGE_REGISTER:MayAvailable eax
	Range: [0001:000001D6] - [0001:000001F8], 0 Gaps
(0021D4)  S_DEFRANGE_REGISTER:MayAvailable edi
	Range: [0001:000001D6] - [0001:000001F5], 0 Gaps

(0021E4)  S_INLINESITE: Parent: 00001FEC, End: 000021FC, Inlinee:             0x110C
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 3f 52
          BinaryAnnotation Length: 8 bytes (3 bytes padding)

(0021FC)  S_INLINESITE_END

(002200)  S_INLINESITE: Parent: 00001FEC, End: 00002218, Inlinee:             0x110C
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 3f 9c
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(002218)  S_INLINESITE_END

(00221C)  S_FRAMEPROC:
          Frame size = 0x000003C0 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000018
          Address of exception handler = 0000:00000000
          Function info: gschecks asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214300)
Error: unknown symbol record type 1168!

(002248)  S_FRAMECOOKIE: rsp+000003B0, Type: , Flags: 11
(002254)  S_REGREL32: rsp+000003E0, Type:             0x10C1, DeviceInit
(002270)  S_REGREL32: rsp+000003E8, Type:   T_64PUCHAR(0620), Result
(002288)  S_REGREL32: rsp+00000078, Type:             0x10B7, lhsClassName
(0022A4)  S_REGREL32: rsp+00000058, Type:             0x10B7, lhsEnumeratorName
(0022C4)  S_REGREL32: rsp+00000220, Type:             0x12CF, className
(0022DC)  S_REGREL32: rsp+00000048, Type:             0x10B7, rhsEnumeratorName
(0022FC)  S_REGREL32: rsp+00000068, Type:             0x10B7, rhsClassName
(002318)  S_REGREL32: rsp+00000040, Type:      T_ULONG(0022), returnSize
(002334)  S_REGREL32: rsp+00000090, Type:             0x12CF, enumeratorName
(002354)  S_CALLSITEINFO: [0001:000000D2], type =             0x12E0
(002364)  S_CALLSITEINFO: [0001:000000E4], type =             0x12E0
(002374)  S_CALLSITEINFO: [0001:00000123], type =             0x11B4
(002384)  S_CALLSITEINFO: [0001:0000016B], type =             0x11B4
(002394)  S_CALLSITEINFO: [0001:00000183], type =             0x12E0
(0023A4)  S_CALLSITEINFO: [0001:00000195], type =             0x12E0
(0023B4)  S_CALLSITEINFO: [0001:000001AF], type =             0x12E8
(0023C4)  S_CALLSITEINFO: [0001:000001C6], type =             0x12E8

(0023D4) S_END

(0023D8) S_GPROC32: [0001:000001F8], Cb: 00000050, Type:             0x12EC, McGenEventWrite_EtwWriteTransfer
         Parent: 00000000, End: 000025EC, Next: 00000000
         Debug start: 00000006, Debug end: 0000004A
         Flags: Do Not Inline, Optimized Debug Info

(002420)  S_LOCAL: Param: 0000111C, Context
(002434)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000001F8] - [0001:00000233], 0 Gaps
(002444)  S_LOCAL: Param: 000011E4, Descriptor
(00245C)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:000001F8] - [0001:00000242], 0 Gaps
(00246C)  S_LOCAL: Param: 00001126, ActivityId
(002484)  S_DEFRANGE_REGISTER: r8
	Range: [0001:000001F8] - [0001:00000242], 0 Gaps
(002494)  S_LOCAL: Param: 00000022, EventDataCount
(0024B0)  S_DEFRANGE_REGISTER: ebx
	Range: [0001:0000020C] - [0001:00000247], 0 Gaps
(0024C0)  S_DEFRANGE_REGISTER: r9d
	Range: [0001:000001F8] - [0001:0000020C], 0 Gaps
(0024D0)  S_LOCAL: Param: 000010A3, EventData
(0024E4)  S_DEFRANGE_REGISTER: r10
	Range: [0001:00000209] - [0001:00000242], 0 Gaps
(0024F4)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0001:000001F8] - [0001:000001F9], 0 Gaps
(002508)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0060 	  FULL_SCOPE 
(002510)  S_LOCAL: Local: 000012EF, Traits
(002524)  S_DEFRANGE_REGISTER: r11
	Range: [0001:00000202] - [0001:00000242], 0 Gaps
(002534)  S_FRAMEPROC:
          Frame size = 0x00000030 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(002554)  S_REGREL32: rsp+00000040, Type:             0x111C, Context
(00256C)  S_REGREL32: rsp+00000048, Type:             0x11E4, Descriptor
(002588)  S_REGREL32: rsp+00000050, Type:             0x1126, ActivityId
(0025A4)  S_REGREL32: rsp+00000058, Type:      T_ULONG(0022), EventDataCount
(0025C4)  S_REGREL32: rsp+00000060, Type:             0x10A3, EventData
(0025DC)  S_CALLSITEINFO: [0001:0000023C], type =             0x12F5

(0025EC) S_END

(0025F0) S_GPROC32: [0001:00000248], Cb: 000000A9, Type:             0x1289, McTemplateK0qz_EtwWriteTransfer
         Parent: 00000000, End: 00002860, Next: 00000000
         Debug start: 00000018, Debug end: 00000097
         Flags: Do Not Inline, Optimized Debug Info

(002638)  S_LOCAL: Param: 0000111C, Context
(00264C)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000248] - [0001:00000263], 0 Gaps
(00265C)  S_DEFRANGE_REGISTER: r10
	Range: [0001:00000263] - [0001:000002DF], 0 Gaps
(00266C)  S_LOCAL: Param: 000011E4, Descriptor
(002684)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00000248] - [0001:00000287], 0 Gaps
(002694)  S_DEFRANGE_REGISTER: r11
	Range: [0001:00000287] - [0001:000002DF], 0 Gaps
(0026A4)  S_LOCAL: Param: 00001126, Activity
(0026B8)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00000248] - [0001:000002DF], 0 Gaps
(0026C8)  S_LOCAL: Param: 00001277, _Arg0
(0026D8)  S_DEFRANGE_REGISTER: r9d
	Range: [0001:00000248] - [0001:0000027F], 0 Gaps
(0026E8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0098 	  FULL_SCOPE 
(0026F0)  S_LOCAL: Param: 0000114E, _Arg1
(002700)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000274] - [0001:000002D5], 0 Gaps
(002710)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0001:00000248] - [0001:00000249], 0 Gaps
(002724)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00A0 	  FULL_SCOPE 
(00272C)  S_LOCAL: Local: 000012F8, EventData
(002740)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 

(002748)  S_INLINESITE: Parent: 000025F0, End: 00002768, Inlinee:             0x1113
          BinaryAnnotations:    LineOffset 2  CodeOffset 63  LineOffset 1  CodeLengthAndCodeOffset 5 4
                                LineOffset fffffffe  CodeLengthAndCodeOffset 5 16
          BinaryAnnotation Length: 16 bytes (2 bytes padding)

(002768)  S_INLINESITE_END

(00276C)  S_INLINESITE: Parent: 000025F0, End: 0000278C, Inlinee:             0x1113
          BinaryAnnotations:    LineOffset 2  CodeLengthAndCodeOffset 9 1b  LineOffset ffffffff  CodeOffset 11
                                LineOffset 2  CodeLengthAndCodeOffset 8 8
          BinaryAnnotation Length: 16 bytes (2 bytes padding)

(00278C)  S_INLINESITE_END

(002790)  S_CALLEES: Count: 1
                       0x1112 (0) 
(00279C)  S_FRAMEPROC:
          Frame size = 0x00000078 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified gschecks asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214320)
Error: unknown symbol record type 1168!

(0027C8)  S_FRAMECOOKIE: rsp+00000060, Type: , Flags: 11
(0027D4)  S_REGREL32: rsp+00000080, Type:             0x111C, Context
(0027EC)  S_REGREL32: rsp+00000088, Type:             0x11E4, Descriptor
(002808)  S_REGREL32: rsp+00000090, Type:             0x1126, Activity
(002820)  S_REGREL32: rsp+00000098, Type:             0x1277, _Arg0
(002834)  S_REGREL32: rsp+000000A0, Type:             0x114E, _Arg1
(002848)  S_REGREL32: rsp+00000030, Type:             0x12F8, EventData

(002860) S_END

(002864) S_GPROC32: [0001:000002F4], Cb: 000000DC, Type:             0x127F, McTemplateK0szq_EtwWriteTransfer
         Parent: 00000000, End: 00002B2C, Next: 00000000
         Debug start: 00000018, Debug end: 000000C6
         Flags: Do Not Inline, Optimized Debug Info

(0028AC)  S_LOCAL: Param: 0000111C, Context
(0028C0)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000002F4] - [0001:0000030F], 0 Gaps
(0028D0)  S_DEFRANGE_REGISTER: r10
	Range: [0001:0000030F] - [0001:000003BA], 0 Gaps
(0028E0)  S_LOCAL: Param: 000011E4, Descriptor
(0028F8)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:000002F4] - [0001:00000318], 0 Gaps
(002908)  S_DEFRANGE_REGISTER: r11
	Range: [0001:00000318] - [0001:000003BA], 0 Gaps
(002918)  S_LOCAL: Param: 00001126, Activity
(00292C)  S_DEFRANGE_REGISTER: r8
	Range: [0001:000002F4] - [0001:000003BA], 0 Gaps
(00293C)  S_LOCAL: Param: 00001091, _Arg0
(00294C)  S_DEFRANGE_REGISTER: r9
	Range: [0001:000002F4] - [0001:0000037F], 0 Gaps
(00295C)  S_LOCAL: Param: 0000114E, _Arg1
(00296C)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00000342] - [0001:0000039E], 0 Gaps
(00297C)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0001:000002F4] - [0001:000002F5], 0 Gaps
(002990)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00B0 	  FULL_SCOPE 
(002998)  S_LOCAL: Param: 00001277, _Arg2
(0029A8)  S_DEFRANGE_REGISTER_REL: [rsp +  0030 ]
	Range: [0001:000002F4] - [0001:000002F5], 0 Gaps
(0029BC)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00B8 	  FULL_SCOPE 
(0029C4)  S_LOCAL: Local: 00001304, EventData
(0029D8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 

(0029E0)  S_INLINESITE: Parent: 00002864, End: 00002A00, Inlinee:             0x1113
          BinaryAnnotations:    LineOffset 2  CodeLengthAndCodeOffset 6 85  CodeLengthAndCodeOffset 5 11  LineOffset ffffffff
                                CodeLengthAndCodeOffset d 14
          BinaryAnnotation Length: 16 bytes (2 bytes padding)

(002A00)  S_INLINESITE_END

(002A04)  S_INLINESITE: Parent: 00002864, End: 00002A24, Inlinee:             0x1113
          BinaryAnnotations:    LineOffset 2  CodeLengthAndCodeOffset 4 81  LineOffset 1  CodeLengthAndCodeOffset 4 a
                                LineOffset fffffffe  CodeLengthAndCodeOffset 5 17
          BinaryAnnotation Length: 16 bytes (0 bytes padding)

(002A24)  S_INLINESITE_END

(002A28)  S_INLINESITE: Parent: 00002864, End: 00002A44, Inlinee:             0x1113
          BinaryAnnotations:    LineOffset 2  CodeLengthAndCodeOffset 4 42  LineOffset 1  CodeLengthAndCodeOffset 9 17
          BinaryAnnotation Length: 12 bytes (2 bytes padding)

(002A44)  S_INLINESITE_END

(002A48)  S_CALLEES: Count: 1
                       0x1112 (0) 
(002A54)  S_FRAMEPROC:
          Frame size = 0x00000080 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: inl_specified gschecks asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214320)
Error: unknown symbol record type 1168!

(002A80)  S_FRAMECOOKIE: rsp+00000070, Type: , Flags: 11
(002A8C)  S_REGREL32: rsp+00000090, Type:             0x111C, Context
(002AA4)  S_REGREL32: rsp+00000098, Type:             0x11E4, Descriptor
(002AC0)  S_REGREL32: rsp+000000A0, Type:             0x1126, Activity
(002AD8)  S_REGREL32: rsp+000000A8, Type:             0x1091, _Arg0
(002AEC)  S_REGREL32: rsp+000000B0, Type:             0x114E, _Arg1
(002B00)  S_REGREL32: rsp+000000B8, Type:             0x1277, _Arg2
(002B14)  S_REGREL32: rsp+00000030, Type:             0x1304, EventData

(002B2C) S_END

(002B30) S_GPROC32: [0001:000003D0], Cb: 00000028, Type:             0x1267, WPP_SF_
         Parent: 00000000, End: 00002C3C, Next: 00000000
         Debug start: 00000004, Debug end: 00000023
         Flags: Do Not Inline, Optimized Debug Info

(002B60)  S_LOCAL: Param: 00000023, Logger
(002B74)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000003D0] - [0001:000003F3], 0 Gaps
(002B84)  S_LOCAL: Param: 00000021, id
(002B94)  S_DEFRANGE_REGISTER: dx
	Range: [0001:000003D0] - [0001:000003E4], 0 Gaps
(002BA4)  S_LOCAL: Param: 00001126, TraceGuid
(002BB8)  S_DEFRANGE_REGISTER: r8
	Range: [0001:000003D0] - [0001:000003F3], 0 Gaps
(002BC8)  S_FRAMEPROC:
          Frame size = 0x00000038 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(002BE8)  S_REGREL32: rsp+00000040, Type:      T_UQUAD(0023), Logger
(002C00)  S_REGREL32: rsp+00000048, Type:     T_USHORT(0021), id
(002C14)  S_REGREL32: rsp+00000050, Type:             0x1126, TraceGuid
(002C2C)  S_CALLSITEINFO: [0001:000003ED], type =             0x114A

(002C3C) S_END

(002C40) S_GPROC32: [0001:000003F8], Cb: 0000003E, Type:             0x1274, WPP_SF_d
         Parent: 00000000, End: 00002D88, Next: 00000000
         Debug start: 0000000B, Debug end: 00000039
         Flags: Do Not Inline, Optimized Debug Info

(002C70)  S_LOCAL: Param: 00000023, Logger
(002C84)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000003F8] - [0001:00000431], 0 Gaps
(002C94)  S_LOCAL: Param: 00000021, id
(002CA4)  S_DEFRANGE_REGISTER: dx
	Range: [0001:000003F8] - [0001:0000042B], 0 Gaps
(002CB4)  S_LOCAL: Param: 00001126, TraceGuid
(002CC8)  S_DEFRANGE_REGISTER: r8
	Range: [0001:000003F8] - [0001:00000431], 0 Gaps
(002CD8)  S_LOCAL: Param: 00000074, _a1
(002CE8)  S_DEFRANGE_REGISTER: r9d
	Range: [0001:000003F8] - [0001:0000040E], 0 Gaps
(002CF8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0068 	  FULL_SCOPE 
(002D00)  S_FRAMEPROC:
          Frame size = 0x00000048 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(002D20)  S_REGREL32: rsp+00000050, Type:      T_UQUAD(0023), Logger
(002D38)  S_REGREL32: rsp+00000058, Type:     T_USHORT(0021), id
(002D4C)  S_REGREL32: rsp+00000060, Type:             0x1126, TraceGuid
(002D64)  S_REGREL32: rsp+00000068, Type:       T_INT4(0074), _a1
(002D78)  S_CALLSITEINFO: [0001:0000042B], type =             0x114A

(002D88) S_END

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"


(000004) S_OBJNAME: Signature: 00000000, C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj

(000050) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 43, Build = 34808, QFE = 0
         Backend Version: Major = 19, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) Optimizing Compiler

(00008C) S_BUILDINFO:             0x11F1

(000094) S_GPROC32: [0005:00000AF0], Cb: 0000008B, Type:             0x1282, BthPS3PSM_EvtDeviceAdd
         Parent: 00000000, End: 000003A0, Next: 00000000
         Debug start: 0000000A, Debug end: 00000080
         Flags: Optimized Debug Info

(0000D4)  S_LOCAL: Param: 00001199, Driver
(0000E8)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00000AF0] - [0005:00000B04], 0 Gaps
(0000F8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(000100)  S_LOCAL: Param: 000010C1, DeviceInit
(000118)  S_DEFRANGE_REGISTER: rbx
	Range: [0005:00000AFD] - [0005:00000B3C], 0 Gaps
(000128)  S_DEFRANGE_REGISTER: rdx
	Range: [0005:00000AF0] - [0005:00000AFD], 0 Gaps
(000138)  S_LOCAL: Local: 00000012, status
(00014C)  S_DEFRANGE_REGISTER: ebx
	Range: [0005:00000B3C] - [0005:00000B75], 0 Gaps
(00015C)  S_CALLEES: Count: 3
                       0x10EF (0) ,             0x10E0 (0) ,             0x10F5 (0) 
(000170)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(000190)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00000B04] - [0005:00000B5A], 1 Gaps (startOffset, length): (001D, 22)
(0001A4)  S_FRAMEPROC:
          Frame size = 0x00000020 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
(0001C4)  S_ANNOTATION: [0005:00000B3C]
              1: "TMF:"
              2: "d561fdd8-4a6b-334c-0c99-8bd67f784ac3 BthPS3PSM // SRC=Driver.c MJ= MN="
              3: "#typev Driver_c166 16 "%0 [%!FUNC!] <-- Exit <status=%10!s!>" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DRIVER"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0002AC)  S_ANNOTATION: [0005:00000AFD]
              1: "TMF:"
              2: "d561fdd8-4a6b-334c-0c99-8bd67f784ac3 BthPS3PSM // SRC=Driver.c MJ= MN="
              3: "#typev Driver_c162 15 "%0 [%!FUNC!] --> Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DRIVER"
              4: "{"
              5: "}"

(00036C)  S_REGREL32: rsp+00000030, Type:             0x1199, Driver
(000384)  S_REGREL32: rsp+00000038, Type:             0x10C1, DeviceInit

(0003A0) S_END

(0003A4) S_GPROC32: [0005:00000B80], Cb: 00000097, Type:             0x1087, BthPS3PSM_EvtDriverContextCleanup
         Parent: 00000000, End: 000005A4, Next: 00000000
         Debug start: 00000006, Debug end: 0000008D
         Flags: Optimized Debug Info

(0003F0)  S_LOCAL: Param: 00000603, DriverObject
(000408)  S_DEFRANGE_REGISTER: rbx
	Range: [0005:00000B89] - [0005:00000C12], 0 Gaps
(000418)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00000B80] - [0005:00000B89], 0 Gaps

(000428)  S_INLINESITE: Parent: 000003A4, End: 00000440, Inlinee:             0x11F4
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1e 6c
          BinaryAnnotation Length: 8 bytes (3 bytes padding)

(000440)  S_INLINESITE_END

(000444)  S_CALLEES: Count: 4
                       0x10EF (0) ,             0x11F5 (0) ,             0x11F6 (0) ,             0x11F7 (0) 
           
(00045C)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(00047C)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00000B90] - [0005:00000BAD], 0 Gaps
(00048C)  S_FRAMEPROC:
          Frame size = 0x00000020 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(0004B8)  S_ANNOTATION: [0005:00000B89]
              1: "TMF:"
              2: "d561fdd8-4a6b-334c-0c99-8bd67f784ac3 BthPS3PSM // SRC=Driver.c MJ= MN="
              3: "#typev Driver_c181 17 "%0 [%!FUNC!] --> Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DRIVER"
              4: "{"
              5: "}"

(000578)  S_REGREL32: rsp+00000030, Type:    T_64PVOID(0603), DriverObject
(000594)  S_CALLSITEINFO: [0005:00000C04], type =             0x12B6

(0005A4) S_END

(0005A8) S_GPROC32: [0006:00000000], Cb: 0000031C, Type:             0x12FB, DriverEntry
         Parent: 00000000, End: 00000E24, Next: 00000000
         Debug start: 00000023, Debug end: 000002F9
         Flags: Optimized Debug Info

(0005DC)  S_LOCAL: Param: 000010E1, DriverObject
(0005F4)  S_DEFRANGE_REGISTER: rcx
	Range: [0006:00000000] - [0006:00000053], 0 Gaps
(000604)  S_DEFRANGE_REGISTER: rdi
	Range: [0006:00000053] - [0006:0000030B], 0 Gaps
(000614)  S_LOCAL: Param: 0000108A, RegistryPath
(00062C)  S_DEFRANGE_REGISTER: rbx
	Range: [0006:00000049] - [0006:00000147], 0 Gaps
(00063C)  S_DEFRANGE_REGISTER: rdx
	Range: [0006:00000000] - [0006:00000049], 0 Gaps
(00064C)  S_LOCAL: Local: 00001291, config
(000660)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0040 	  FULL_SCOPE 
(000668)  S_LOCAL: Local: 00001177, attributes
(000680)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0060 	  FULL_SCOPE 
(000688)  S_LOCAL: Local: 00000012, status
(00069C)  S_DEFRANGE_REGISTER: ebx
	Range: [0006:00000147] - [0006:00000307], 0 Gaps

(0006AC)  S_INLINESITE: Parent: 000005A8, End: 000006D4, Inlinee:             0x11F9
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 4 d6  CodeLengthAndCodeOffset 5 7  CodeLengthAndCodeOffset 10 e
                                CodeLengthAndCodeOffset 3 13  CodeLengthAndCodeOffset 3 6  CodeLengthAndCodeOffset 7 24  CodeLengthAndCodeOffset f 10
          BinaryAnnotation Length: 24 bytes (0 bytes padding)

(0006D4)  S_INLINESITE_END

(0006D8)  S_INLINESITE: Parent: 000005A8, End: 000006F8, Inlinee:             0x11FA
          BinaryAnnotations:    LineOffset 3  CodeLengthAndCodeOffset 8 ca  LineOffset 1  CodeLengthAndCodeOffset b 53
                                LineOffset fffffffd  CodeLengthAndCodeOffset 5 16
          BinaryAnnotation Length: 16 bytes (0 bytes padding)

(0006F8)  S_INLINESITE_END

(0006FC)  S_INLINESITE: Parent: 000005A8, End: 00000734, Inlinee:             0x10E2
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 2 c8  CodeLengthAndCodeOffset 4 a  CodeOffset 10
                                LineOffset 2  CodeLengthAndCodeOffset 5 4  CodeLengthAndCodeOffset 3 15  LineOffset 1
                                CodeLengthAndCodeOffset 3 6  LineOffset fffffffd  CodeLengthAndCodeOffset 4 6  LineOffset 1
                                CodeLengthAndCodeOffset 7 b  LineOffset ffffffff  CodeLengthAndCodeOffset 4 1d
          BinaryAnnotation Length: 40 bytes (1 bytes padding)

(000734)  S_INLINESITE_END

(000738)  S_INLINESITE: Parent: 000005A8, End: 00000754, Inlinee:             0x11FB
          BinaryAnnotations:    LineOffset d  CodeLengthAndCodeOffset 23 23  CodeLengthAndCodeOffset 7 26  CodeLengthAndCodeOffset 7 a
          BinaryAnnotation Length: 12 bytes (1 bytes padding)

(000754)  S_INLINESITE_END

(000758)  S_INLINESITE: Parent: 000005A8, End: 00000770, Inlinee:             0x11FD
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 23 1c3
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000770)  S_INLINESITE_END

(000774)  S_INLINESITE: Parent: 000005A8, End: 0000078C, Inlinee:             0x11FF
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 26 230
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(00078C)  S_INLINESITE_END

(000790)  S_CALLEES: Count: 12
                       0x1200 (0) ,             0x1204 (0) ,             0x1205 (0) ,             0x10EF (0) , 
                       0x10F5 (0) ,             0x10F6 (0) ,             0x11F6 (0) ,             0x11F7 (0) , 
                       0x10F5 (0) ,             0x10F5 (0) ,             0x1206 (0) ,             0x10F5 (0) 
           
(0007C8)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(0007E8)  S_DEFRANGE_REGISTER: rcx
	Range: [0006:00000098] - [0006:000002E9], 4 Gaps (startOffset, length): (0024, 99) (00D4, 88) (0173, 59) (01E3, 58)
(000808)  S_FRAMEPROC:
          Frame size = 0x000000A0 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000018
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(00084C)  S_ANNOTATION: [0006:000002CC]
              1: "TMF:"
              2: "d561fdd8-4a6b-334c-0c99-8bd67f784ac3 BthPS3PSM // SRC=Driver.c MJ= MN="
              3: "#typev Driver_c146 14 "%0 [%!FUNC!] <-- Exit <status=%10!s!>" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DRIVER"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(000934)  S_ANNOTATION: [0006:0000025A]
              1: "TMF:"
              2: "d561fdd8-4a6b-334c-0c99-8bd67f784ac3 BthPS3PSM // SRC=Driver.c MJ= MN="
              3: "#typev Driver_c131 13 "%0 [%!FUNC!] ERROR:WdfWaitLockCreate failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(000A2C)  S_ANNOTATION: [0006:000001EA]
              1: "TMF:"
              2: "d561fdd8-4a6b-334c-0c99-8bd67f784ac3 BthPS3PSM // SRC=Driver.c MJ= MN="
              3: "#typev Driver_c111 12 "%0 [%!FUNC!] ERROR:WdfCollectionCreate failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(000B28)  S_ANNOTATION: [0006:0000014B]
              1: "TMF:"
              2: "d561fdd8-4a6b-334c-0c99-8bd67f784ac3 BthPS3PSM // SRC=Driver.c MJ= MN="
              3: "#typev Driver_c93 11 "%0 [%!FUNC!] ERROR:WdfDriverCreate failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_DRIVER"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(000C24)  S_ANNOTATION: [0006:00000091]
              1: "TMF:"
              2: "d561fdd8-4a6b-334c-0c99-8bd67f784ac3 BthPS3PSM // SRC=Driver.c MJ= MN="
              3: "#typev Driver_c72 10 "%0 [%!FUNC!] --> Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_DRIVER"
              4: "{"
              5: "}"

(000CE0)  S_ANNOTATION: [0006:0000005F]
              1: "TMC:"
              2: "586aa8b1-53a6-404f-9b3e-14483e514a2c"
              3: "BthPS3PSMTraceGuid"
              4: "MYDRIVER_ALL_INFO"
              5: "TRACE_DRIVER"
              6: "TRACE_DEVICE"
              7: "TRACE_QUEUE"
              8: "TRACE_FILTER"
              9: "TRACE_DIAG"
             10: "TRACE_SIDEBAND"

(000D88)  S_REGREL32: rsp+000000C0, Type:             0x10E1, DriverObject
(000DA4)  S_REGREL32: rsp+000000C8, Type:             0x108A, RegistryPath
(000DC0)  S_REGREL32: rsp+00000040, Type:             0x1291, config
(000DD8)  S_REGREL32: rsp+00000060, Type:             0x1177, attributes
(000DF4)  S_CALLSITEINFO: [0006:0000013F], type =             0x12A6
(000E04)  S_CALLSITEINFO: [0006:000001DE], type =             0x14AF
(000E14)  S_CALLSITEINFO: [0006:0000024E], type =             0x14A7

(000E24) S_END

(000E28) S_GPROC32: [0001:00000440], Cb: 00000108, Type:             0x1321, McGenControlCallbackV2
         Parent: 00000000, End: 00001184, Next: 00000000
         Debug start: 00000006, Debug end: 00000102
         Flags: Do Not Inline, Optimized Debug Info

(000E68)  S_LOCAL: Param: 00001126, SourceId
(000E7C)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000440] - [0001:00000527], 1 Gaps (startOffset, length): (004A, 7F)
(000E90)  S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0001:0000048A] - [0001:00000548], 1 Gaps (startOffset, length): (000B, AD)
(000EA4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(000EAC)  S_LOCAL: Param: 00000022, ControlCode
(000EC4)  S_DEFRANGE_REGISTER: edx
	Range: [0001:00000440] - [0001:0000052A], 1 Gaps (startOffset, length): (004A, 7F)
(000ED8)  S_DEFRANGE_REGISTER:MayAvailable edx
	Range: [0001:0000048A] - [0001:00000548], 1 Gaps (startOffset, length): (000F, A9)
(000EEC)  S_LOCAL: Param: 00000020, Level
(000EFC)  S_DEFRANGE_REGISTER: r8b
	Range: [0001:00000440] - [0001:00000539], 1 Gaps (startOffset, length): (0033, 96)
(000F10)  S_DEFRANGE_REGISTER:MayAvailable r8b
	Range: [0001:00000542] - [0001:00000548], 0 Gaps
(000F20)  S_LOCAL: Param: 00000023, MatchAnyKeyword
(000F3C)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00000440] - [0001:00000542], 1 Gaps (startOffset, length): (004A, 7F)
(000F50)  S_DEFRANGE_REGISTER:MayAvailable r9
	Range: [0001:0000048A] - [0001:00000548], 1 Gaps (startOffset, length): (0008, B0)
(000F64)  S_LOCAL: Param: 00000023, MatchAllKeyword
(000F80)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0001:00000440] - [0001:00000441], 0 Gaps
(000F94)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0050 	  FULL_SCOPE 
(000F9C)  S_LOCAL: Param: 0000131D, FilterData
(000FB4)  S_DEFRANGE_REGISTER_REL: [rsp +  0030 ]
	Range: [0001:00000440] - [0001:00000441], 0 Gaps
(000FC8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0058 	  FULL_SCOPE 
(000FD0)  S_LOCAL: Param: 00000603, CallbackContext
(000FEC)  S_DEFRANGE_REGISTER: r10
	Range: [0001:0000044B] - [0001:00000542], 0 Gaps
(000FFC)  S_DEFRANGE_REGISTER_REL: [rsp +  0038 ]
	Range: [0001:00000440] - [0001:00000441], 0 Gaps
(001010)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0060 	  FULL_SCOPE 
(001018)  S_LOCAL: Local: 00000022, Ix
(001028)  S_DEFRANGE_REGISTER: r8d
	Range: [0001:00000473] - [0001:00000509], 0 Gaps
(001038)  S_DEFRANGE_REGISTER:MayAvailable r8d
	Range: [0001:00000542] - [0001:00000548], 0 Gaps

(001048)  S_INLINESITE: Parent: 00000E28, End: 00001090, Inlinee:             0x120A
          BinaryAnnotations:    LineOffset 8  CodeLengthAndCodeOffset 4 4e  CodeOffsetAndLineOffset b  LineOffset 7
                                CodeOffset f  LineOffset 7  CodeOffset 1a  LineOffset fffffffc
                                CodeLengthAndCodeOffset 3 5
          BinaryAnnotation Length: 20 bytes (0 bytes padding)

(00106C)   S_LOCAL: Param: 00000023, Keyword
(001080)   S_DEFRANGE_REGISTER: rdx
	Range: [0001:00000499] - [0001:000004D6], 0 Gaps

(001090)  S_INLINESITE_END

(001094)  S_FRAMEPROC:
          Frame size = 0x00000020 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
Error: unknown symbol record type 1168!

(0010C0)  S_REGREL32: rsp+00000030, Type:             0x1126, SourceId
(0010D8)  S_REGREL32: rsp+00000038, Type:      T_ULONG(0022), ControlCode
(0010F4)  S_REGREL32: rsp+00000040, Type:      T_UCHAR(0020), Level
(001108)  S_REGREL32: rsp+00000048, Type:      T_UQUAD(0023), MatchAnyKeyword
(001128)  S_REGREL32: rsp+00000050, Type:      T_UQUAD(0023), MatchAllKeyword
(001148)  S_REGREL32: rsp+00000058, Type:             0x131D, FilterData
(001164)  S_REGREL32: rsp+00000060, Type:    T_64PVOID(0603), CallbackContext

(001184) S_END

(001188) S_GPROC32: [0001:00000548], Cb: 00000016, Type:             0x159C, McGenEventRegister_EtwRegister
         Parent: 00000000, End: 00001378, Next: 00000000
         Debug start: 00000004, Debug end: 00000011
         Flags: Do Not Inline, Optimized Debug Info

(0011D0)  S_LOCAL: Param: 00001126, ProviderId
(0011E8)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000548] - [0001:00000559], 0 Gaps
(0011F8)  S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0001:00000559] - [0001:0000055E], 0 Gaps
(001208)  S_LOCAL: Param: 00001322, EnableCallback
(001224)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00000548] - [0001:00000559], 0 Gaps
(001234)  S_DEFRANGE_REGISTER:MayAvailable rdx
	Range: [0001:00000559] - [0001:0000055E], 0 Gaps
(001244)  S_LOCAL: Param: 00000603, CallbackContext
(001260)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00000548] - [0001:00000559], 0 Gaps
(001270)  S_DEFRANGE_REGISTER:MayAvailable r8
	Range: [0001:00000559] - [0001:0000055E], 0 Gaps
(001280)  S_LOCAL: Param: 00000623, RegHandle
(001294)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00000548] - [0001:00000559], 0 Gaps
(0012A4)  S_DEFRANGE_REGISTER:MayAvailable r9
	Range: [0001:00000559] - [0001:0000055E], 0 Gaps
(0012B4)  S_LOCAL: Local: 00000022, Error
(0012C4)  S_DEFRANGE_REGISTER:MayAvailable eax
	Range: [0001:00000559] - [0001:0000055E], 0 Gaps
(0012D4)  S_FRAMEPROC:
          Frame size = 0x00000028 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(0012F4)  S_REGREL32: rsp+00000030, Type:             0x1126, ProviderId
(001310)  S_REGREL32: rsp+00000038, Type:             0x1322, EnableCallback
(001330)  S_REGREL32: rsp+00000040, Type:    T_64PVOID(0603), CallbackContext
(001350)  S_REGREL32: rsp+00000048, Type:   T_64PUQUAD(0623), RegHandle
(001368)  S_CALLSITEINFO: [0001:00000553], type =             0x15AB

(001378) S_END

(00137C) S_GPROC32: [0001:00000560], Cb: 00000028, Type:             0x158A, McGenEventUnregister_EtwUnregister
         Parent: 00000000, End: 00001468, Next: 00000000
         Debug start: 00000006, Debug end: 00000022
         Flags: Do Not Inline, Optimized Debug Info

(0013C8)  S_LOCAL: Param: 00000623, RegHandle
(0013DC)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:00000569] - [0001:00000587], 0 Gaps
(0013EC)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000560] - [0001:00000569], 0 Gaps
(0013FC)  S_LOCAL: Local: 00000022, Error
(00140C)  S_DEFRANGE_REGISTER: eax
	Range: [0001:00000573] - [0001:00000588], 1 Gaps (startOffset, length): (0002, 6)
(001420)  S_FRAMEPROC:
          Frame size = 0x00000020 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(001440)  S_REGREL32: rsp+00000030, Type:   T_64PUQUAD(0623), RegHandle
(001458)  S_CALLSITEINFO: [0001:00000575], type =             0x1084

(001468) S_END

(00146C) S_GPROC32: [0001:00000588], Cb: 0000004F, Type:             0x1588, McTemplateK0p_EtwWriteTransfer
         Parent: 00000000, End: 00001644, Next: 00000000
         Debug start: 0000001A, Debug end: 0000003D
         Flags: Do Not Inline, Optimized Debug Info

(0014B4)  S_LOCAL: Param: 0000111C, Context
(0014C8)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000588] - [0001:000005C5], 0 Gaps
(0014D8)  S_LOCAL: Param: 000011E4, Descriptor
(0014F0)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00000588] - [0001:000005C5], 0 Gaps
(001500)  S_LOCAL: Param: 00001126, Activity
(001514)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00000588] - [0001:000005C5], 0 Gaps
(001524)  S_LOCAL: Param: 000012FC, _Arg0
(001534)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00000588] - [0001:000005B8], 0 Gaps
(001544)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0088 	  FULL_SCOPE 
(00154C)  S_LOCAL: Local: 000015AC, EventData
(001560)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 

(001568)  S_INLINESITE: Parent: 0000146C, End: 00001584, Inlinee:             0x1113
          BinaryAnnotations:    LineOffset 1  CodeOffset 1a  LineOffset 1  CodeLengthAndCodeOffset c 4
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001584)  S_INLINESITE_END

(001588)  S_CALLEES: Count: 1
                       0x1112 (0) 
(001594)  S_FRAMEPROC:
          Frame size = 0x00000068 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified gschecks asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214320)
Error: unknown symbol record type 1168!

(0015C0)  S_FRAMECOOKIE: rsp+00000050, Type: , Flags: 11
(0015CC)  S_REGREL32: rsp+00000070, Type:             0x111C, Context
(0015E4)  S_REGREL32: rsp+00000078, Type:             0x11E4, Descriptor
(001600)  S_REGREL32: rsp+00000080, Type:             0x1126, Activity
(001618)  S_REGREL32: rsp+00000088, Type:             0x12FC, _Arg0
(00162C)  S_REGREL32: rsp+00000030, Type:             0x15AC, EventData

(001644) S_END

(001648) S_GPROC32: [0001:000005D8], Cb: 0000005F, Type:             0x15A0, McTemplateK0pq_EtwWriteTransfer
         Parent: 00000000, End: 00001880, Next: 00000000
         Debug start: 0000001A, Debug end: 0000004D
         Flags: Do Not Inline, Optimized Debug Info

(001690)  S_LOCAL: Param: 0000111C, Context
(0016A4)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000005D8] - [0001:00000625], 0 Gaps
(0016B4)  S_LOCAL: Param: 000011E4, Descriptor
(0016CC)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:000005D8] - [0001:00000625], 0 Gaps
(0016DC)  S_LOCAL: Param: 00001126, Activity
(0016F0)  S_DEFRANGE_REGISTER: r8
	Range: [0001:000005D8] - [0001:00000625], 0 Gaps
(001700)  S_LOCAL: Param: 000012FC, _Arg0
(001710)  S_DEFRANGE_REGISTER: r9
	Range: [0001:000005D8] - [0001:00000608], 0 Gaps
(001720)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0098 	  FULL_SCOPE 
(001728)  S_LOCAL: Param: 00001277, _Arg1
(001738)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0001:000005D8] - [0001:000005D9], 0 Gaps
(00174C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00A0 	  FULL_SCOPE 
(001754)  S_LOCAL: Local: 000012F8, EventData
(001768)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 

(001770)  S_INLINESITE: Parent: 00001648, End: 0000178C, Inlinee:             0x1113
          BinaryAnnotations:    LineOffset 1  CodeOffset 30  LineOffset 1  CodeLengthAndCodeOffset c 4
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(00178C)  S_INLINESITE_END

(001790)  S_INLINESITE: Parent: 00001648, End: 000017AC, Inlinee:             0x1113
          BinaryAnnotations:    LineOffset 1  CodeOffset 1a  LineOffset 1  CodeLengthAndCodeOffset c 4
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(0017AC)  S_INLINESITE_END

(0017B0)  S_CALLEES: Count: 1
                       0x1112 (0) 
(0017BC)  S_FRAMEPROC:
          Frame size = 0x00000078 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified gschecks asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214320)
Error: unknown symbol record type 1168!

(0017E8)  S_FRAMECOOKIE: rsp+00000060, Type: , Flags: 11
(0017F4)  S_REGREL32: rsp+00000080, Type:             0x111C, Context
(00180C)  S_REGREL32: rsp+00000088, Type:             0x11E4, Descriptor
(001828)  S_REGREL32: rsp+00000090, Type:             0x1126, Activity
(001840)  S_REGREL32: rsp+00000098, Type:             0x12FC, _Arg0
(001854)  S_REGREL32: rsp+000000A0, Type:             0x1277, _Arg1
(001868)  S_REGREL32: rsp+00000030, Type:             0x12F8, EventData

(001880) S_END

(001884) S_GPROC32: [0001:00000640], Cb: 0000002D, Type:             0x112A, WppClassicProviderCallback
         Parent: 00000000, End: 000019F8, Next: 00000000
         Debug start: 00000000, Debug end: 0000002C
         Flags: Optimized Debug Info

(0018C8)  S_LOCAL: Param: 00001126, Guid
(0018D8)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000640] - [0001:0000066D], 0 Gaps
(0018E8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0008 	  FULL_SCOPE 
(0018F0)  S_LOCAL: Param: 00000020, ControlCode
(001908)  S_DEFRANGE_REGISTER: dl
	Range: [0001:00000640] - [0001:0000066D], 0 Gaps
(001918)  S_LOCAL: Param: 00000603, EnableContext
(001930)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00000640] - [0001:0000066D], 0 Gaps
(001940)  S_LOCAL: Param: 00000603, CallbackContext
(00195C)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00000640] - [0001:0000066D], 0 Gaps
(00196C)  S_FRAMEPROC:
          Frame size = 0x00000000 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
(00198C)  S_REGREL32: rsp+00000008, Type:             0x1126, Guid
(0019A0)  S_REGREL32: rsp+00000010, Type:      T_UCHAR(0020), ControlCode
(0019BC)  S_REGREL32: rsp+00000018, Type:    T_64PVOID(0603), EnableContext
(0019D8)  S_REGREL32: rsp+00000020, Type:    T_64PVOID(0603), CallbackContext

(0019F8) S_END

(0019FC) S_GPROC32: [0005:00000C18], Cb: 00000076, Type:             0x1305, WppCleanupKm
         Parent: 00000000, End: 00001B20, Next: 00000000
         Debug start: 0000000A, Debug end: 00000076
         Flags: Optimized Debug Info

(001A30)  S_LOCAL: Param: 000010E1, DriverObject
(001A48)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00000C18] - [0005:00000C4D], 0 Gaps
(001A58)  S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0005:00000C53] - [0005:00000C8E], 1 Gaps (startOffset, length): (0016, 1E)
(001A6C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(001A74)  S_LOCAL: Local: 0000119D, WppReg
(001A88)  S_DEFRANGE_REGISTER: rbx
	Range: [0005:00000C29] - [0005:00000C8E], 1 Gaps (startOffset, length): (0036, 6)
(001A9C)  S_LOCAL: Local: 00001003, global, WPPTraceSuite
(001AB4)  S_DEFRANGE_REGISTER: eax
	Range: [0005:00000C3B] - [0005:00000C53], 0 Gaps
(001AC4)  S_FRAMEPROC:
          Frame size = 0x00000020 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
(001AE4)  S_REGREL32: rsp+00000030, Type:             0x10E1, DriverObject
(001B00)  S_CALLSITEINFO: [0005:00000C4D], type =             0x15B0
(001B10)  S_CALLSITEINFO: [0005:00000C75], type =             0x1084

(001B20) S_END

(001B24) S_GPROC32: [0005:00000C90], Cb: 0000008B, Type:             0x1599, WppInitKm
         Parent: 00000000, End: 00001CAC, Next: 00000000
         Debug start: 00000006, Debug end: 00000085
         Flags: Optimized Debug Info

(001B58)  S_LOCAL: Param: 000010E1, DriverObject
(001B70)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00000C90] - [0005:00000D08], 1 Gaps (startOffset, length): (0028, 3C)
(001B84)  S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0005:00000CB8] - [0005:00000D1B], 1 Gaps (startOffset, length): (0004, 59)
(001B98)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0040 	  FULL_SCOPE 
(001BA0)  S_LOCAL: Param: 000010AA, RegPath
(001BB4)  S_DEFRANGE_REGISTER: rdx
	Range: [0005:00000C90] - [0005:00000D05], 1 Gaps (startOffset, length): (0028, 3C)
(001BC8)  S_DEFRANGE_REGISTER:MayAvailable rdx
	Range: [0005:00000CB8] - [0005:00000D1B], 1 Gaps (startOffset, length): (001E, 3F)
(001BDC)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0048 	  FULL_SCOPE 
(001BE4)  S_LOCAL: Local: 0000119D, WppReg
(001BF8)  S_DEFRANGE_REGISTER: rbx
	Range: [0005:00000C9D] - [0005:00000D1A], 1 Gaps (startOffset, length): (0056, 1)
(001C0C)  S_LOCAL: Local: 00001003, global, WPPTraceSuite
(001C24)  S_DEFRANGE_REGISTER: eax
	Range: [0005:00000CAC] - [0005:00000D00], 1 Gaps (startOffset, length): (000C, 3C)
(001C38)  S_FRAMEPROC:
          Frame size = 0x00000030 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
(001C58)  S_REGREL32: rsp+00000040, Type:             0x10E1, DriverObject
(001C74)  S_REGREL32: rsp+00000048, Type:             0x10AA, RegPath
(001C8C)  S_CALLSITEINFO: [0005:00000CDF], type =             0x11E1
(001C9C)  S_CALLSITEINFO: [0005:00000D0F], type =             0x15B0

(001CAC) S_END

(001CB0) S_GPROC32: [0005:00000D1C], Cb: 000000FD, Type:             0x100F, WppLoadTracingSupport
         Parent: 00000000, End: 00001E5C, Next: 00000000
         Debug start: 00000009, Debug end: 000000F7
         Flags: Optimized Debug Info

(001CF0)  S_LOCAL: Local: 00000022, MajorVersion
(001D08)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0050 
	Range: [0005:00000D33] - [0005:00000E19], 0 Gaps
(001D18)  S_LOCAL: Local: 000010B7, name
(001D28)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(001D30)  S_LOCAL: Local: 00001181, global, pfnWppGetVersion
(001D4C)  S_DEFRANGE_REGISTER: rax
	Range: [0005:00000D99] - [0005:00000DBA], 0 Gaps
(001D5C)  S_FRAMEPROC:
          Frame size = 0x00000040 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
(001D7C)  S_REGREL32: rsp+00000050, Type:      T_ULONG(0022), MajorVersion
(001D98)  S_REGREL32: rsp+00000030, Type:             0x10B7, name
(001DAC)  S_CALLSITEINFO: [0005:00000D37], type =             0x12E0
(001DBC)  S_CALLSITEINFO: [0005:00000D41], type =             0x15B3
(001DCC)  S_CALLSITEINFO: [0005:00000D59], type =             0x12E0
(001DDC)  S_CALLSITEINFO: [0005:00000D63], type =             0x15B3
(001DEC)  S_CALLSITEINFO: [0005:00000D7B], type =             0x12E0
(001DFC)  S_CALLSITEINFO: [0005:00000D85], type =             0x15B3
(001E0C)  S_CALLSITEINFO: [0005:00000DB4], type =             0x1181
(001E1C)  S_CALLSITEINFO: [0005:00000DCB], type =             0x12E0
(001E2C)  S_CALLSITEINFO: [0005:00000DD5], type =             0x15B3
(001E3C)  S_CALLSITEINFO: [0005:00000DF2], type =             0x12E0
(001E4C)  S_CALLSITEINFO: [0005:00000DFC], type =             0x15B3

(001E5C) S_END

(001E60) S_GPROC32: [0005:00000E20], Cb: 00000278, Type:             0x117D, WppTraceCallback
         Parent: 00000000, End: 00002428, Next: 00000000
         Debug start: 0000001C, Debug end: 00000258
         Flags: Optimized Debug Info

(001E98)  S_LOCAL: Param: 00000020, MinorFunction
(001EB0)  S_DEFRANGE_REGISTER: cl
	Range: [0005:00000E20] - [0005:00000E4D], 0 Gaps
(001EC0)  S_DEFRANGE_REGISTER: r9d
	Range: [0005:00000E4D] - [0005:00001078], 2 Gaps (startOffset, length): (00CB, 53) (01B2, 63)
(001ED8)  S_DEFRANGE_REGISTER:MayAvailable r9d
	Range: [0005:00001078] - [0005:00001098], 0 Gaps
(001EE8)  S_LOCAL: Param: 00000603, DataPath
(001EFC)  S_DEFRANGE_REGISTER: rdx
	Range: [0005:00000E20] - [0005:00000E50], 0 Gaps
(001F0C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0078 	  FULL_SCOPE 
(001F14)  S_LOCAL: Param: 00000022, BufferLength
(001F2C)  S_DEFRANGE_REGISTER: r8d
	Range: [0005:00000E20] - [0005:00001078], 2 Gaps (startOffset, length): (00FE, 4D) (01D5, 6D)
(001F44)  S_DEFRANGE_REGISTER:MayAvailable r8d
	Range: [0005:00001078] - [0005:00001098], 0 Gaps
(001F54)  S_LOCAL: Param: 00000603, Buffer
(001F68)  S_DEFRANGE_REGISTER: rsi
	Range: [0005:00000E49] - [0005:00001078], 1 Gaps (startOffset, length): (01EB, 2E)
(001F7C)  S_DEFRANGE_REGISTER: r9
	Range: [0005:00000E20] - [0005:00000E49], 0 Gaps
(001F8C)  S_DEFRANGE_REGISTER:MayAvailable rsi
	Range: [0005:0000105C] - [0005:0000108B], 1 Gaps (startOffset, length): (0006, 16)
(001FA0)  S_LOCAL: Param: 00000603, Context
(001FB4)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0005:00000E20] - [0005:00000E21], 0 Gaps
(001FC8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0090 	  FULL_SCOPE 
(001FD0)  S_LOCAL: Param: 00000622, Size
(001FE0)  S_DEFRANGE_REGISTER: r13
	Range: [0005:00000E44] - [0005:00001094], 0 Gaps
(001FF0)  S_DEFRANGE_REGISTER_REL: [rsp +  0030 ]
	Range: [0005:00000E20] - [0005:00000E21], 0 Gaps
(002004)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0098 
	Range: [0005:00000E20] - [0005:00001098], 2 Gaps (startOffset, length): (00C7, C) (00DB, 83)
(00201C)  S_LOCAL: Local: 0000119D, cntl
(00202C)  S_DEFRANGE_REGISTER: rax
	Range: [0005:00000FAC] - [0005:00001078], 2 Gaps (startOffset, length): (0014, A) (0053, 63)
(002044)  S_DEFRANGE_REGISTER: rdi
	Range: [0005:00000E94] - [0005:00000F7E], 0 Gaps
(002054)  S_DEFRANGE_REGISTER: rbp
	Range: [0005:00000FA7] - [0005:0000105C], 1 Gaps (startOffset, length): (0005, AA)
(002068)  S_DEFRANGE_REGISTER:MayAvailable rax
	Range: [0005:00000FC0] - [0005:0000107F], 1 Gaps (startOffset, length): (000A, AE)
(00207C)  S_DEFRANGE_REGISTER:MayAvailable rdi
	Range: [0005:00000FC0] - [0005:00001097], 1 Gaps (startOffset, length): (000A, AE)
(002090)  S_DEFRANGE_REGISTER:MayAvailable rbp
	Range: [0005:00001036] - [0005:00001087], 2 Gaps (startOffset, length): (0020, 6) (002C, 16)
(0020A8)  S_LOCAL: Local: 00000012, Status
(0020BC)  S_DEFRANGE_REGISTER: eax
	Range: [0005:00000F32] - [0005:00000F3A], 0 Gaps
(0020CC)  S_DEFRANGE_REGISTER: ebx
	Range: [0005:00000F66] - [0005:00001078], 2 Gaps (startOffset, length): (0005, 2F) (0039, C8)
(0020E4)  S_DEFRANGE_REGISTER:MayAvailable eax
	Range: [0005:00000F3D] - [0005:00000F44], 0 Gaps
(0020F4)  S_DEFRANGE_REGISTER:MayAvailable ebx
	Range: [0005:00001078] - [0005:00001083], 0 Gaps
(002104)  S_LOCAL: Local: 000010AA, RegPath
(002118)  S_DEFRANGE_REGISTER: r15
	Range: [0005:00000FB0] - [0005:00001078], 1 Gaps (startOffset, length): (0010, A)
(00212C)  S_DEFRANGE_REGISTER:MayAvailable r15
	Range: [0005:00000FC0] - [0005:00001090], 1 Gaps (startOffset, length): (000A, AE)
(002140)  S_LOCAL: Local: 00000671, StringPtr
(002154)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00001018] - [0005:0000102C], 0 Gaps
(002164)  S_LOCAL: Local: 00000022, RegistryPathOffset
(002184)  S_DEFRANGE_REGISTER: r12d
	Range: [0005:00000FDD] - [0005:00001078], 1 Gaps (startOffset, length): (0002, 3)
(002198)  S_DEFRANGE_REGISTER:MayAvailable r12d
	Range: [0005:00001078] - [0005:00001096], 0 Gaps
(0021A8)  S_LOCAL: Local: 00000022, GuidCount
(0021BC)  S_DEFRANGE_REGISTER: edi
	Range: [0005:00000FA9] - [0005:00001078], 1 Gaps (startOffset, length): (0017, A)
(0021D0)  S_DEFRANGE_REGISTER:MayAvailable edi
	Range: [0005:00000FC0] - [0005:00001097], 1 Gaps (startOffset, length): (000A, AE)
(0021E4)  S_LOCAL: Local: 00000022, BufferNeeded
(0021FC)  S_DEFRANGE_REGISTER: r14d
	Range: [0005:00000FEA] - [0005:00000FED], 0 Gaps
(00220C)  S_DEFRANGE_REGISTER:MayAvailable r14d
	Range: [0005:00000FED] - [0005:00001092], 0 Gaps
(00221C)  S_LOCAL: Local: 00000022, Level
(00222C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0070 
	Range: [0005:00000EE7] - [0005:00001098], 2 Gaps (startOffset, length): (000C, 8) (0097, FA)
(002244)  S_LOCAL: Local: 00000022, ReturnLength
(00225C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0098 
	Range: [0005:00000EE7] - [0005:00001098], 2 Gaps (startOffset, length): (000C, 8) (0097, FA)
(002274)  S_LOCAL: Local: 00000023, lh
(002284)  S_DEFRANGE_REGISTER: rax
	Range: [0005:00000EF7] - [0005:00000F07], 0 Gaps
(002294)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 
	Range: [0005:00000F07] - [0005:00001098], 1 Gaps (startOffset, length): (0077, FA)

(0022A8)  S_INLINESITE: Parent: 00001E60, End: 00002300, Inlinee:             0x1214
          BinaryAnnotations:    LineOffset 1  CodeOffset 90  LineOffset 2  CodeLengthAndCodeOffset 1c 4
          BinaryAnnotation Length: 12 bytes (2 bytes padding)

(0022C4)   S_LOCAL: Local: 000015B7, p1
(0022D4)   S_DEFRANGE_REGISTER: rcx
	Range: [0005:00000EB4] - [0005:00000F7E], 1 Gaps (startOffset, length): (0078, 3F)
(0022E8)   S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0005:00000E99] - [0005:00001098], 2 Gaps (startOffset, length): (000A, D) (001B, 1C4)

(002300)  S_INLINESITE_END

(002304)  S_FRAMEPROC:
          Frame size = 0x00000040 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000028
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(002330)  S_REGREL32: rsp+00000070, Type:      T_UCHAR(0020), MinorFunction
(00234C)  S_REGREL32: rsp+00000078, Type:    T_64PVOID(0603), DataPath
(002364)  S_REGREL32: rsp+00000080, Type:      T_ULONG(0022), BufferLength
(002380)  S_REGREL32: rsp+00000088, Type:    T_64PVOID(0603), Buffer
(002398)  S_REGREL32: rsp+00000090, Type:    T_64PVOID(0603), Context
(0023B0)  S_REGREL32: rsp+00000098, Type:   T_64PULONG(0622), Size
(0023C4)  S_REGREL32: rsp+00000070, Type:      T_ULONG(0022), Level
(0023D8)  S_REGREL32: rsp+00000098, Type:      T_ULONG(0022), ReturnLength
(0023F4)  S_REGREL32: rsp+00000030, Type:      T_UQUAD(0023), lh
(002408)  S_CALLSITEINFO: [0005:00000F2C], type =             0x11BC
(002418)  S_CALLSITEINFO: [0005:00000F5E], type =             0x11BC

(002428) S_END

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"


(000004) S_OBJNAME: Signature: 00000000, C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj

(000050) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 43, Build = 34808, QFE = 0
         Backend Version: Major = 19, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) Optimizing Compiler

(00008C) S_BUILDINFO:             0x11C6

(000094) S_GPROC32: [0001:00000670], Cb: 0000003A, Type:             0x1528, McTemplateK0_EtwWriteTransfer
         Parent: 00000000, End: 00000204, Next: 00000000
         Debug start: 00000013, Debug end: 00000028
         Flags: Do Not Inline, Optimized Debug Info

(0000DC)  S_LOCAL: Param: 0000111C, Context
(0000F0)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000670] - [0001:00000698], 0 Gaps
(000100)  S_LOCAL: Param: 000011E4, Descriptor
(000118)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00000670] - [0001:00000698], 0 Gaps
(000128)  S_LOCAL: Param: 00001126, Activity
(00013C)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00000670] - [0001:00000698], 0 Gaps
(00014C)  S_LOCAL: Local: 0000152D, EventData
(000160)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(000168)  S_CALLEES: Count: 1
                       0x1112 (0) 
(000174)  S_FRAMEPROC:
          Frame size = 0x00000058 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified gschecks asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214320)
(000194)  S_FRAMECOOKIE: rsp+00000040, Type: , Flags: 11
(0001A0)  S_REGREL32: rsp+00000060, Type:             0x111C, Context
(0001B8)  S_REGREL32: rsp+00000068, Type:             0x11E4, Descriptor
(0001D4)  S_REGREL32: rsp+00000070, Type:             0x1126, Activity
(0001EC)  S_REGREL32: rsp+00000030, Type:             0x152D, EventData

(000204) S_END

(000208) S_GPROC32: [0001:000006B0], Cb: 000002ED, Type:             0x11CC, UrbFunctionBulkInTransferCompleted
         Parent: 00000000, End: 00000EA8, Next: 00000000
         Debug start: 0000001C, Debug end: 000002D0
         Flags: Optimized Debug Info

(000254)  S_LOCAL: Param: 000011BA, Request
(000268)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000006B0] - [0001:000006D5], 0 Gaps
(000278)  S_DEFRANGE_REGISTER: rbp
	Range: [0001:000006D5] - [0001:0000098A], 0 Gaps
(000288)  S_LOCAL: Param: 000011C0, Target
(00029C)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:000006B0] - [0001:0000070A], 0 Gaps
(0002AC)  S_DEFRANGE_REGISTER:MayAvailable rdx
	Range: [0001:00000712] - [0001:0000071C], 0 Gaps
(0002BC)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0068 	  FULL_SCOPE 
(0002C4)  S_LOCAL: Param: 000011C6, Params
(0002D8)  S_DEFRANGE_REGISTER: r8
	Range: [0001:000006B0] - [0001:000006D2], 0 Gaps
(0002E8)  S_DEFRANGE_REGISTER: r14
	Range: [0001:000006D2] - [0001:00000997], 0 Gaps
(0002F8)  S_LOCAL: Param: 00000603, Context
(00030C)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:000006CF] - [0001:00000763], 0 Gaps
(00031C)  S_DEFRANGE_REGISTER: r9
	Range: [0001:000006B0] - [0001:000006CF], 0 Gaps
(00032C)  S_LOCAL: Local: 00000620, buffer
(000340)  S_DEFRANGE_REGISTER:MayAvailable rbx
	Range: [0001:000007AF] - [0001:00000985], 0 Gaps
(000350)  S_LOCAL: Local: 00001524, pIrp
(000360)  S_DEFRANGE_REGISTER: rax
	Range: [0001:00000758] - [0001:000007AF], 1 Gaps (startOffset, length): (0050, 5)
(000374)  S_DEFRANGE_REGISTER:MayAvailable rax
	Range: [0001:000007AF] - [0001:0000093A], 1 Gaps (startOffset, length): (0022, 162)
(000388)  S_LOCAL: Local: 0000129C, bufferLength
(0003A0)  S_DEFRANGE_REGISTER: edi
	Range: [0001:00000766] - [0001:000007F3], 0 Gaps
(0003B0)  S_DEFRANGE_REGISTER:MayAvailable edi
	Range: [0001:00000933] - [0001:0000099C], 0 Gaps
(0003C0)  S_LOCAL: Local: 0000129E, pDevCtx
(0003D4)  S_DEFRANGE_REGISTER: rsi
	Range: [0001:00000744] - [0001:0000098F], 0 Gaps
(0003E4)  S_LOCAL: Local: 00001527, pUrb
(0003F4)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:00000763] - [0001:00000776], 0 Gaps
(000404)  S_DEFRANGE_REGISTER:MayAvailable rbx
	Range: [0001:00000933] - [0001:00000985], 0 Gaps

(000414)  S_INLINESITE: Parent: 00000208, End: 00000470, Inlinee:             0x11D1
          BinaryAnnotations:    LineOffset 3  CodeOffset 11c  CodeOffsetAndLineOffset 59  LineOffset 2
                                CodeLengthAndCodeOffset 5 6
          BinaryAnnotation Length: 12 bytes (0 bytes padding)

(000430)   S_LOCAL: Local: 00000020, i
(00043C)   S_DEFRANGE_REGISTER: al
	Range: [0001:000007D1] - [0001:0000080F], 0 Gaps
(00044C)   S_DEFRANGE_REGISTER:MayAvailable al
	Range: [0001:00000829] - [0001:0000093A], 5 Gaps (startOffset, length): (0020, 1E) (004D, 19) (0082, 1F) (00C1, 1E) (00EE, 1C)

(000470)  S_INLINESITE_END

(000474)  S_INLINESITE: Parent: 00000208, End: 00000570, Inlinee:             0x11D6
          BinaryAnnotations:    LineOffset 4  CodeLengthAndCodeOffset 8 ba  LineOffset 4  CodeOffset c
                                LineOffset 4  CodeOffset 5  CodeOffsetAndLineOffset 45  LineOffset 4
                                CodeOffset 2b  LineOffset 4  CodeLengthAndCodeOffset 2 2
          BinaryAnnotation Length: 28 bytes (3 bytes padding)

(0004A0)   S_LOCAL: Param: 00000603, buffer
(0004B4)   S_DEFRANGE_REGISTER: rbx
	Range: [0001:00000776] - [0001:000007AF], 2 Gaps (startOffset, length): (0014, 2) (0035, 2)
(0004CC)   S_DEFRANGE_REGISTER:MayAvailable rbx
	Range: [0001:000007AF] - [0001:00000985], 0 Gaps
(0004DC)   S_LOCAL: Param: 0000110E, bufferMDL
(0004F0)   S_DEFRANGE_REGISTER: rcx
	Range: [0001:0000076A] - [0001:000007AF], 1 Gaps (startOffset, length): (003E, 5)
(000504)   S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0001:000007AF] - [0001:00000948], 1 Gaps (startOffset, length): (0020, 164)
(000518)   S_LOCAL: Local: 00000603, address
(00052C)   S_DEFRANGE_REGISTER: rbx
	Range: [0001:0000078A] - [0001:000007AD], 1 Gaps (startOffset, length): (0002, 1F)
(000540)   S_DEFRANGE_REGISTER:MayAvailable rbx
	Range: [0001:000007AF] - [0001:00000985], 0 Gaps

(000550)   S_INLINESITE: Parent: 00000474, End: 0000056C, Inlinee:             0x11DB
           BinaryAnnotations:    LineOffset 1  CodeOffset d0  CodeOffsetAndLineOffset 26  LineOffset 2
                                 CodeLengthAndCodeOffset 1f 6
           BinaryAnnotation Length: 12 bytes (0 bytes padding)

(00056C)   S_INLINESITE_END

(000570)  S_INLINESITE_END

(000574)  S_INLINESITE: Parent: 00000208, End: 00000590, Inlinee:             0x11CA
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 87  CodeLengthAndCodeOffset 14 d
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(000590)  S_INLINESITE_END

(000594)  S_INLINESITE: Parent: 00000208, End: 000005F0, Inlinee:             0x10E5
          BinaryAnnotations:    CodeLengthAndCodeOffset 25 62  CodeLengthAndCodeOffset 3 2f
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0005AC)   S_INLINESITE: Parent: 00000594, End: 000005EC, Inlinee:             0x10E6
           BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 62  CodeLengthAndCodeOffset 14 11  CodeLengthAndCodeOffset 3 1e
           BinaryAnnotation Length: 12 bytes (1 bytes padding)

(0005C8)    S_LOCAL: Param: 00001097, TypeInfo
(0005DC)    S_DEFRANGE_REGISTER: r8
	Range: [0001:00000723] - [0001:00000737], 0 Gaps

(0005EC)   S_INLINESITE_END

(0005F0)  S_INLINESITE_END

(0005F4)  S_INLINESITE: Parent: 00000208, End: 0000060C, Inlinee:             0x1191
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 22 283
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(00060C)  S_INLINESITE_END

(000610)  S_CALLEES: Count: 8
                       0x10EF (0) ,             0x1193 (0) ,             0x1193 (0) ,             0x10EF (0) , 
                       0x1193 (0) ,             0x1193 (0) ,             0x10EF (0) ,             0x10EF (0) 
           
(000638)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(000658)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000006DC] - [0001:00000973], 7 Gaps (startOffset, length): (002B, 100) (0142, 23) (017C, 16) (01A9, 1E) (01DE, 28) (021D, 16) (024A, 36)
(000684)  S_FRAMEPROC:
          Frame size = 0x00000030 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000028
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(0006CC)  S_ANNOTATION: [0001:00000955]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c214 23 "%0 [%!FUNC!] <--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_FILTER"
              4: "{"
              5: "}"

(000784)  S_ANNOTATION: [0001:00000908]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c203 22 "%0 [%!FUNC!]-- NOT Patching HID Interrupt PSM" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_FILTER"
              4: "{"
              5: "}"

(000858)  S_ANNOTATION: [0001:000008DB]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c195 21 "%0 [%!FUNC!]++ Patching HID Interrupt PSM to 0x%10!04X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_FILTER"
              4: "{"
              5: "pConReq->PSM, ItemLong -- 10"
              6: "}"

(000958)  S_ANNOTATION: [0001:0000089C]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c185 20 "%0 [%!FUNC!]>> Connection request for HID Interrupt PSM 0x%10!04X! arrived" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_FILTER"
              4: "{"
              5: "pConReq->PSM, ItemLong -- 10"
              6: "}"

(000A68)  S_ANNOTATION: [0001:00000867]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c176 19 "%0 [%!FUNC!]-- NOT Patching HID Control PSM" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_FILTER"
              4: "{"
              5: "}"

(000B3C)  S_ANNOTATION: [0001:0000083A]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c169 18 "%0 [%!FUNC!]++ Patching HID Control PSM to 0x%10!04X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_FILTER"
              4: "{"
              5: "pConReq->PSM, ItemLong -- 10"
              6: "}"

(000C3C)  S_ANNOTATION: [0001:00000800]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c159 17 "%0 [%!FUNC!]>> Connection request for HID Control PSM 0x%10!04X! arrived" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_FILTER"
              4: "{"
              5: "pConReq->PSM, ItemLong -- 10"
              6: "}"

(000D48)  S_ANNOTATION: [0001:000006D5]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c129 16 "%0 [%!FUNC!] --> Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_FILTER"
              4: "{"
              5: "}"

(000E08)  S_REGREL32: rsp+00000060, Type:             0x11BA, Request
(000E20)  S_REGREL32: rsp+00000068, Type:             0x11C0, Target
(000E38)  S_REGREL32: rsp+00000070, Type:             0x11C6, Params
(000E50)  S_REGREL32: rsp+00000078, Type:    T_64PVOID(0603), Context
(000E68)  S_CALLSITEINFO: [0001:00000731], type =             0x10E8
(000E78)  S_CALLSITEINFO: [0001:00000752], type =             0x1484
(000E88)  S_CALLSITEINFO: [0001:000007A2], type =             0x1555
(000E98)  S_CALLSITEINFO: [0001:0000094F], type =             0x1427

(000EA8) S_END

(000EAC) S_GPROC32: [0001:000009A0], Cb: 0000025B, Type:             0x11CC, UrbSelectConfigurationCompleted
         Parent: 00000000, End: 00001844, Next: 00000000
         Debug start: 0000001D, Debug end: 0000023C
         Flags: Optimized Debug Info

(000EF4)  S_LOCAL: Param: 000011BA, Request
(000F08)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000009A0] - [0001:000009C6], 0 Gaps
(000F18)  S_DEFRANGE_REGISTER: rbp
	Range: [0001:000009C6] - [0001:00000BE6], 0 Gaps
(000F28)  S_LOCAL: Param: 000011C0, Target
(000F3C)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:000009A0] - [0001:000009F6], 0 Gaps
(000F4C)  S_DEFRANGE_REGISTER:MayAvailable rdx
	Range: [0001:000009FE] - [0001:00000A08], 0 Gaps
(000F5C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0068 	  FULL_SCOPE 
(000F64)  S_LOCAL: Param: 000011C6, Params
(000F78)  S_DEFRANGE_REGISTER: r8
	Range: [0001:000009A0] - [0001:000009C3], 0 Gaps
(000F88)  S_DEFRANGE_REGISTER: r15
	Range: [0001:000009C3] - [0001:00000BF6], 0 Gaps
(000F98)  S_LOCAL: Param: 00000603, Context
(000FAC)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:000009C0] - [0001:00000A4F], 0 Gaps
(000FBC)  S_DEFRANGE_REGISTER: r9
	Range: [0001:000009A0] - [0001:000009C0], 0 Gaps
(000FCC)  S_LOCAL: Local: 00001524, pIrp
(000FDC)  S_DEFRANGE_REGISTER: rax
	Range: [0001:00000A44] - [0001:00000A5E], 0 Gaps
(000FEC)  S_DEFRANGE_REGISTER:MayAvailable rax
	Range: [0001:00000A7D] - [0001:00000B97], 2 Gaps (startOffset, length): (001D, A7) (00D9, 1B)
(001004)  S_LOCAL: Local: 0000129E, pDevCtx
(001018)  S_DEFRANGE_REGISTER: r14
	Range: [0001:00000A30] - [0001:00000BF8], 0 Gaps
(001028)  S_LOCAL: Local: 0000155C, interfaceInfo
(001040)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:00000A4F] - [0001:00000BE1], 0 Gaps
(001050)  S_LOCAL: Local: 00000022, i
(00105C)  S_DEFRANGE_REGISTER: esi
	Range: [0001:00000A7F] - [0001:00000BEB], 0 Gaps

(00106C)  S_INLINESITE: Parent: 00000EAC, End: 00001088, Inlinee:             0x11CA
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 83  CodeLengthAndCodeOffset 14 d
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001088)  S_INLINESITE_END

(00108C)  S_INLINESITE: Parent: 00000EAC, End: 000010E8, Inlinee:             0x10E5
          BinaryAnnotations:    CodeLengthAndCodeOffset 25 5e  CodeLengthAndCodeOffset 3 2f
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0010A4)   S_INLINESITE: Parent: 0000108C, End: 000010E4, Inlinee:             0x10E6
           BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 5e  CodeLengthAndCodeOffset 14 11  CodeLengthAndCodeOffset 3 1e
           BinaryAnnotation Length: 12 bytes (1 bytes padding)

(0010C0)    S_LOCAL: Param: 00001097, TypeInfo
(0010D4)    S_DEFRANGE_REGISTER: r8
	Range: [0001:00000A0F] - [0001:00000A23], 0 Gaps

(0010E4)   S_INLINESITE_END

(0010E8)  S_INLINESITE_END

(0010EC)  S_INLINESITE: Parent: 00000EAC, End: 00001104, Inlinee:             0x1191
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 22 1f0
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(001104)  S_INLINESITE_END

(001108)  S_CALLEES: Count: 7
                       0x10EF (0) ,             0x10F5 (0) ,             0x11ED (0) ,             0x11EE (0) , 
                       0x10EF (0) ,             0x11C9 (0) ,             0x10EF (0) 
(00112C)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(00114C)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000009CD] - [0001:00000BCF], 5 Gaps (startOffset, length): (0024, 65) (00A8, 1E) (00F6, 41) (0154, 2D) (0197, 55)
(001170)  S_FRAMEPROC:
          Frame size = 0x00000040 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000018
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(0011AC)  S_ANNOTATION: [0001:00000BB2]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c111 15 "%0 [%!FUNC!] <--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_FILTER"
              4: "{"
              5: "}"

(001264)  S_ANNOTATION: [0001:00000B47]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c102 14 "%0 [%!FUNC!] ERROR:Failed to find BULK IN pipe" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QUEUE"
              4: "{"
              5: "}"

(001338)  S_ANNOTATION: [0001:00000AFD]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c88 13 "%0 [%!FUNC!]Found Bulk IN pipe handle 0x%10!p! for endpoint 0x%11!02X!" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_FILTER"
              4: "{"
              5: "pipeInfo->PipeHandle, ItemPtr -- 10"
              6: "pipeInfo->EndpointAddress, ItemLong -- 11"
              7: "}"

(001478)  S_ANNOTATION: [0001:00000A8C]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c78 12 "%0 [%!FUNC!]Enumerating pipe %10!d! with type 0x%11!X! and address 0x%12!02X! (handle 0x%13!p!)" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_FILTER"
              4: "{"
              5: "i, ItemLong -- 10"
              6: "pipeInfo->PipeType, ItemLong -- 11"
              7: "pipeInfo->EndpointAddress, ItemLong -- 12"
              8: "pipeInfo->PipeHandle, ItemPtr -- 13"
              9: "}"

(001600)  S_ANNOTATION: [0001:00000A4F]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c68 11 "%0 [%!FUNC!]Enumerating %10!d! pipes" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_FILTER"
              4: "{"
              5: "interfaceInfo->NumberOfPipes, ItemLong -- 10"
              6: "}"

(0016F8)  S_ANNOTATION: [0001:000009C6]
              1: "TMF:"
              2: "9fd9018f-c07b-3383-a12a-2352710d4d14 BthPS3PSM // SRC=Filter.c MJ= MN="
              3: "#typev Filter_c59 10 "%0 [%!FUNC!] --> Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_FILTER"
              4: "{"
              5: "}"

(0017B4)  S_REGREL32: rsp+00000060, Type:             0x11BA, Request
(0017CC)  S_REGREL32: rsp+00000068, Type:             0x11C0, Target
(0017E4)  S_REGREL32: rsp+00000070, Type:             0x11C6, Params
(0017FC)  S_REGREL32: rsp+00000078, Type:    T_64PVOID(0603), Context
(001814)  S_CALLSITEINFO: [0001:00000A1D], type =             0x10E8
(001824)  S_CALLSITEINFO: [0001:00000A3E], type =             0x1484
(001834)  S_CALLSITEINFO: [0001:00000BAC], type =             0x1427

(001844) S_END

(001848) S_GPROC32: [0001:000003F8], Cb: 0000003E, Type:             0x14A0, WPP_SF_D
         Parent: 00000000, End: 00001990, Next: 00000000
         Debug start: 0000000B, Debug end: 00000039
         Flags: Do Not Inline, Optimized Debug Info

(001878)  S_LOCAL: Param: 00000023, Logger
(00188C)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000003F8] - [0001:00000431], 0 Gaps
(00189C)  S_LOCAL: Param: 00000021, id
(0018AC)  S_DEFRANGE_REGISTER: dx
	Range: [0001:000003F8] - [0001:0000042B], 0 Gaps
(0018BC)  S_LOCAL: Param: 00001126, TraceGuid
(0018D0)  S_DEFRANGE_REGISTER: r8
	Range: [0001:000003F8] - [0001:00000431], 0 Gaps
(0018E0)  S_LOCAL: Param: 00000075, _a1
(0018F0)  S_DEFRANGE_REGISTER: r9d
	Range: [0001:000003F8] - [0001:0000040E], 0 Gaps
(001900)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0068 	  FULL_SCOPE 
(001908)  S_FRAMEPROC:
          Frame size = 0x00000048 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(001928)  S_REGREL32: rsp+00000050, Type:      T_UQUAD(0023), Logger
(001940)  S_REGREL32: rsp+00000058, Type:     T_USHORT(0021), id
(001954)  S_REGREL32: rsp+00000060, Type:             0x1126, TraceGuid
(00196C)  S_REGREL32: rsp+00000068, Type:      T_UINT4(0075), _a1
(001980)  S_CALLSITEINFO: [0001:0000042B], type =             0x114A

(001990) S_END

(001994) S_GPROC32: [0001:00000BFC], Cb: 00000067, Type:             0x1561, WPP_SF_dDDq
         Parent: 00000000, End: 00001BA0, Next: 00000000
         Debug start: 0000000B, Debug end: 00000062
         Flags: Do Not Inline, Optimized Debug Info

(0019C8)  S_LOCAL: Param: 00000023, Logger
(0019DC)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000BFC] - [0001:00000C5E], 0 Gaps
(0019EC)  S_LOCAL: Param: 00000021, id
(0019FC)  S_DEFRANGE_REGISTER: dx
	Range: [0001:00000BFC] - [0001:00000C58], 0 Gaps
(001A0C)  S_LOCAL: Param: 00001126, TraceGuid
(001A20)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00000BFC] - [0001:00000C5E], 0 Gaps
(001A30)  S_LOCAL: Param: 00000074, _a1
(001A40)  S_DEFRANGE_REGISTER: r9d
	Range: [0001:00000BFC] - [0001:00000C12], 0 Gaps
(001A50)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0098 	  FULL_SCOPE 
(001A58)  S_LOCAL: Param: 00000075, _a2
(001A68)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0001:00000BFC] - [0001:00000BFD], 0 Gaps
(001A7C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00A0 	  FULL_SCOPE 
(001A84)  S_LOCAL: Param: 00000075, _a3
(001A94)  S_DEFRANGE_REGISTER_REL: [rsp +  0030 ]
	Range: [0001:00000BFC] - [0001:00000BFD], 0 Gaps
(001AA8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00A8 	  FULL_SCOPE 
(001AB0)  S_LOCAL: Param: 000012FC, _a4
(001AC0)  S_DEFRANGE_REGISTER_REL: [rsp +  0038 ]
	Range: [0001:00000BFC] - [0001:00000BFD], 0 Gaps
(001AD4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00B0 	  FULL_SCOPE 
(001ADC)  S_FRAMEPROC:
          Frame size = 0x00000078 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(001AFC)  S_REGREL32: rsp+00000080, Type:      T_UQUAD(0023), Logger
(001B14)  S_REGREL32: rsp+00000088, Type:     T_USHORT(0021), id
(001B28)  S_REGREL32: rsp+00000090, Type:             0x1126, TraceGuid
(001B40)  S_REGREL32: rsp+00000098, Type:       T_INT4(0074), _a1
(001B54)  S_REGREL32: rsp+000000A0, Type:      T_UINT4(0075), _a2
(001B68)  S_REGREL32: rsp+000000A8, Type:      T_UINT4(0075), _a3
(001B7C)  S_REGREL32: rsp+000000B0, Type:             0x12FC, _a4
(001B90)  S_CALLSITEINFO: [0001:00000C58], type =             0x114A

(001BA0) S_END

(001BA4) S_GPROC32: [0001:00000C64], Cb: 0000004E, Type:             0x1566, WPP_SF_qD
         Parent: 00000000, End: 00001D30, Next: 00000000
         Debug start: 0000000B, Debug end: 00000049
         Flags: Do Not Inline, Optimized Debug Info

(001BD8)  S_LOCAL: Param: 00000023, Logger
(001BEC)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000C64] - [0001:00000CAD], 0 Gaps
(001BFC)  S_LOCAL: Param: 00000021, id
(001C0C)  S_DEFRANGE_REGISTER: dx
	Range: [0001:00000C64] - [0001:00000CA7], 0 Gaps
(001C1C)  S_LOCAL: Param: 00001126, TraceGuid
(001C30)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00000C64] - [0001:00000CAD], 0 Gaps
(001C40)  S_LOCAL: Param: 000012FC, _a1
(001C50)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00000C64] - [0001:00000C7A], 0 Gaps
(001C60)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0078 	  FULL_SCOPE 
(001C68)  S_LOCAL: Param: 00000075, _a2
(001C78)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0001:00000C64] - [0001:00000C65], 0 Gaps
(001C8C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0080 	  FULL_SCOPE 
(001C94)  S_FRAMEPROC:
          Frame size = 0x00000058 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(001CB4)  S_REGREL32: rsp+00000060, Type:      T_UQUAD(0023), Logger
(001CCC)  S_REGREL32: rsp+00000068, Type:     T_USHORT(0021), id
(001CE0)  S_REGREL32: rsp+00000070, Type:             0x1126, TraceGuid
(001CF8)  S_REGREL32: rsp+00000078, Type:             0x12FC, _a1
(001D0C)  S_REGREL32: rsp+00000080, Type:      T_UINT4(0075), _a2
(001D20)  S_CALLSITEINFO: [0001:00000CA7], type =             0x114A

(001D30) S_END

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"


(000004) S_OBJNAME: Signature: 00000000, C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj

(000050) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 43, Build = 34808, QFE = 0
         Backend Version: Major = 19, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) Optimizing Compiler

(00008C) S_BUILDINFO:             0x11C5

(000094) S_GPROC32: [0001:00000CC0], Cb: 000004CA, Type:             0x1283, BthPS3PSMEvtIoInternalDeviceControl
         Parent: 00000000, End: 00000D7C, Next: 00000000
         Debug start: 00000021, Debug end: 000004A8
         Flags: Optimized Debug Info

(0000E0)  S_LOCAL: Param: 000011A9, Queue
(0000F0)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000CC0] - [0001:00000CEE], 0 Gaps
(000100)  S_DEFRANGE_REGISTER: rsi
	Range: [0001:00000CEE] - [0001:000010D8], 2 Gaps (startOffset, length): (01AB, 43) (02F7, 30)
(000118)  S_DEFRANGE_REGISTER:MayAvailable rsi
	Range: [0001:00001168] - [0001:00001189], 0 Gaps
(000128)  S_LOCAL: Param: 000011BA, Request
(00013C)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:00000CEB] - [0001:0000117E], 0 Gaps
(00014C)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00000CC0] - [0001:00000CEB], 0 Gaps
(00015C)  S_LOCAL: Param: 00000023, OutputBufferLength
(00017C)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00000CC0] - [0001:00000D05], 0 Gaps
(00018C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0080 	  FULL_SCOPE 
(000194)  S_LOCAL: Param: 00000023, InputBufferLength
(0001B0)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00000CC0] - [0001:00000D05], 0 Gaps
(0001C0)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0088 	  FULL_SCOPE 
(0001C8)  S_LOCAL: Param: 00000022, IoControlCode
(0001E0)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0001:00000CC0] - [0001:00000CC1], 0 Gaps
(0001F4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0090 	  FULL_SCOPE 
(0001FC)  S_LOCAL: Local: 000013BC, options
(000210)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(000218)  S_LOCAL: Local: 00000020, ret
(000228)  S_DEFRANGE_REGISTER: al
	Range: [0001:00000E71] - [0001:000010BF], 2 Gaps (startOffset, length): (000F, 13D) (015B, E4)
(000240)  S_DEFRANGE_REGISTER:MayAvailable al
	Range: [0001:00001168] - [0001:0000118A], 0 Gaps
(000250)  S_LOCAL: Local: 00001459, device
(000264)  S_DEFRANGE_REGISTER: rbp
	Range: [0001:00000D0F] - [0001:00001182], 0 Gaps
(000274)  S_LOCAL: Local: 0000129E, pContext
(000288)  S_DEFRANGE_REGISTER: rdi
	Range: [0001:00000D3A] - [0001:000010E6], 2 Gaps (startOffset, length): (0065, 13D) (01B0, 12B)
(0002A0)  S_DEFRANGE_REGISTER:MayAvailable rdi
	Range: [0001:00001168] - [0001:00001188], 0 Gaps
(0002B0)  S_LOCAL: Local: 00000012, status
(0002C4)  S_DEFRANGE_REGISTER: esi
	Range: [0001:00000E99] - [0001:00001168], 2 Gaps (startOffset, length): (0043, 109) (017C, C3)
(0002DC)  S_DEFRANGE_REGISTER:MayAvailable esi
	Range: [0001:00001168] - [0001:00001189], 0 Gaps
(0002EC)  S_LOCAL: Local: 00001524, irp
(0002FC)  S_DEFRANGE_REGISTER: rax
	Range: [0001:00000D4E] - [0001:00000D71], 0 Gaps
(00030C)  S_DEFRANGE_REGISTER:MayAvailable rax
	Range: [0001:00001015] - [0001:0000101C], 0 Gaps
(00031C)  S_LOCAL: Local: 00001527, urb
(00032C)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00000D6D] - [0001:00000F0C], 1 Gaps (startOffset, length): (004C, 123)
(000340)  S_DEFRANGE_REGISTER:MayAvailable rdx
	Range: [0001:00000DC5] - [0001:0000101F], 2 Gaps (startOffset, length): (000A, 142) (0156, FA)

(000358)  S_INLINESITE: Parent: 00000094, End: 00000370, Inlinee:             0x11CA
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 6d  CodeLengthAndCodeOffset 14 d
          BinaryAnnotation Length: 8 bytes (0 bytes padding)

(000370)  S_INLINESITE_END

(000374)  S_INLINESITE: Parent: 00000094, End: 000003D4, Inlinee:             0x10E5
          BinaryAnnotations:    CodeLengthAndCodeOffset 7 45  CodeLengthAndCodeOffset 1e a  CodeLengthAndCodeOffset 3 28
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(000390)   S_INLINESITE: Parent: 00000374, End: 000003D0, Inlinee:             0x10E6
           BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 45  CodeLengthAndCodeOffset 17 11  CodeLengthAndCodeOffset 3 21
           BinaryAnnotation Length: 12 bytes (1 bytes padding)

(0003AC)    S_LOCAL: Param: 00001097, TypeInfo
(0003C0)    S_DEFRANGE_REGISTER: r8
	Range: [0001:00000D16] - [0001:00000D2D], 0 Gaps

(0003D0)   S_INLINESITE_END

(0003D4)  S_INLINESITE_END

(0003D8)  S_INLINESITE: Parent: 00000094, End: 000003F4, Inlinee:             0x11CC
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 21  CodeLengthAndCodeOffset 17 d  CodeLengthAndCodeOffset 3 1e
          BinaryAnnotation Length: 12 bytes (1 bytes padding)

(0003F4)  S_INLINESITE_END

(0003F8)  S_INLINESITE: Parent: 00000094, End: 00000410, Inlinee:             0x11D0
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 27 2d6
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000410)  S_INLINESITE_END

(000414)  S_INLINESITE: Parent: 00000094, End: 0000042C, Inlinee:             0x11D5
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 21 2b5
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(00042C)  S_INLINESITE_END

(000430)  S_INLINESITE: Parent: 00000094, End: 00000448, Inlinee:             0x11CC
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1e 297
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000448)  S_INLINESITE_END

(00044C)  S_INLINESITE: Parent: 00000094, End: 00000464, Inlinee:             0x11DA
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 28 26f
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000464)  S_INLINESITE_END

(000468)  S_INLINESITE: Parent: 00000094, End: 00000480, Inlinee:             0x11DD
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1e 251
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000480)  S_INLINESITE_END

(000484)  S_INLINESITE: Parent: 00000094, End: 0000049C, Inlinee:             0x11E2
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 20 305
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(00049C)  S_INLINESITE_END

(0004A0)  S_INLINESITE: Parent: 00000094, End: 000004B8, Inlinee:             0x11D0
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 27 18a
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0004B8)  S_INLINESITE_END

(0004BC)  S_INLINESITE: Parent: 00000094, End: 000004D4, Inlinee:             0x11D5
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 21 169
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0004D4)  S_INLINESITE_END

(0004D8)  S_INLINESITE: Parent: 00000094, End: 000004F0, Inlinee:             0x11CC
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1e 14b
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0004F0)  S_INLINESITE_END

(0004F4)  S_INLINESITE: Parent: 00000094, End: 0000050C, Inlinee:             0x11DA
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 28 123
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(00050C)  S_INLINESITE_END

(000510)  S_INLINESITE: Parent: 00000094, End: 00000528, Inlinee:             0x11DD
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1e 105
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000528)  S_INLINESITE_END

(00052C)  S_INLINESITE: Parent: 00000094, End: 00000544, Inlinee:             0x11E2
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 20 1b9
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000544)  S_INLINESITE_END

(000548)  S_INLINESITE: Parent: 00000094, End: 00000560, Inlinee:             0x11D0
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 29 3c7
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000560)  S_INLINESITE_END

(000564)  S_INLINESITE: Parent: 00000094, End: 0000057C, Inlinee:             0x11D5
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 21 3a6
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(00057C)  S_INLINESITE_END

(000580)  S_INLINESITE: Parent: 00000094, End: 0000059C, Inlinee:             0x11CC
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 11 373  CodeLengthAndCodeOffset d 26
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(00059C)  S_INLINESITE_END

(0005A0)  S_INLINESITE: Parent: 00000094, End: 000005BC, Inlinee:             0x11E6
          BinaryAnnotations:    LineOffset 1  CodeOffset 384  CodeOffsetAndLineOffset 25  LineOffset 1
                                CodeLengthAndCodeOffset 8 8
          BinaryAnnotation Length: 12 bytes (0 bytes padding)

(0005BC)  S_INLINESITE_END

(0005C0)  S_INLINESITE: Parent: 00000094, End: 000005D8, Inlinee:             0x11DD
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1e 355
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0005D8)  S_INLINESITE_END

(0005DC)  S_INLINESITE: Parent: 00000094, End: 000005F4, Inlinee:             0x11E2
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 20 3f8
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0005F4)  S_INLINESITE_END

(0005F8)  S_CALLEES: Count: 5
                       0x11E9 (0) ,             0x10F5 (0) ,             0x10EF (0) ,             0x10F5 (0) , 
                       0x10F6 (0) 
(000614)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(000634)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00000D98] - [0001:000010FD], 4 Gaps (startOffset, length): (001D, EB) (0130, 1B) (0168, EC) (027D, CA)
(000654)  S_FRAMEPROC:
          Frame size = 0x00000050 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000018
          Address of exception handler = 0000:00000000
          Function info: gschecks asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214300)
Error: unknown symbol record type 1168!

(0006AC)  S_FRAMECOOKIE: rsp+00000040, Type: , Flags: 19
(0006B8)  S_ANNOTATION: [0001:000010D8]
              1: "TMF:"
              2: "324ed36d-6949-3aa1-d581-3e2dc9652ec2 BthPS3PSM // SRC=Queue.c MJ= MN="
              3: "#typev Queue_c236 15 "%0 [%!FUNC!] ERROR:WdfRequestSend failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QUEUE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0007B0)  S_ANNOTATION: [0001:00000FE5]
              1: "TMF:"
              2: "324ed36d-6949-3aa1-d581-3e2dc9652ec2 BthPS3PSM // SRC=Queue.c MJ= MN="
              3: "#typev Queue_c151 12 "%0 [%!FUNC!] ERROR:WdfRequestSend failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QUEUE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0008A8)  S_ANNOTATION: [0001:00000EDC]
              1: "TMF:"
              2: "324ed36d-6949-3aa1-d581-3e2dc9652ec2 BthPS3PSM // SRC=Queue.c MJ= MN="
              3: "#typev Queue_c130 11 "%0 [%!FUNC!]<< URB_FUNCTION_SELECT_CONFIGURATION" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QUEUE"
              4: "{"
              5: "}"

(00097C)  S_ANNOTATION: [0001:00000E99]
              1: "TMF:"
              2: "324ed36d-6949-3aa1-d581-3e2dc9652ec2 BthPS3PSM // SRC=Queue.c MJ= MN="
              3: "#typev Queue_c197 14 "%0 [%!FUNC!] ERROR:WdfRequestSend failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QUEUE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(000A74)  S_ANNOTATION: [0001:00000D91]
              1: "TMF:"
              2: "324ed36d-6949-3aa1-d581-3e2dc9652ec2 BthPS3PSM // SRC=Queue.c MJ= MN="
              3: "#typev Queue_c174 13 "%0 [%!FUNC!]>> Bulk IN transfer (PipeHandle: %10!p!)" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_QUEUE"
              4: "{"
              5: "urb->UrbBulkOrInterruptTransfer.PipeHandle, ItemPtr -- 10"
              6: "}"

(000B88)  S_REGREL32: rsp+00000070, Type:             0x11A9, Queue
(000B9C)  S_REGREL32: rsp+00000078, Type:             0x11BA, Request
(000BB4)  S_REGREL32: rsp+00000080, Type:      T_UQUAD(0023), OutputBufferLength
(000BD8)  S_REGREL32: rsp+00000088, Type:      T_UQUAD(0023), InputBufferLength
(000BF8)  S_REGREL32: rsp+00000090, Type:      T_ULONG(0022), IoControlCode
(000C14)  S_REGREL32: rsp+00000030, Type:             0x13BC, options
(000C2C)  S_CALLSITEINFO: [0001:00000CFF], type =             0x1457
(000C3C)  S_CALLSITEINFO: [0001:00000D27], type =             0x10E8
(000C4C)  S_CALLSITEINFO: [0001:00000D48], type =             0x1484
(000C5C)  S_CALLSITEINFO: [0001:00000DDD], type =             0x12D7
(000C6C)  S_CALLSITEINFO: [0001:00000E05], type =             0x11DB
(000C7C)  S_CALLSITEINFO: [0001:00000E23], type =             0x1457
(000C8C)  S_CALLSITEINFO: [0001:00000E44], type =             0x145C
(000C9C)  S_CALLSITEINFO: [0001:00000E6B], type =             0x1295
(000CAC)  S_CALLSITEINFO: [0001:00000E91], type =             0x12CD
(000CBC)  S_CALLSITEINFO: [0001:00000F29], type =             0x12D7
(000CCC)  S_CALLSITEINFO: [0001:00000F51], type =             0x11DB
(000CDC)  S_CALLSITEINFO: [0001:00000F6F], type =             0x1457
(000CEC)  S_CALLSITEINFO: [0001:00000F90], type =             0x145C
(000CFC)  S_CALLSITEINFO: [0001:00000FB7], type =             0x1295
(000D0C)  S_CALLSITEINFO: [0001:00000FDD], type =             0x12CD
(000D1C)  S_CALLSITEINFO: [0001:0000102D], type =             0x12D7
(000D2C)  S_CALLSITEINFO: [0001:00001060], type =             0x1457
(000D3C)  S_CALLSITEINFO: [0001:00001081], type =             0x145C
(000D4C)  S_CALLSITEINFO: [0001:000010AA], type =             0x1295
(000D5C)  S_CALLSITEINFO: [0001:000010D0], type =             0x12CD
(000D6C)  S_CALLSITEINFO: [0001:00001162], type =             0x1427

(000D7C) S_END

(000D80) S_GPROC32: [0005:00001098], Cb: 0000010B, Type:             0x10BE, BthPS3PSM_QueueInitialize
         Parent: 00000000, End: 00001070, Next: 00000000
         Debug start: 00000009, Debug end: 00000102
         Flags: Optimized Debug Info

(000DC4)  S_LOCAL: Param: 000010BA, Device
(000DD8)  S_DEFRANGE_REGISTER: rbx
	Range: [0005:000010A6] - [0005:0000111D], 0 Gaps
(000DE8)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00001098] - [0005:000010A6], 0 Gaps
(000DF8)  S_LOCAL: Local: 000011A9, queue
(000E08)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00A8 
	Range: [0005:0000111B] - [0005:000011A3], 0 Gaps
(000E18)  S_LOCAL: Local: 00000012, status
(000E2C)  S_DEFRANGE_REGISTER: ebx
	Range: [0005:0000111D] - [0005:000011A2], 0 Gaps
(000E3C)  S_LOCAL: Local: 000012BF, queueConfig
(000E54)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 

(000E5C)  S_INLINESITE: Parent: 00000D80, End: 00000E7C, Inlinee:             0x1169
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 14 30  CodeLengthAndCodeOffset 3 1c  CodeLengthAndCodeOffset 3 8
                                CodeLengthAndCodeOffset 1b 16
          BinaryAnnotation Length: 16 bytes (2 bytes padding)

(000E7C)  S_INLINESITE_END

(000E80)  S_INLINESITE: Parent: 00000D80, End: 00000EB0, Inlinee:             0x116D
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 2 9  CodeLengthAndCodeOffset e 5  LineOffset 2
                                CodeLengthAndCodeOffset 8 15  LineOffset 1  CodeLengthAndCodeOffset 8 21  LineOffset 1
                                CodeLengthAndCodeOffset 5 b  CodeOffsetAndLineOffset 28  LineOffset 2  CodeLengthAndCodeOffset b 8
          BinaryAnnotation Length: 32 bytes (2 bytes padding)

(000EB0)  S_INLINESITE_END

(000EB4)  S_CALLEES: Count: 2
                       0x10F5 (0) ,             0x10F6 (0) 
(000EC4)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(000EE4)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:0000112B] - [0005:00001149], 0 Gaps
(000EF4)  S_FRAMEPROC:
          Frame size = 0x00000090 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(000F24)  S_ANNOTATION: [0005:00001121]
              1: "TMF:"
              2: "324ed36d-6949-3aa1-d581-3e2dc9652ec2 BthPS3PSM // SRC=Queue.c MJ= MN="
              3: "#typev Queue_c79 10 "%0 [%!FUNC!] ERROR:WdfIoQueueCreate failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_QUEUE"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(001018)  S_REGREL32: rsp+000000A0, Type:             0x10BA, Device
(001030)  S_REGREL32: rsp+000000A8, Type:             0x11A9, queue
(001044)  S_REGREL32: rsp+00000030, Type:             0x12BF, queueConfig
(001060)  S_CALLSITEINFO: [0005:00001115], type =             0x11B3

(001070) S_END

(001074) S_GPROC32: [0001:0000118C], Cb: 0000003E, Type:             0x1554, WPP_SF_q
         Parent: 00000000, End: 000011BC, Next: 00000000
         Debug start: 0000000B, Debug end: 00000039
         Flags: Do Not Inline, Optimized Debug Info

(0010A4)  S_LOCAL: Param: 00000023, Logger
(0010B8)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:0000118C] - [0001:000011C5], 0 Gaps
(0010C8)  S_LOCAL: Param: 00000021, id
(0010D8)  S_DEFRANGE_REGISTER: dx
	Range: [0001:0000118C] - [0001:000011BF], 0 Gaps
(0010E8)  S_LOCAL: Param: 00001126, TraceGuid
(0010FC)  S_DEFRANGE_REGISTER: r8
	Range: [0001:0000118C] - [0001:000011C5], 0 Gaps
(00110C)  S_LOCAL: Param: 000012FC, _a1
(00111C)  S_DEFRANGE_REGISTER: r9
	Range: [0001:0000118C] - [0001:000011A2], 0 Gaps
(00112C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0068 	  FULL_SCOPE 
(001134)  S_FRAMEPROC:
          Frame size = 0x00000048 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(001154)  S_REGREL32: rsp+00000050, Type:      T_UQUAD(0023), Logger
(00116C)  S_REGREL32: rsp+00000058, Type:     T_USHORT(0021), id
(001180)  S_REGREL32: rsp+00000060, Type:             0x1126, TraceGuid
(001198)  S_REGREL32: rsp+00000068, Type:             0x12FC, _a1
(0011AC)  S_CALLSITEINFO: [0001:000011BF], type =             0x114A

(0011BC) S_END

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"


(000004) S_OBJNAME: Signature: 00000000, C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj

(000054) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 43, Build = 34808, QFE = 0
         Backend Version: Major = 19, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) Optimizing Compiler

(000090) S_BUILDINFO:             0x1155

(000098) S_GPROC32: [0005:000011A4], Cb: 00000560, Type:             0x10BE, BthPS3PSM_CreateControlDevice
         Parent: 00000000, End: 00000D5C, Next: 00000000
         Debug start: 00000029, Debug end: 0000053B
         Flags: Optimized Debug Info

(0000E0)  S_LOCAL: Param: 000010BA, Device
(0000F4)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:000011A4] - [0005:000011DE], 0 Gaps
(000104)  S_DEFRANGE_REGISTER: rdi
	Range: [0005:000011DE] - [0005:000016FB], 0 Gaps
(000114)  S_LOCAL: Local: 000011A9, queue
(000124)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0060 	  FULL_SCOPE 
(00012C)  S_LOCAL: Local: 000010B7, ntDeviceName
(000144)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0040 	  FULL_SCOPE 
(00014C)  S_LOCAL: Local: 000010C1, pInit
(00015C)  S_DEFRANGE_REGISTER: rdx
	Range: [0005:0000165E] - [0005:0000167E], 0 Gaps
(00016C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0038 	  FULL_SCOPE 
(000174)  S_LOCAL: Local: 0000142A, ntDeviceName_buffer
(000194)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0110 	  FULL_SCOPE 
(00019C)  S_LOCAL: Local: 000010BA, controlDevice
(0001B4)  S_DEFRANGE_REGISTER: rdx
	Range: [0005:00001687] - [0005:000016A7], 0 Gaps
(0001C4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(0001CC)  S_LOCAL: Local: 000012BF, ioQueueConfig
(0001E4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0070 	  FULL_SCOPE 
(0001EC)  S_LOCAL: Local: 000010B7, symbolicLinkName
(000208)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0050 	  FULL_SCOPE 
(000210)  S_LOCAL: Local: 00000012, status
(000224)  S_DEFRANGE_REGISTER: ebx
	Range: [0005:0000138B] - [0005:000016F7], 2 Gaps (startOffset, length): (0070, 4A) (01E4, 67)
(00023C)  S_LOCAL: Local: 0000142C, symbolicLinkName_buffer
(000260)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00D0 	  FULL_SCOPE 

(000268)  S_INLINESITE: Parent: 00000098, End: 00000284, Inlinee:             0x10FF
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1f 119  CodeLengthAndCodeOffset 2 26
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(000284)  S_INLINESITE_END

(000288)  S_INLINESITE: Parent: 00000098, End: 000002A0, Inlinee:             0x10E4
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 25 f4
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0002A0)  S_INLINESITE_END

(0002A4)  S_INLINESITE: Parent: 00000098, End: 000002C0, Inlinee:             0x10E8
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 138  CodeLengthAndCodeOffset 1b 9
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(0002C0)  S_INLINESITE_END

(0002C4)  S_INLINESITE: Parent: 00000098, End: 000002DC, Inlinee:             0x115B
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 28 1b0
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0002DC)  S_INLINESITE_END

(0002E0)  S_INLINESITE: Parent: 00000098, End: 000002F8, Inlinee:             0x115E
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1e 192
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0002F8)  S_INLINESITE_END

(0002FC)  S_INLINESITE: Parent: 00000098, End: 00000314, Inlinee:             0x1160
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 27 27a
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000314)  S_INLINESITE_END

(000318)  S_INLINESITE: Parent: 00000098, End: 00000330, Inlinee:             0x1164
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 23 257
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000330)  S_INLINESITE_END

(000334)  S_INLINESITE: Parent: 00000098, End: 0000034C, Inlinee:             0x10E1
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 2a 2f6
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(00034C)  S_INLINESITE_END

(000350)  S_INLINESITE: Parent: 00000098, End: 00000368, Inlinee:             0x1168
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 27 344
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000368)  S_INLINESITE_END

(00036C)  S_INLINESITE: Parent: 00000098, End: 0000038C, Inlinee:             0x1169
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 5 3da  CodeLengthAndCodeOffset 11 10  CodeLengthAndCodeOffset 3 15
                                CodeLengthAndCodeOffset 1b 18
          BinaryAnnotation Length: 16 bytes (1 bytes padding)

(00038C)  S_INLINESITE_END

(000390)  S_INLINESITE: Parent: 00000098, End: 000003B4, Inlinee:             0x116D
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 14 3c6  LineOffset 2  CodeLengthAndCodeOffset 4 35
                                CodeOffsetAndLineOffset 27  CodeOffsetAndLineOffset 28  LineOffset 1  CodeLengthAndCodeOffset 8 5
          BinaryAnnotation Length: 20 bytes (0 bytes padding)

(0003B4)  S_INLINESITE_END

(0003B8)  S_INLINESITE: Parent: 00000098, End: 000003D0, Inlinee:             0x116E
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 20 489
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0003D0)  S_INLINESITE_END

(0003D4)  S_INLINESITE: Parent: 00000098, End: 000003EC, Inlinee:             0x1170
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1b 4bf
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0003EC)  S_INLINESITE_END

(0003F0)  S_INLINESITE: Parent: 00000098, End: 00000408, Inlinee:             0x10EE
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1b 4e8
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(000408)  S_INLINESITE_END

(00040C)  S_CALLEES: Count: 8
                       0x10EF (0) ,             0x10EF (0) ,             0x10F5 (0) ,             0x10F6 (0) , 
                       0x10F5 (0) ,             0x10F5 (0) ,             0x10F5 (0) ,             0x10F5 (0) 
           
(000434)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(000454)  S_DEFRANGE_REGISTER: rax
	Range: [0005:00001450] - [0005:00001481], 0 Gaps
(000464)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00001267] - [0005:000016CD], 5 Gaps (startOffset, length): (0024, 88) (00C2, 69) (0141, 172) (02CF, AB) (0396, BA)
(000488)  S_FRAMEPROC:
          Frame size = 0x00000150 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000018
          Address of exception handler = 0000:00000000
          Function info: gschecks asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214300)
Error: unknown symbol record type 1168!

(0004E8)  S_FRAMECOOKIE: rsp+00000148, Type: , Flags: 19
(0004F4)  S_ANNOTATION: [0005:000016B0]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c229 16 "%0 [%!FUNC!] <-- Exit <status=%10!s!>" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0005E4)  S_ANNOTATION: [0005:000015DA]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c195 15 "%0 [%!FUNC!] ERROR:WdfIoQueueCreate failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0006E0)  S_ANNOTATION: [0005:00001513]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c168 14 "%0 [%!FUNC!] ERROR:WdfDeviceCreateSymbolicLink failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0007E8)  S_ANNOTATION: [0005:00001449]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c139 13 "%0 [%!FUNC!] ERROR:WdfDeviceInitAssignName failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0008EC)  S_ANNOTATION: [0005:0000138B]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c117 12 "%0 [%!FUNC!] ERROR:WdfControlDeviceInitAllocate failed with %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0009F4)  S_ANNOTATION: [0005:0000130C]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c101 11 "%0 [%!FUNC!]Creating Control Device" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "}"

(000AC8)  S_ANNOTATION: [0005:00001260]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c74 10 "%0 [%!FUNC!] --> Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "}"

(000B8C)  S_REGREL32: rsp+00000170, Type:             0x10BA, Device
(000BA4)  S_REGREL32: rsp+00000060, Type:             0x11A9, queue
(000BB8)  S_REGREL32: rsp+00000040, Type:             0x10B7, ntDeviceName
(000BD4)  S_REGREL32: rsp+00000038, Type:             0x10C1, pInit
(000BE8)  S_REGREL32: rsp+00000110, Type:             0x142A, ntDeviceName_buffer
(000C0C)  S_REGREL32: rsp+00000030, Type:             0x10BA, controlDevice
(000C28)  S_REGREL32: rsp+00000070, Type:             0x12BF, ioQueueConfig
(000C44)  S_REGREL32: rsp+00000050, Type:             0x10B7, symbolicLinkName
(000C64)  S_REGREL32: rsp+000000D0, Type:             0x142C, symbolicLinkName_buffer
(000C8C)  S_CALLSITEINFO: [0005:000012B7], type =             0x11D0
(000C9C)  S_CALLSITEINFO: [0005:000012D6], type =             0x1203
(000CAC)  S_CALLSITEINFO: [0005:000012FA], type =             0x11F5
(000CBC)  S_CALLSITEINFO: [0005:0000134E], type =             0x135F
(000CCC)  S_CALLSITEINFO: [0005:00001376], type =             0x1414
(000CDC)  S_CALLSITEINFO: [0005:00001418], type =             0x13F2
(000CEC)  S_CALLSITEINFO: [0005:0000143D], type =             0x134E
(000CFC)  S_CALLSITEINFO: [0005:000014BC], type =             0x115D
(000D0C)  S_CALLSITEINFO: [0005:00001507], type =             0x138B
(000D1C)  S_CALLSITEINFO: [0005:000015CE], type =             0x11B3
(000D2C)  S_CALLSITEINFO: [0005:00001647], type =             0x1358
(000D3C)  S_CALLSITEINFO: [0005:00001678], type =             0x10C5
(000D4C)  S_CALLSITEINFO: [0005:000016A1], type =             0x1123

(000D5C) S_END

(000D60) S_GPROC32: [0005:00001704], Cb: 00000070, Type:             0x10D0, BthPS3PSM_DeleteControlDevice
         Parent: 00000000, End: 00000F7C, Next: 00000000
         Debug start: 00000004, Debug end: 0000006B
         Flags: Optimized Debug Info

(000DA8)  S_LOCAL: Param: 000010BA, Device
(000DBC)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:00001704] - [0005:0000170F], 0 Gaps
(000DCC)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 

(000DD4)  S_INLINESITE: Parent: 00000D60, End: 00000DEC, Inlinee:             0x10EE
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1b 45
          BinaryAnnotation Length: 8 bytes (3 bytes padding)

(000DEC)  S_INLINESITE_END

(000DF0)  S_CALLEES: Count: 1
                       0x10EF (0) 
(000DFC)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(000E1C)  S_DEFRANGE_REGISTER: rcx
	Range: [0005:0000170F] - [0005:0000172C], 0 Gaps
(000E2C)  S_LOCAL: Local: 000010BA, global, ControlDevice
(000E44)  S_DEFRANGE_REGISTER: rdx
	Range: [0005:00001744] - [0005:00001764], 0 Gaps
(000E54)  S_FRAMEPROC:
          Frame size = 0x00000028 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(000E80)  S_ANNOTATION: [0005:00001708]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c247 17 "%0 [%!FUNC!]Deleting Control Device" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "}"

(000F54)  S_REGREL32: rsp+00000030, Type:             0x10BA, Device
(000F6C)  S_CALLSITEINFO: [0005:0000175E], type =             0x1123

(000F7C) S_END

(000F80) S_GPROC32: [0001:000011D0], Cb: 00000287, Type:             0x136F, BthPS3PSM_EvtSaveConfigToRegistry
         Parent: 00000000, End: 00001754, Next: 00000000
         Debug start: 00000027, Debug end: 00000260
         Flags: Optimized Debug Info

(000FCC)  S_LOCAL: Param: 00001369, WorkItem
(000FE0)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000011D0] - [0001:00001201], 0 Gaps
(000FF0)  S_DEFRANGE_REGISTER: rsi
	Range: [0001:00001201] - [0001:0000144D], 0 Gaps
(001000)  S_LOCAL: Local: 00001221, patchPSMRegValue_buffer
(001024)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0040 	  FULL_SCOPE 
(00102C)  S_LOCAL: Local: 00001459, device
(001040)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00001222] - [0001:0000123D], 0 Gaps
(001050)  S_LOCAL: Local: 0000129E, pDevCtx
(001064)  S_DEFRANGE_REGISTER: rdi
	Range: [0001:0000124D] - [0001:00001451], 0 Gaps
(001074)  S_LOCAL: Local: 00000012, status
(001088)  S_DEFRANGE_REGISTER: ebx
	Range: [0001:000012ED] - [0001:00001449], 0 Gaps
(001098)  S_LOCAL: Local: 000010B7, patchPSMRegValue
(0010B4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(0010BC)  S_LOCAL: Local: 00001225, instanceIdString
(0010D8)  S_DEFRANGE_REGISTER: rax
	Range: [0001:000013BC] - [0001:000013E4], 0 Gaps
(0010E8)  S_DEFRANGE_REGISTER:MayAvailable rax
	Range: [0001:000013E4] - [0001:000013EB], 0 Gaps

(0010F8)  S_INLINESITE: Parent: 00000F80, End: 00001154, Inlinee:             0x1175
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset c f3  CodeLengthAndCodeOffset 16 14
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001114)   S_LOCAL: Param: 000010A6, Key
(001124)   S_DEFRANGE_REGISTER: rdx
	Range: [0001:000012D7] - [0001:000012EB], 0 Gaps
(001134)   S_LOCAL: Param: 00000022, Value
(001144)   S_DEFRANGE_REGISTER: r9d
	Range: [0001:000012D3] - [0001:000012EB], 0 Gaps

(001154)  S_INLINESITE_END

(001158)  S_INLINESITE: Parent: 00000F80, End: 000011B8, Inlinee:             0x10E5
          BinaryAnnotations:    CodeLengthAndCodeOffset 7 48  CodeLengthAndCodeOffset 1b a  CodeLengthAndCodeOffset 3 28
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001174)   S_INLINESITE: Parent: 00001158, End: 000011B4, Inlinee:             0x10E6
           BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 48  CodeLengthAndCodeOffset 14 11  CodeLengthAndCodeOffset 3 21
           BinaryAnnotation Length: 12 bytes (1 bytes padding)

(001190)    S_LOCAL: Param: 00001097, TypeInfo
(0011A4)    S_DEFRANGE_REGISTER: r8
	Range: [0001:00001229] - [0001:0000123D], 0 Gaps

(0011B4)   S_INLINESITE_END

(0011B8)  S_INLINESITE_END

(0011BC)  S_INLINESITE: Parent: 00000F80, End: 000011D8, Inlinee:             0x1179
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 27  CodeLengthAndCodeOffset 17 a  CodeLengthAndCodeOffset 3 1e
          BinaryAnnotation Length: 12 bytes (1 bytes padding)

(0011D8)  S_INLINESITE_END

(0011DC)  S_INLINESITE: Parent: 00000F80, End: 000011F4, Inlinee:             0x10EE
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 1e 214
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(0011F4)  S_INLINESITE_END

(0011F8)  S_INLINESITE: Parent: 00000F80, End: 00001238, Inlinee:             0x10EC
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 1ca  CodeLengthAndCodeOffset 14 e
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001214)   S_LOCAL: Param: 00001111, Memory
(001228)   S_DEFRANGE_REGISTER: rdx
	Range: [0001:000013A8] - [0001:000013BC], 0 Gaps

(001238)  S_INLINESITE_END

(00123C)  S_CALLEES: Count: 6
                       0x117C (0) ,             0x10F5 (0) ,             0x10F6 (0) ,             0x10EF (0) , 
                       0x10F7 (0) ,             0x10EF (0) 
(00125C)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(00127C)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:00001289] - [0001:000012A6], 0 Gaps
(00128C)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001373] - [0001:0000141F], 1 Gaps (startOffset, length): (0016, 80)
(0012A0)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:000012F8] - [0001:00001321], 0 Gaps
(0012B0)  S_FRAMEPROC:
          Frame size = 0x00000080 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: gschecks asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214300)
Error: unknown symbol record type 1168!

(0012F0)  S_FRAMECOOKIE: rsp+00000070, Type: , Flags: 19
(0012FC)  S_ANNOTATION: [0001:00001402]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c590 33 "%0 [%!FUNC!] <--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "}"

(0013BC)  S_ANNOTATION: [0001:0000136C]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c574 32 "%0 [%!FUNC!]Settings stored" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "}"

(001484)  S_ANNOTATION: [0001:000012F1]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c565 31 "%0 [%!FUNC!] ERROR:WdfRegistryAssignULong failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(001590)  S_ANNOTATION: [0001:00001282]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c557 30 "%0 [%!FUNC!] --> Entry <IRQL=%10!s!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "KeGetCurrentIrql(), ItemListByte(Low,APC,DPC) -- 10"
              6: "}"

(001694)  S_REGREL32: rsp+00000090, Type:             0x1369, WorkItem
(0016AC)  S_REGREL32: rsp+00000040, Type:             0x1221, patchPSMRegValue_buffer
(0016D4)  S_REGREL32: rsp+00000030, Type:             0x10B7, patchPSMRegValue
(0016F4)  S_CALLSITEINFO: [0001:00001212], type =             0x1402
(001704)  S_CALLSITEINFO: [0001:00001237], type =             0x10E8
(001714)  S_CALLSITEINFO: [0001:000012A6], type =             0x146F
(001724)  S_CALLSITEINFO: [0001:000012E5], type =             0x13C7
(001734)  S_CALLSITEINFO: [0001:000013B6], type =             0x11F0
(001744)  S_CALLSITEINFO: [0001:000013FC], type =             0x1123

(001754) S_END

(001758) S_GPROC32: [0001:00001460], Cb: 00000809, Type:             0x1283, BthPS3PSM_SidebandIoDeviceControl
         Parent: 00000000, End: 00002EA4, Next: 00000000
         Debug start: 00000023, Debug end: 000007E8
         Flags: Optimized Debug Info

(0017A4)  S_LOCAL: Param: 000011A9, Queue
(0017B4)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001460] - [0001:000014A9], 0 Gaps
(0017C4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 00F0 	  FULL_SCOPE 
(0017CC)  S_LOCAL: Param: 000011BA, Request
(0017E0)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00001460] - [0001:00001489], 0 Gaps
(0017F0)  S_DEFRANGE_REGISTER: rsi
	Range: [0001:00001489] - [0001:00001C58], 0 Gaps
(001800)  S_LOCAL: Param: 00000023, OutputBufferLength
(001820)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00001460] - [0001:000014D8], 0 Gaps
(001830)  S_DEFRANGE_REGISTER:MayAvailable r8
	Range: [0001:000014DD] - [0001:00001C06], 4 Gaps (startOffset, length): (0054, A) (007F, 1B5) (0255, 23D) (04B5, 26A)
(001850)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0100 	  FULL_SCOPE 
(001858)  S_LOCAL: Param: 00000023, InputBufferLength
(001874)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00001460] - [0001:000014DD], 0 Gaps
(001884)  S_DEFRANGE_REGISTER:MayAvailable r9
	Range: [0001:000014DD] - [0001:000014E1], 0 Gaps
(001894)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0108 	  FULL_SCOPE 
(00189C)  S_LOCAL: Param: 00000022, IoControlCode
(0018B4)  S_DEFRANGE_REGISTER: r9d
	Range: [0001:000014E1] - [0001:00001983], 3 Gaps (startOffset, length): (0055, 5) (006E, 1C2) (0244, 24A)
(0018D0)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0001:00001460] - [0001:00001461], 0 Gaps
(0018E4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0110 	  FULL_SCOPE 
(0018EC)  S_LOCAL: Local: 000013DB, pEnable
(001900)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0050 	  FULL_SCOPE 
(001908)  S_LOCAL: Local: 00001369, workItem
(00191C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0040 	  FULL_SCOPE 
(001924)  S_LOCAL: Local: 000010BA, device
(001938)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00001A07] - [0001:00001A35], 0 Gaps
(001948)  S_DEFRANGE_REGISTER: rdi
	Range: [0001:000015D2] - [0001:00001918], 3 Gaps (startOffset, length): (010F, C7) (01DB, A) (02FC, 2B)
(001964)  S_DEFRANGE_REGISTER:MayAvailable rdx
	Range: [0001:000017AD] - [0001:00001926], 1 Gaps (startOffset, length): (000A, 161)
(001978)  S_DEFRANGE_REGISTER:MayAvailable rdi
	Range: [0001:000017AD] - [0001:00001C5C], 3 Gaps (startOffset, length): (000A, 117) (014C, 1F) (0192, 2BD)
(001994)  S_LOCAL: Local: 00000023, length
(0019A8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(0019B0)  S_LOCAL: Local: 00001377, wiCfg
(0019C0)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0058 	  FULL_SCOPE 
(0019C8)  S_LOCAL: Local: 00001177, attributes
(0019E0)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0080 	  FULL_SCOPE 
(0019E8)  S_LOCAL: Local: 000011E8, pDevCtx
(0019FC)  S_DEFRANGE_REGISTER: rax
	Range: [0001:00001600] - [0001:000017F3], 1 Gaps (startOffset, length): (0013, 1C9)
(001A10)  S_DEFRANGE_REGISTER: rdi
	Range: [0001:00001A43] - [0001:00001B98], 0 Gaps
(001A20)  S_DEFRANGE_REGISTER:MayAvailable rax
	Range: [0001:00001636] - [0001:00001821], 1 Gaps (startOffset, length): (000D, 1D1)
(001A34)  S_DEFRANGE_REGISTER:MayAvailable rdi
	Range: [0001:000018CE] - [0001:00001C5C], 2 Gaps (startOffset, length): (002B, 1F) (0071, 2BD)
(001A4C)  S_LOCAL: Local: 00000012, status
(001A60)  S_DEFRANGE_REGISTER: ebx
	Range: [0001:00001492] - [0001:00001C54], 2 Gaps (startOffset, length): (01D4, 43) (034F, A1)
(001A78)  S_LOCAL: Local: 00001418, pDisable
(001A8C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0048 	  FULL_SCOPE 
(001A94)  S_LOCAL: Local: 000010B7, linkName
(001AA8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0070 	  FULL_SCOPE 
(001AB0)  S_LOCAL: Local: 00001392, pGet
(001AC0)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0038 	  FULL_SCOPE 

(001AC8)  S_INLINESITE: Parent: 00001758, End: 00001AE0, Inlinee:             0x1182
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 33 2b1
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(001AE0)  S_INLINESITE_END

(001AE4)  S_INLINESITE: Parent: 00001758, End: 00001B48, Inlinee:             0x1102
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 327  CodeLengthAndCodeOffset 17 a
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001B00)   S_LOCAL: Param: 00001022, Collection
(001B18)   S_DEFRANGE_REGISTER: rdx
	Range: [0001:00001787] - [0001:000017A5], 0 Gaps
(001B28)   S_LOCAL: Param: 00000022, Index
(001B38)   S_DEFRANGE_REGISTER: r8d
	Range: [0001:00001791] - [0001:000017A5], 0 Gaps

(001B48)  S_INLINESITE_END

(001B4C)  S_INLINESITE: Parent: 00001758, End: 00001B64, Inlinee:             0x10E4
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 25 2f7
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(001B64)  S_INLINESITE_END

(001B68)  S_INLINESITE: Parent: 00001758, End: 00001B8C, Inlinee:             0x1187
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset b 3b4  CodeLengthAndCodeOffset 4 d  CodeLengthAndCodeOffset 4 8
                                CodeLengthAndCodeOffset 7 2a  CodeLengthAndCodeOffset f 20
          BinaryAnnotation Length: 20 bytes (2 bytes padding)

(001B8C)  S_INLINESITE_END

(001B90)  S_INLINESITE: Parent: 00001758, End: 00001BB4, Inlinee:             0x10E2
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 3e9  CodeOffset 11  CodeOffsetAndLineOffset 24
                                CodeOffsetAndLineOffset 2b  LineOffset 1  CodeLengthAndCodeOffset 3 3
          BinaryAnnotation Length: 20 bytes (3 bytes padding)

(001BB4)  S_INLINESITE_END

(001BB8)  S_INLINESITE: Parent: 00001758, End: 00001BD8, Inlinee:             0x118A
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 2 3bf  CodeLengthAndCodeOffset 4 6  LineOffset 4
                                CodeLengthAndCodeOffset 19 b
          BinaryAnnotation Length: 16 bytes (2 bytes padding)

(001BD8)  S_INLINESITE_END

(001BDC)  S_INLINESITE: Parent: 00001758, End: 00001C34, Inlinee:             0x10E5
          BinaryAnnotations:    CodeLengthAndCodeOffset 25 357
          BinaryAnnotation Length: 4 bytes (0 bytes padding)

(001BF0)   S_INLINESITE: Parent: 00001BDC, End: 00001C30, Inlinee:             0x10E6
           BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 357  CodeLengthAndCodeOffset 14 11
           BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001C0C)    S_LOCAL: Param: 00001097, TypeInfo
(001C20)    S_DEFRANGE_REGISTER: r8
	Range: [0001:000017C8] - [0001:000017DC], 0 Gaps

(001C30)   S_INLINESITE_END

(001C34)  S_INLINESITE_END

(001C38)  S_INLINESITE: Parent: 00001758, End: 00001C50, Inlinee:             0x1182
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 33 db
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(001C50)  S_INLINESITE_END

(001C54)  S_INLINESITE: Parent: 00001758, End: 00001CB8, Inlinee:             0x1102
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 151  CodeLengthAndCodeOffset 17 a
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001C70)   S_LOCAL: Param: 00001022, Collection
(001C88)   S_DEFRANGE_REGISTER: rdx
	Range: [0001:000015B1] - [0001:000015CF], 0 Gaps
(001C98)   S_LOCAL: Param: 00000022, Index
(001CA8)   S_DEFRANGE_REGISTER: r8d
	Range: [0001:000015BB] - [0001:000015CF], 0 Gaps

(001CB8)  S_INLINESITE_END

(001CBC)  S_INLINESITE: Parent: 00001758, End: 00001CD4, Inlinee:             0x10E4
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 25 121
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(001CD4)  S_INLINESITE_END

(001CD8)  S_INLINESITE: Parent: 00001758, End: 00001CFC, Inlinee:             0x1187
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset b 1d6  CodeLengthAndCodeOffset 4 d  CodeLengthAndCodeOffset 4 8
                                CodeLengthAndCodeOffset 7 2c  CodeLengthAndCodeOffset f 23
          BinaryAnnotation Length: 20 bytes (2 bytes padding)

(001CFC)  S_INLINESITE_END

(001D00)  S_INLINESITE: Parent: 00001758, End: 00001D28, Inlinee:             0x10E2
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 2 206  CodeLengthAndCodeOffset 8 9  CodeLengthAndCodeOffset 4 f
                                CodeOffsetAndLineOffset 7  CodeOffsetAndLineOffset 24  CodeOffsetAndLineOffset 27  LineOffset 1
                                CodeLengthAndCodeOffset 3 3
          BinaryAnnotation Length: 24 bytes (1 bytes padding)

(001D28)  S_INLINESITE_END

(001D2C)  S_INLINESITE: Parent: 00001758, End: 00001D58, Inlinee:             0x118A
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 2 1e1  CodeLengthAndCodeOffset 4 6  CodeOffsetAndLineOffset 4b
                                LineOffset 2  CodeLengthAndCodeOffset 5 f  LineOffset fffffffd  CodeLengthAndCodeOffset 7 7
                                LineOffset 3  CodeLengthAndCodeOffset 3 1a
          BinaryAnnotation Length: 28 bytes (2 bytes padding)

(001D58)  S_INLINESITE_END

(001D5C)  S_INLINESITE: Parent: 00001758, End: 00001DB4, Inlinee:             0x10E5
          BinaryAnnotations:    CodeLengthAndCodeOffset 25 17b
          BinaryAnnotation Length: 4 bytes (0 bytes padding)

(001D70)   S_INLINESITE: Parent: 00001D5C, End: 00001DB0, Inlinee:             0x10E6
           BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 17b  CodeLengthAndCodeOffset 14 11
           BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001D8C)    S_LOCAL: Param: 00001097, TypeInfo
(001DA0)    S_DEFRANGE_REGISTER: r8
	Range: [0001:000015EC] - [0001:00001600], 0 Gaps

(001DB0)   S_INLINESITE_END

(001DB4)  S_INLINESITE_END

(001DB8)  S_INLINESITE: Parent: 00001758, End: 00001DD0, Inlinee:             0x1182
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 35 50f
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(001DD0)  S_INLINESITE_END

(001DD4)  S_INLINESITE: Parent: 00001758, End: 00001E38, Inlinee:             0x1102
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 586  CodeLengthAndCodeOffset 17 a
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001DF0)   S_LOCAL: Param: 00001022, Collection
(001E08)   S_DEFRANGE_REGISTER: rdx
	Range: [0001:000019E6] - [0001:00001A04], 0 Gaps
(001E18)   S_LOCAL: Param: 00000022, Index
(001E28)   S_DEFRANGE_REGISTER: r8d
	Range: [0001:000019F0] - [0001:00001A04], 0 Gaps

(001E38)  S_INLINESITE_END

(001E3C)  S_INLINESITE: Parent: 00001758, End: 00001E54, Inlinee:             0x10E4
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 25 556
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(001E54)  S_INLINESITE_END

(001E58)  S_INLINESITE: Parent: 00001758, End: 00001E74, Inlinee:             0x118D
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset b 5d5  CodeLengthAndCodeOffset 28 e
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001E74)  S_INLINESITE_END

(001E78)  S_INLINESITE: Parent: 00001758, End: 00001ED4, Inlinee:             0x10E5
          BinaryAnnotations:    CodeLengthAndCodeOffset 25 5b0  CodeLengthAndCodeOffset 3 30
          BinaryAnnotation Length: 8 bytes (1 bytes padding)

(001E90)   S_INLINESITE: Parent: 00001E78, End: 00001ED0, Inlinee:             0x10E6
           BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 7 5b3  CodeLengthAndCodeOffset 14 e  CodeLengthAndCodeOffset 3 1f
           BinaryAnnotation Length: 12 bytes (0 bytes padding)

(001EAC)    S_LOCAL: Param: 00001097, TypeInfo
(001EC0)    S_DEFRANGE_REGISTER: r8
	Range: [0001:00001A21] - [0001:00001A35], 0 Gaps

(001ED0)   S_INLINESITE_END

(001ED4)  S_INLINESITE_END

(001ED8)  S_INLINESITE: Parent: 00001758, End: 00001EF4, Inlinee:             0x118F
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 4 628  CodeLengthAndCodeOffset 1f 11
          BinaryAnnotation Length: 12 bytes (3 bytes padding)

(001EF4)  S_INLINESITE_END

(001EF8)  S_INLINESITE: Parent: 00001758, End: 00001F10, Inlinee:             0x1190
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset 29 6be
          BinaryAnnotation Length: 8 bytes (2 bytes padding)

(001F10)  S_INLINESITE_END

(001F14)  S_INLINESITE: Parent: 00001758, End: 00001F4C, Inlinee:             0x1191
          BinaryAnnotations:    LineOffset 1  CodeLengthAndCodeOffset a 34d  CodeLengthAndCodeOffset 9a f8  CodeLengthAndCodeOffset 66 312
          BinaryAnnotation Length: 16 bytes (1 bytes padding)

(001F34)   S_CALLEES: Count: 4
                        0x10F5 (0) ,             0x10F6 (0) ,             0x10F5 (0) ,             0x10F6 (0) 
            

(001F4C)  S_INLINESITE_END

(001F50)  S_CALLEES: Count: 7
                       0x10EF (0) ,             0x1193 (0) ,             0x10F5 (0) ,             0x10F5 (0) , 
                       0x1194 (0) ,             0x10F5 (0) ,             0x10EF (0) 
(001F74)  S_LOCAL: Local: 00001294, global, WPP_GLOBAL_Control
(001F94)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000014A9] - [0001:00001C3B], 11 Gaps (startOffset, length): (0028, 35) (0080, E2) (0182, 8D) (0238, 7) (0268, DA) (0360, 84) (0406, 97) (04C6, 150) (0635, 70) (06C2, 34) (0712, 69)
(001FD0)  S_FRAMEPROC:
          Frame size = 0x000000C0 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000028
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(002030)  S_ANNOTATION: [0001:00001C1D]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c539 29 "%0 [%!FUNC!] <--" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "}"

(0020F0)  S_ANNOTATION: [0001:00001B98]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c456 25 "%0 [%!FUNC!]WdfRequestRetrieveInputBuffer failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(0021FC)  S_ANNOTATION: [0001:00001B47]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c488 26 "%0 [%!FUNC!]WdfRequestRetrieveOutputBuffer failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(002308)  S_ANNOTATION: [0001:00001AB8]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c502 27 "%0 [%!FUNC!]!! SymbolicLinkName: %10!s! (length: %11!d!)" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "&linkName, ItemPWString -- 10"
              6: "linkName.Length, ItemLong -- 11"
              7: "}"

(00242C)  S_ANNOTATION: [0001:0000193F]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c304 19 "%0 [%!FUNC!]WdfRequestRetrieveInputBuffer failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(002538)  S_ANNOTATION: [0001:00001886]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c348 21 "%0 [%!FUNC!] ERROR:WdfWorkItemCreate failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(00263C)  S_ANNOTATION: [0001:000017E4]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c328 20 "%0 [%!FUNC!]PSM patch enabled for device %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "pEnable->DeviceIndex, ItemLong -- 10"
              6: "}"

(002740)  S_ANNOTATION: [0001:000016E1]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c380 22 "%0 [%!FUNC!]WdfRequestRetrieveInputBuffer failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(00284C)  S_ANNOTATION: [0001:000016B1]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c424 24 "%0 [%!FUNC!] ERROR:WdfWorkItemCreate failed with status %10!s!" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "status, ItemNTSTATUS -- 10"
              6: "}"

(002950)  S_ANNOTATION: [0001:00001604]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c404 23 "%0 [%!FUNC!]PSM patch disabled for device %10!d!" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "pDisable->DeviceIndex, ItemLong -- 10"
              6: "}"

(002A54)  S_ANNOTATION: [0001:000014FF]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c528 28 "%0 [%!FUNC!]Unknown I/O Control Code submitted: %10!X!" //   LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "IoControlCode, ItemLong -- 10"
              6: "}"

(002B58)  S_ANNOTATION: [0001:000014A2]
              1: "TMF:"
              2: "03fb1cb4-1c81-30e9-50db-4ecb4f47594e BthPS3PSM // SRC=Sideband.c MJ= MN="
              3: "#typev Sideband_c282 18 "%0 [%!FUNC!] --> Entry" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACE_SIDEBAND"
              4: "{"
              5: "}"

(002C1C)  S_REGREL32: rsp+000000F0, Type:             0x11A9, Queue
(002C30)  S_REGREL32: rsp+000000F8, Type:             0x11BA, Request
(002C48)  S_REGREL32: rsp+00000100, Type:      T_UQUAD(0023), OutputBufferLength
(002C6C)  S_REGREL32: rsp+00000108, Type:      T_UQUAD(0023), InputBufferLength
(002C8C)  S_REGREL32: rsp+00000110, Type:      T_ULONG(0022), IoControlCode
(002CA8)  S_REGREL32: rsp+00000050, Type:             0x13DB, pEnable
(002CC0)  S_REGREL32: rsp+00000040, Type:             0x1369, workItem
(002CD8)  S_REGREL32: rsp+00000030, Type:      T_UQUAD(0023), length
(002CF0)  S_REGREL32: rsp+00000058, Type:             0x1377, wiCfg
(002D04)  S_REGREL32: rsp+00000080, Type:             0x1177, attributes
(002D20)  S_REGREL32: rsp+00000048, Type:             0x1418, pDisable
(002D38)  S_REGREL32: rsp+00000070, Type:             0x10B7, linkName
(002D50)  S_REGREL32: rsp+00000038, Type:             0x1392, pGet
(002D64)  S_CALLSITEINFO: [0001:00001566], type =             0x13BD
(002D74)  S_CALLSITEINFO: [0001:000015A0], type =             0x11D0
(002D84)  S_CALLSITEINFO: [0001:000015C9], type =             0x11A6
(002D94)  S_CALLSITEINFO: [0001:000015FA], type =             0x10E8
(002DA4)  S_CALLSITEINFO: [0001:000016A1], type =             0x141E
(002DB4)  S_CALLSITEINFO: [0001:0000173C], type =             0x13BD
(002DC4)  S_CALLSITEINFO: [0001:00001776], type =             0x11D0
(002DD4)  S_CALLSITEINFO: [0001:0000179F], type =             0x11A6
(002DE4)  S_CALLSITEINFO: [0001:000017D6], type =             0x10E8
(002DF4)  S_CALLSITEINFO: [0001:0000187A], type =             0x141E
(002E04)  S_CALLSITEINFO: [0001:00001912], type =             0x13C2
(002E14)  S_CALLSITEINFO: [0001:00001934], type =             0x11F5
(002E24)  S_CALLSITEINFO: [0001:0000199C], type =             0x13BD
(002E34)  S_CALLSITEINFO: [0001:000019D5], type =             0x11D0
(002E44)  S_CALLSITEINFO: [0001:000019FE], type =             0x11A6
(002E54)  S_CALLSITEINFO: [0001:00001A2F], type =             0x10E8
(002E64)  S_CALLSITEINFO: [0001:00001A63], type =             0x13BD
(002E74)  S_CALLSITEINFO: [0001:00001AB2], type =             0x140D
(002E84)  S_CALLSITEINFO: [0001:00001B3C], type =             0x13FE
(002E94)  S_CALLSITEINFO: [0001:00001C17], type =             0x1427

(002EA4) S_END

(002EA8) S_GPROC32: [0001:00001C6C], Cb: 00000096, Type:             0x14A9, WPP_SF_Zd
         Parent: 00000000, End: 0000303C, Next: 00000000
         Debug start: 0000000A, Debug end: 0000008B
         Flags: Do Not Inline, Optimized Debug Info

(002EDC)  S_LOCAL: Param: 00000023, Logger
(002EF0)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:00001C7B] - [0001:00001CFC], 0 Gaps
(002F00)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001C6C] - [0001:00001C7B], 0 Gaps
(002F10)  S_LOCAL: Param: 00000021, id
(002F20)  S_DEFRANGE_REGISTER: dx
	Range: [0001:00001C6C] - [0001:00001CE0], 0 Gaps
(002F30)  S_LOCAL: Param: 00001126, TraceGuid
(002F44)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00001C6C] - [0001:00001CF7], 0 Gaps
(002F54)  S_LOCAL: Param: 000010AA, _a1
(002F64)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00001C6C] - [0001:00001CC8], 0 Gaps
(002F74)  S_LOCAL: Param: 00000074, _a2
(002F84)  S_DEFRANGE_REGISTER_REL: [rsp +  0028 ]
	Range: [0001:00001C6C] - [0001:00001C6D], 0 Gaps
(002F98)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0090 	  FULL_SCOPE 
(002FA0)  S_FRAMEPROC:
          Frame size = 0x00000060 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(002FC0)  S_REGREL32: rsp+00000070, Type:      T_UQUAD(0023), Logger
(002FD8)  S_REGREL32: rsp+00000078, Type:     T_USHORT(0021), id
(002FEC)  S_REGREL32: rsp+00000080, Type:             0x1126, TraceGuid
(003004)  S_REGREL32: rsp+00000088, Type:             0x10AA, _a1
(003018)  S_REGREL32: rsp+00000090, Type:       T_INT4(0074), _a2
(00302C)  S_CALLSITEINFO: [0001:00001CF1], type =             0x114A

(00303C) S_END

(003040) S_GPROC32: [0001:00001D04], Cb: 0000003E, Type:             0x146A, WPP_SF_c
         Parent: 00000000, End: 00003188, Next: 00000000
         Debug start: 0000000B, Debug end: 00000039
         Flags: Do Not Inline, Optimized Debug Info

(003070)  S_LOCAL: Param: 00000023, Logger
(003084)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001D04] - [0001:00001D3D], 0 Gaps
(003094)  S_LOCAL: Param: 00000021, id
(0030A4)  S_DEFRANGE_REGISTER: dx
	Range: [0001:00001D04] - [0001:00001D37], 0 Gaps
(0030B4)  S_LOCAL: Param: 00001126, TraceGuid
(0030C8)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00001D04] - [0001:00001D3D], 0 Gaps
(0030D8)  S_LOCAL: Param: 00000070, _a1
(0030E8)  S_DEFRANGE_REGISTER: r9b
	Range: [0001:00001D04] - [0001:00001D1A], 0 Gaps
(0030F8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0068 	  FULL_SCOPE 
(003100)  S_FRAMEPROC:
          Frame size = 0x00000048 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214220)
(003120)  S_REGREL32: rsp+00000050, Type:      T_UQUAD(0023), Logger
(003138)  S_REGREL32: rsp+00000058, Type:     T_USHORT(0021), id
(00314C)  S_REGREL32: rsp+00000060, Type:             0x1126, TraceGuid
(003164)  S_REGREL32: rsp+00000068, Type:      T_RCHAR(0070), _a1
(003178)  S_CALLSITEINFO: [0001:00001D37], type =             0x114A

(003188) S_END

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"


(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj

(000058) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(000094) S_BUILDINFO:             0x1203

(00009C) S_GPROC32: [0001:00001D44], Cb: 0000001E, Type:             0x161B, __GSHandlerCheck
         Parent: 00000000, End: 00000248, Next: 00000000
         Debug start: 00000004, Debug end: 00000018
         Flags: Optimized Debug Info

(0000D4)  S_LOCAL: Param: 000015FC, ExceptionRecord
(0000F0)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001D44] - [0001:00001D4F], 0 Gaps
(000100)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(000108)  S_LOCAL: Param: 00000603, EstablisherFrame
(000124)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001D4F] - [0001:00001D57], 0 Gaps
(000134)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00001D44] - [0001:00001D4F], 0 Gaps
(000144)  S_LOCAL: Param: 000015F2, ContextRecord
(00015C)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00001D44] - [0001:00001D4C], 0 Gaps
(00016C)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0040 	  FULL_SCOPE 
(000174)  S_LOCAL: Param: 00001615, DispatcherContext
(000190)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00001D44] - [0001:00001D57], 0 Gaps
(0001A0)  S_CALLEES: Count: 1
                       0x123D (0) 
(0001AC)  S_FRAMEPROC:
          Frame size = 0x00000028 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214000)
(0001CC)  S_REGREL32: rsp+00000030, Type:             0x15FC, ExceptionRecord
(0001EC)  S_REGREL32: rsp+00000038, Type:    T_64PVOID(0603), EstablisherFrame
(00020C)  S_REGREL32: rsp+00000040, Type:             0x15F2, ContextRecord
(000228)  S_REGREL32: rsp+00000048, Type:             0x1615, DispatcherContext

(000248) S_END

(00024C) S_GPROC32: [0001:00001D64], Cb: 00000060, Type:             0x161D, __GSHandlerCheckCommon
         Parent: 00000000, End: 0000045C, Next: 00000000
         Debug start: 00000004, Debug end: 0000005A
         Flags: Optimized Debug Info

(00028C)  S_LOCAL: Param: 00000603, EstablisherFrame
(0002A8)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001D64] - [0001:00001D8C], 0 Gaps
(0002B8)  S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0001:00001D8F] - [0001:00001D9D], 0 Gaps
(0002C8)  S_LOCAL: Param: 00001615, DispatcherContext
(0002E4)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00001D64] - [0001:00001DA6], 0 Gaps
(0002F4)  S_LOCAL: Param: 000015F6, GSHandlerData
(00030C)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00001D64] - [0001:00001D96], 0 Gaps
(00031C)  S_LOCAL: Local: 00000670, CookieFrameBase
(000338)  S_DEFRANGE_REGISTER: r10
	Range: [0001:00001D74] - [0001:00001DBE], 1 Gaps (startOffset, length): (0010, B)
(00034C)  S_LOCAL: Local: 00000012, CookieOffset
(000364)  S_DEFRANGE_REGISTER: r11d
	Range: [0001:00001D71] - [0001:00001DBE], 0 Gaps
(000374)  S_LOCAL: Local: 00000023, CookieXorValue
(000390)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00001D6E] - [0001:00001DB6], 0 Gaps
(0003A0)  S_LOCAL: Local: 00000023, Cookie
(0003B4)  S_DEFRANGE_REGISTER: r8
	Range: [0001:00001D96] - [0001:00001DB6], 0 Gaps
(0003C4)  S_DEFRANGE_REGISTER: r9
	Range: [0001:00001DB6] - [0001:00001DBE], 0 Gaps
(0003D4)  S_CALLEES: Count: 1
                       0x123E (0) 
(0003E0)  S_FRAMEPROC:
          Frame size = 0x00000028 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214000)
(000400)  S_REGREL32: rsp+00000030, Type:    T_64PVOID(0603), EstablisherFrame
(000420)  S_REGREL32: rsp+00000038, Type:             0x1615, DispatcherContext
(000440)  S_REGREL32: rsp+00000040, Type:             0x15F6, GSHandlerData

(00045C) S_END

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"


(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj

(00005C) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(000098) S_BUILDINFO:             0x1203

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

(000004) S_OBJNAME: Signature: 00000000, minkernel\crts\crtw32\string\nt\objfre\amd64\memcpy.obj

(000044) S_COMPILE3:
         Language: MASM
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Macro Assembler

(000080) S_ENVBLOCK:
         Compiled for edit and continue: no
         Command block:
          cwd = 'minkernel\crts\crtw32\string\nt'
          exe = 'd:\os\tools\vc\HostX86\amd64\ml64.EXE'
          src = '..\amd64\memcpy.asm'

(0000EC) S_LDATA32: [0002:00000C58], Type:      T_UCHAR(0020), $xdatasym

(000104) S_GPROC32: [0001:00002500], Cb: 000002AA, Type:             0x100F, memcpy
         Parent: 00000000, End: 0000029C, Next: 00000000
         Debug start: 00000000, Debug end: 000002AA

(000134)  S_LABEL32: [0001:00002520], mcpy00
(000148)  S_LABEL32: [0001:00002540], mcpy10
(00015C)  S_LABEL32: [0001:0000255A], mcpy20
(000170)  S_LABEL32: [0001:00002560], mcpy30
(000184)  S_LABEL32: [0001:00002580], xcpy00
(000198)  S_LABEL32: [0001:000025B1], xcpy10
(0001AC)  S_LABEL32: [0001:00002600], xcpy13
(0001C0)  S_LABEL32: [0001:0000262F], xcpy15
(0001D4)  S_LABEL32: [0001:00002651], xcpy20
(0001E8)  S_LABEL32: [0001:00002665], xcpy30
(0001FC)  S_LABEL32: [0001:00002680], lcpy00
(000210)  S_LABEL32: [0001:000026C0], lcpy10
(000224)  S_LABEL32: [0001:00002700], xmov00
(000238)  S_LABEL32: [0001:0000272D], xmov10
(00024C)  S_LABEL32: [0001:00002740], xmov13
(000260)  S_LABEL32: [0001:0000276F], xmov15
(000274)  S_LABEL32: [0001:00002791], xmov20
(000288)  S_LABEL32: [0001:000027A6], xmov30

(00029C) S_END

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"


(000004) S_OBJNAME: Signature: 00000000, minkernel\crts\crtw32\string\nt\objfre\amd64\memset.obj

(000044) S_COMPILE3:
         Language: MASM
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Macro Assembler

(000080) S_ENVBLOCK:
         Compiled for edit and continue: no
         Command block:
          cwd = 'minkernel\crts\crtw32\string\nt'
          exe = 'd:\os\tools\vc\HostX86\amd64\ml64.EXE'
          src = '..\amd64\memset.asm'

(0000EC) S_LDATA32: [0002:00000C60], Type:      T_UCHAR(0020), $xdatasym

(000104) S_GPROC32: [0001:000027C0], Cb: 00000107, Type:             0x100F, memset
         Parent: 00000000, End: 000001D4, Next: 00000000
         Debug start: 00000000, Debug end: 00000107

(000134)  S_LABEL32: [0001:000027E2], mset10
(000148)  S_LABEL32: [0001:000027F8], mset20
(00015C)  S_LABEL32: [0001:00002821], mset30
(000170)  S_LABEL32: [0001:00002850], mset45
(000184)  S_LABEL32: [0001:00002856], mset46
(000198)  S_LABEL32: [0001:00002880], mset47
(0001AC)  S_LABEL32: [0001:000028B0], mset48
(0001C0)  S_LABEL32: [0001:000028C6], mset50

(0001D4) S_END

(0001D8) S_GPROC32: [0001:00002900], Cb: 00000043, Type:             0x100F, __memset_repmovs
         Parent: 00000000, End: 00000240, Next: 00000000
         Debug start: 00000001, Debug end: 00000043

(000210)  S_LABEL32: [0001:0000290A], repmovs10
(000228)  S_LABEL32: [0001:0000293C], repmovs20

(000240) S_END

(000244) S_GPROC32: [0001:00002980], Cb: 00000026, Type:             0x100F, __memset_query
         Parent: 00000000, End: 0000027C, Next: 00000000
         Debug start: 0000000B, Debug end: 00000026

(00027C) S_END

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"


(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj

(000054) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: yes
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(000090) S_BUILDINFO:             0x1243

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

(000004) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(00001C) S_COMPILE2:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140
         Version string: Microsoft (R) LINK
         Command block:

(000048) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(000060) S_COMPILE2:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140
         Version string: Microsoft (R) LINK
         Command block:

(00008C) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(0000A4) S_COMPILE2:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140
         Version string: Microsoft (R) LINK
         Command block:

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"


(000004) S_OBJNAME: Signature: 00000000, minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj

(000050) S_COMPILE3:
         Language: MASM
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Macro Assembler

(00008C) S_ENVBLOCK:
         Compiled for edit and continue: no
         Command block:
          cwd = 'minkernel\crts\crtw32\misc\guard'
          exe = 'd:\os\tools\vc\HostX86\amd64\ml64.EXE'
          src = '..\amd64\guard_dispatch.asm'

(000104) S_LDATA32: [0002:00000C88], Type:      T_UCHAR(0020), $xdatasym

(00011C) S_GPROC32: [0001:00002470], Cb: 00000005, Type:             0x100F, _guard_dispatch_icall_nop
         Parent: 00000000, End: 00000160, Next: 00000000
         Debug start: 00000000, Debug end: 00000005

(000160) S_END

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"


(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj

(000060) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(00009C) S_BUILDINFO:             0x11C2

(0000A4) S_GPROC32: [0001:00001DD0], Cb: 00000004, Type:             0x151F, _guard_check_icall_nop
         Parent: 00000000, End: 00000148, Next: 00000000
         Debug start: 00000000, Debug end: 00000000
         Flags: Optimized Debug Info

(0000E4)  S_LOCAL: Param: 00000023, Target
(0000F8)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001DD0] - [0001:00001DD3], 0 Gaps
(000108)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0008 	  FULL_SCOPE 
(000110)  S_FRAMEPROC:
          Frame size = 0x00000000 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: inl_specified invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214020)
(000130)  S_REGREL32: rsp+00000008, Type:      T_UQUAD(0023), Target

(000148) S_END

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"


(000004) S_OBJNAME: Signature: 00000000, minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj

(000054) S_COMPILE3:
         Language: MASM
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Macro Assembler

(000090) S_ENVBLOCK:
         Compiled for edit and continue: no
         Command block:
          cwd = 'minkernel\crts\crtw32\misc\guard'
          exe = 'd:\os\tools\vc\HostX86\amd64\ml64.EXE'
          src = '..\amd64\guard_xfg_dispatch.asm'

(00010C) S_LDATA32: [0002:00000C88], Type:      T_UCHAR(0020), $xdatasym

(000124) S_GPROC32: [0001:00002490], Cb: 00000006, Type:             0x100F, _guard_xfg_dispatch_icall_nop
         Parent: 00000000, End: 0000016C, Next: 00000000
         Debug start: 00000000, Debug end: 00000006

(00016C) S_END

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"


(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\cpuinfo.obj

(000058) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(000094) S_BUILDINFO:             0x1203

(00009C) S_GPROC32: [0001:00001DE0], Cb: 000000B5, Type:             0x15BD, __cpu_features_init
         Parent: 00000000, End: 000001C4, Next: 00000000
         Debug start: 00000006, Debug end: 000000AE
         Flags: Optimized Debug Info

(0000D8)  S_LOCAL: Local: 000015CE, CPUID
(0000E8)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0000 	  FULL_SCOPE 
(0000F0)  S_LOCAL: Local: 00000074, LeavesSupported
(00010C)  S_DEFRANGE_REGISTER: r9d
	Range: [0001:00001DEF] - [0001:00001E94], 0 Gaps
(00011C)  S_LOCAL: Local: 00000020, NewIsaInfo
(000134)  S_DEFRANGE_REGISTER: bl
	Range: [0001:00001E12] - [0001:00001E3E], 0 Gaps
(000144)  S_DEFRANGE_REGISTER: r8b
	Range: [0001:00001DF9] - [0001:00001E12], 0 Gaps
(000154)  S_DEFRANGE_REGISTER:MayAvailable bl
	Range: [0001:00001E3E] - [0001:00001E93], 1 Gaps (startOffset, length): (000E, 35)
(000168)  S_DEFRANGE_REGISTER:MayAvailable r8b
	Range: [0001:00001E3E] - [0001:00001E85], 1 Gaps (startOffset, length): (0033, 10)
(00017C)  S_FRAMEPROC:
          Frame size = 0x00000010 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214000)
(00019C)  S_LABEL32: [0001:00001E81], $Done
(0001B0)  S_REGREL32: rsp+00000000, Type:             0x15CE, CPUID

(0001C4) S_END

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"


(000004) S_OBJNAME: Signature: 00000000, minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj

(000054) S_COMPILE3:
         Language: MASM
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Macro Assembler

(000090) S_ENVBLOCK:
         Compiled for edit and continue: no
         Command block:
          cwd = 'minkernel\tools\gs_support\kmodefastfail\mp'
          exe = 'd:\os\tools\vc\HostX86\amd64\ml64.EXE'
          src = '..\amd64\amdsecgs.asm'

(00010C) S_LDATA32: [0002:00000C98], Type:      T_UCHAR(0020), $xdatasym

(000124) S_GPROC32: [0001:000024B0], Cb: 0000001E, Type:             0x100F, __security_check_cookie
         Parent: 00000000, End: 00000198, Next: 00000000
         Debug start: 00000000, Debug end: 0000001E

(000164)  S_LABEL32: [0001:000024C5], RestoreRcx
(00017C)  S_LABEL32: [0001:000024C9], ReportFailure

(000198) S_END

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"


(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj

(000068) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(0000A4) S_BUILDINFO:             0x11E8

(0000AC) S_GPROC32: [0006:0000031C], Cb: 0000002E, Type:             0x100F, __security_init_cookie
         Parent: 00000000, End: 00000170, Next: 00000000
         Debug start: 00000000, Debug end: 0000002E
         Flags: Do Not Inline, Optimized Debug Info

(0000EC)  S_INLINESITE: Parent: 000000AC, End: 00000104, Inlinee:             0x11EB
          BinaryAnnotations:    LineOffset 2  CodeLengthAndCodeOffset 7 27
          BinaryAnnotation Length: 8 bytes (3 bytes padding)

(000104)  S_INLINESITE_END

(000108)  S_LOCAL: Local: 00000023, global, __security_cookie
(000124)  S_DEFRANGE_REGISTER: rax
	Range: [0006:00000323] - [0006:0000033A], 0 Gaps
(000134)  S_FRAMEPROC:
          Frame size = 0x00000000 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: asynceh safebuffers invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00216200)
Error: unknown symbol record type 1168!

(000160)  S_LABEL32: [0006:0000034A], $LN7
          Flags: Not Reached

(000170) S_END

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"


(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj

(000068) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(0000A4) S_BUILDINFO:             0x11E8

(0000AC) S_GPROC32: [0001:00001EA0], Cb: 00000007, Type:             0x151F, __report_gsfailure
         Parent: 00000000, End: 0000018C, Next: 00000000
         Debug start: 00000000, Debug end: 00000007
         Flags: Never Return, Optimized Debug Info

(0000E8)  S_LOCAL: Param: 00000023, StackCookie
(000100)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001EA0] - [0001:00001EA5], 0 Gaps
(000110)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0008 	  FULL_SCOPE 

(000118)  S_INLINESITE: Parent: 000000AC, End: 00000130, Inlinee:             0x11EB
          BinaryAnnotations:    LineOffset 2  CodeLengthAndCodeOffset 7 0
          BinaryAnnotation Length: 8 bytes (3 bytes padding)

(000130)  S_INLINESITE_END

(000134)  S_FRAMEPROC:
          Frame size = 0x00000000 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(000160)  S_LABEL32: [0001:00001EA7], $LN5
          Flags: Not Reached
(000170)  S_REGREL32: rsp+00000008, Type:      T_UQUAD(0023), StackCookie

(00018C) S_END

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"


(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj

(000068) S_COMPILE3:
         Language: C++
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: yes
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(0000A4) S_UNAMESPACE: __vc_attributes
(0000B8) S_UNAMESPACE: helper_attributes
(0000D0) S_UNAMESPACE: atl
(0000D8) S_UNAMESPACE: std
(0000E0) S_LDATA32: [0003:00000398], Type:             0x10B7, WdfDriverStubRegistryPath
(000108) S_UDT:             0x1632, CM_PARTIAL_RESOURCE_DESCRIPTOR
(000130) S_UDT:             0x1635, IO_RESOURCE_DESCRIPTOR
(000150) S_UDT:             0x170C, PHYSICAL_ADDRESS
(00016C) S_UDT:             0x1716, IRP
(000178) S_UDT:             0x170C, LARGE_INTEGER
(000190) S_BUILDINFO:             0x1257

(000198) S_GPROC32: [0001:00001EA8], Cb: 00000058, Type:             0x100F, FxStubDriverEntryFailure
         Parent: 00000000, End: 000002AC, Next: 00000000
         Debug start: 00000004, Debug end: 00000052
         Flags: Optimized Debug Info

(0001D8)  S_LOCAL: Local: 00001721, loaderInterface
(0001F4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0020 	  FULL_SCOPE 
(0001FC)  S_LOCAL: Local: 00000012, status
(000210)  S_DEFRANGE_REGISTER: eax
	Range: [0001:00001EDE] - [0001:00001EF5], 0 Gaps
(000220)  S_DEFRANGE_REGISTER:MayAvailable eax
	Range: [0001:00001EFA] - [0001:00001EFF], 0 Gaps

(000230)  S_INLINESITE: Parent: 00000198, End: 0000024C, Inlinee:             0x1279
          BinaryAnnotations:    CodeOffsetAndLineOffset 2d  LineOffset 2  CodeLengthAndCodeOffset c 6  CodeLengthAndCodeOffset d 11
          BinaryAnnotation Length: 12 bytes (2 bytes padding)

(00024C)  S_INLINESITE_END

(000250)  S_CALLEES: Count: 2
                       0x126D (0) ,             0x127A (0) 
(000260)  S_FRAMEPROC:
          Frame size = 0x00000048 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(00028C)  S_REGREL32: rsp+00000020, Type:             0x1721, loaderInterface

(0002AC) S_END

(0002B0) S_GPROC32: [0001:00001F00], Cb: 00000030, Type:             0x100F, FxStubDriverUnloadCommon
         Parent: 00000000, End: 00000320, Next: 00000000
         Debug start: 00000004, Debug end: 0000002A
         Flags: Optimized Debug Info

(0002F0)  S_CALLEES: Count: 2
                       0x126E (0) ,             0x127C (0) 
(000300)  S_FRAMEPROC:
          Frame size = 0x00000028 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)

(000320) S_END

(000324) S_GPROC32: [0001:00001F30], Cb: 0000002C, Type:             0x12FB, FxDriverEntry
         Parent: 00000000, End: 00000434, Next: 00000000
         Debug start: 0000000A, Debug end: 00000020
         Flags: Optimized Debug Info

(00035C)  S_LOCAL: Param: 000010E1, DriverObject
(000374)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001F30] - [0001:00001F40], 0 Gaps
(000384)  S_DEFRANGE_REGISTER: rdi
	Range: [0001:00001F40] - [0001:00001F5A], 0 Gaps
(000394)  S_LOCAL: Param: 0000108A, RegistryPath
(0003AC)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:00001F3D] - [0001:00001F55], 0 Gaps
(0003BC)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00001F30] - [0001:00001F3D], 0 Gaps
(0003CC)  S_CALLEES: Count: 2
                       0x127E (0) ,             0x127F (0) 
(0003DC)  S_FRAMEPROC:
          Frame size = 0x00000020 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
(0003FC)  S_REGREL32: rsp+00000030, Type:             0x10E1, DriverObject
(000418)  S_REGREL32: rsp+00000038, Type:             0x108A, RegistryPath

(000434) S_END

(000438) S_GPROC32: [0001:00001F5C], Cb: 00000150, Type:             0x12FB, FxDriverEntryWorker
         Parent: 00000000, End: 00000644, Next: 00000000
         Debug start: 00000019, Debug end: 00000150
         Flags: Do Not Inline, Optimized Debug Info

(000474)  S_LOCAL: Param: 000010E1, DriverObject
(00048C)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00001F5C] - [0001:00001F7D], 0 Gaps
(00049C)  S_DEFRANGE_REGISTER: rdi
	Range: [0001:00001F7D] - [0001:0000204D], 0 Gaps
(0004AC)  S_DEFRANGE_REGISTER:MayAvailable rdi
	Range: [0001:0000204D] - [0001:000020AC], 1 Gaps (startOffset, length): (0014, 8)
(0004C0)  S_LOCAL: Param: 0000108A, RegistryPath
(0004D8)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:00001F5C] - [0001:00001F7A], 0 Gaps
(0004E8)  S_DEFRANGE_REGISTER: rsi
	Range: [0001:00001F7A] - [0001:0000204D], 0 Gaps
(0004F8)  S_DEFRANGE_REGISTER:MayAvailable rsi
	Range: [0001:0000204D] - [0001:000020AC], 1 Gaps (startOffset, length): (000F, D)
(00050C)  S_LOCAL: Local: 00000012, status
(000520)  S_DEFRANGE_REGISTER: eax
	Range: [0001:00001FDA] - [0001:00001FE5], 0 Gaps
(000530)  S_DEFRANGE_REGISTER: ebx
	Range: [0001:00002001] - [0001:0000204D], 0 Gaps
(000540)  S_DEFRANGE_REGISTER:MayAvailable eax
	Range: [0001:0000204D] - [0001:00002068], 0 Gaps
(000550)  S_DEFRANGE_REGISTER:MayAvailable ebx
	Range: [0001:0000204D] - [0001:000020AC], 1 Gaps (startOffset, length): (0005, 17)
(000564)  S_CALLEES: Count: 7
                       0x1280 (0) ,             0x1281 (0) ,             0x1268 (0) ,             0x1259 (0) , 
                       0x1280 (0) ,             0x1278 (0) ,             0x127B (0) 
(000588)  S_LOCAL: Local: 00001017, global, WdfDriverGlobals
(0005A4)  S_DEFRANGE_REGISTER: rax
	Range: [0001:00002070] - [0001:00002096], 1 Gaps (startOffset, length): (000A, 19)
(0005B8)  S_FRAMEPROC:
          Frame size = 0x00000030 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
(0005D8)  S_LABEL32: [0001:00002046], $error
(0005EC)  S_REGREL32: rsp+00000040, Type:             0x10E1, DriverObject
(000608)  S_REGREL32: rsp+00000048, Type:             0x108A, RegistryPath
(000624)  S_CALLSITEINFO: [0001:00001FB5], type =             0x1732
(000634)  S_CALLSITEINFO: [0001:00002035], type =             0x166E

(000644) S_END

(000648) S_GPROC32: [0001:000020B0], Cb: 0000000F, Type:             0x1722, FxStubDriverMiniportUnload
         Parent: 00000000, End: 00000748, Next: 00000000
         Debug start: 00000004, Debug end: 00000009
         Flags: Optimized Debug Info

(00068C)  S_LOCAL: Param: 00001017, DriverGlobals
(0006A4)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000020B0] - [0001:000020B9], 0 Gaps
(0006B4)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0030 	  FULL_SCOPE 
(0006BC)  S_LOCAL: Param: 00001199, Driver
(0006D0)  S_DEFRANGE_REGISTER: rdx
	Range: [0001:000020B0] - [0001:000020B9], 0 Gaps
(0006E0)  S_DEFRANGE_FRAMEPOINTER_REL: FrameOffset: 0038 	  FULL_SCOPE 
(0006E8)  S_CALLEES: Count: 1
                       0x127B (0) 
(0006F4)  S_FRAMEPROC:
          Frame size = 0x00000028 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
(000714)  S_REGREL32: rsp+00000030, Type:             0x1017, DriverGlobals
(000730)  S_REGREL32: rsp+00000038, Type:             0x1199, Driver

(000748) S_END

(00074C) S_GPROC32: [0001:000020C0], Cb: 0000002C, Type:             0x1305, FxStubDriverUnload
         Parent: 00000000, End: 0000084C, Next: 00000000
         Debug start: 00000004, Debug end: 00000026
         Flags: Optimized Debug Info

(000788)  S_LOCAL: Param: 000010E1, DriverObject
(0007A0)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000020C0] - [0001:000020E1], 0 Gaps
(0007B0)  S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0001:000020E1] - [0001:000020E6], 0 Gaps
(0007C0)  S_CALLEES: Count: 1
                       0x127B (0) 
(0007CC)  S_FILESTATIC: Local: 00001306, file static, WdfDriverStubDisplacedDriverUnload
(0007CC)   Mod: d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj
(000800)  S_DEFRANGE_REGISTER: rax
	Range: [0001:000020CB] - [0001:000020E1], 0 Gaps
(000810)  S_FRAMEPROC:
          Frame size = 0x00000028 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
(000830)  S_REGREL32: rsp+00000030, Type:             0x10E1, DriverObject

(00084C) S_END

(000850) S_LDATA32: [0003:00000180], Type:             0x1733, WdfDriverStubRegistryPathBuffer
(000880) S_LDATA32: [0003:000003C0], Type:             0x1306, WdfDriverStubDisplacedDriverUnload
(0008B4) S_LDATA32: [0003:000003B8], Type:             0x10E1, WdfDriverStubDriverObject

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj

(000070) S_COMPILE3:
         Language: C++
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: yes
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(0000AC) S_UNAMESPACE: __vc_attributes
(0000C0) S_UNAMESPACE: helper_attributes
(0000D8) S_UNAMESPACE: atl
(0000E0) S_UNAMESPACE: std
(0000E8) S_BUILDINFO:             0x1257

(0000F0) S_GPROC32: [0001:000020EC], Cb: 000000C1, Type:             0x163C, FxStubInitTypes
         Parent: 00000000, End: 00000230, Next: 00000000
         Debug start: 0000000A, Debug end: 000000B5
         Flags: Optimized Debug Info

(000128)  S_LOCAL: Local: 0000165B, pCur
(000138)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:00002167] - [0001:00002183], 0 Gaps
(000148)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:0000213C] - [0001:00002185], 1 Gaps (startOffset, length): (0002, 45)
(00015C)  S_DEFRANGE_REGISTER:MayAvailable rbx
	Range: [0001:0000212E] - [0001:000021A6], 2 Gaps (startOffset, length): (0007, 50) (0071, 2)
(000174)  S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0001:0000213E] - [0001:000021AC], 2 Gaps (startOffset, length): (0029, 1E) (0053, E)

(00018C)  S_INLINESITE: Parent: 000000F0, End: 000001E0, Inlinee:             0x1258
          BinaryAnnotations:    LineOffset 14  CodeOffset 50  CodeOffsetAndLineOffset 28  CodeOffsetAndLineOffset 34
                                LineOffset 7  CodeOffset 9  LineOffset 7  CodeOffset 5
                                LineOffset 2  CodeLengthAndCodeOffset 3 e
          BinaryAnnotation Length: 24 bytes (3 bytes padding)

(0001B4)   S_LOCAL: Param: 0000107D, pCur
(0001C4)   S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0001:0000213E] - [0001:000021AC], 3 Gaps (startOffset, length): (003C, 4) (0042, 5) (0053, E)

(0001E0)  S_INLINESITE_END

(0001E4)  S_FRAMEPROC:
          Frame size = 0x00000030 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(000210)  S_CALLSITEINFO: [0001:00002122], type =             0x166E
(000220)  S_CALLSITEINFO: [0001:00002191], type =             0x166E

(000230) S_END

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"


(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj

(000070) S_COMPILE3:
         Language: C++
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: yes
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(0000AC) S_UNAMESPACE: __vc_attributes
(0000C0) S_UNAMESPACE: helper_attributes
(0000D8) S_UNAMESPACE: atl
(0000E0) S_UNAMESPACE: std
(0000E8) S_LDATA32: [0003:00000118], Type:             0x1696, __KMDF_CLASS_BIND_LAST_BOUND
(000114) S_BUILDINFO:             0x1257

(00011C) S_GPROC32: [0001:000021B0], Cb: 0000017A, Type:             0x16DB, FxStubBindClasses
         Parent: 00000000, End: 00000338, Next: 00000000
         Debug start: 00000014, Debug end: 0000017A
         Flags: Optimized Debug Info

(000158)  S_LOCAL: Param: 0000163F, WdfBindInfo
(000170)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:000021B0] - [0001:000021D7], 0 Gaps
(000180)  S_DEFRANGE_REGISTER: rsi
	Range: [0001:000021D7] - [0001:00002212], 1 Gaps (startOffset, length): (0028, A)
(000194)  S_DEFRANGE_REGISTER:MayAvailable rsi
	Range: [0001:000021FF] - [0001:0000232A], 2 Gaps (startOffset, length): (000A, 9) (00BB, 7)
(0001AC)  S_LOCAL: Local: 00001696, pCur
(0001BC)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:00002243] - [0001:000022A9], 0 Gaps
(0001CC)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00002210] - [0001:000022E3], 1 Gaps (startOffset, length): (0002, CC)
(0001E0)  S_DEFRANGE_REGISTER:MayAvailable rbx
	Range: [0001:000021FF] - [0001:0000232A], 3 Gaps (startOffset, length): (000A, A0) (00B1, 11) (00DF, 5)
(0001FC)  S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0001:00002212] - [0001:00002319], 2 Gaps (startOffset, length): (0031, 66) (00AE, 4D)
(000214)  S_LOCAL: Local: 00000012, status
(000228)  S_DEFRANGE_REGISTER: edi
	Range: [0001:000021C6] - [0001:0000232A], 1 Gaps (startOffset, length): (00F9, 16)
(00023C)  S_DEFRANGE_REGISTER:MayAvailable edi
	Range: [0001:000022C1] - [0001:000022D5], 0 Gaps

(00024C)  S_INLINESITE: Parent: 0000011C, End: 000002A0, Inlinee:             0x126B
          BinaryAnnotations:    LineOffset 14  CodeOffset 60  CodeOffsetAndLineOffset 28  CodeOffsetAndLineOffset 34
                                LineOffset 7  CodeOffset 9  LineOffset 7  CodeOffset 5
                                LineOffset 2  CodeLengthAndCodeOffset 3 16
          BinaryAnnotation Length: 24 bytes (3 bytes padding)

(000274)   S_LOCAL: Param: 0000107D, pCur
(000284)   S_DEFRANGE_REGISTER:MayAvailable rcx
	Range: [0001:00002212] - [0001:00002319], 3 Gaps (startOffset, length): (005B, 3C) (00AE, 1) (00BC, 3F)

(0002A0)  S_INLINESITE_END

(0002A4)  S_CALLEES: Count: 1
                       0x126C (0) 
(0002B0)  S_FRAMEPROC:
          Frame size = 0x00000040 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(0002DC)  S_REGREL32: rsp+00000050, Type:             0x163F, WdfBindInfo
(0002F8)  S_CALLSITEINFO: [0001:000021F3], type =             0x166E
(000308)  S_CALLSITEINFO: [0001:0000229D], type =             0x166E
(000318)  S_CALLSITEINFO: [0001:000022FF], type =             0x166E
(000328)  S_CALLSITEINFO: [0001:00002319], type =             0x166E

(000338) S_END

(00033C) S_GPROC32: [0001:0000232C], Cb: 00000013, Type:             0x146D, FxStubIsClassBound
         Parent: 00000000, End: 00000398, Next: 00000000
         Debug start: 00000000, Debug end: 00000011
         Flags: Optimized Debug Info

(000378)  S_FRAMEPROC:
          Frame size = 0x00000000 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000000
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)

(000398) S_END

(00039C) S_GPROC32: [0001:00002340], Cb: 000000D1, Type:             0x16E9, FxStubUnbindClasses
         Parent: 00000000, End: 00000570, Next: 00000000
         Debug start: 0000000F, Debug end: 000000C0
         Flags: Optimized Debug Info

(0003D8)  S_LOCAL: Param: 0000163F, WdfBindInfo
(0003F0)  S_DEFRANGE_REGISTER: rcx
	Range: [0001:00002340] - [0001:00002367], 0 Gaps
(000400)  S_DEFRANGE_REGISTER: rsi
	Range: [0001:00002367] - [0001:0000240A], 0 Gaps
(000410)  S_LOCAL: Local: 00001696, pCur
(000420)  S_DEFRANGE_REGISTER: rbx
	Range: [0001:00002364] - [0001:000023E8], 2 Gaps (startOffset, length): (0012, 1B) (002F, 53)
(000438)  S_DEFRANGE_REGISTER:MayAvailable rbx
	Range: [0001:00002376] - [0001:00002405], 2 Gaps (startOffset, length): (001B, 2) (0070, 2)
(000450)  S_LOCAL: Local: 00001696, pEnd
(000460)  S_DEFRANGE_REGISTER: rdi
	Range: [0001:00002374] - [0001:00002400], 0 Gaps
(000470)  S_DEFRANGE_REGISTER:MayAvailable rdi
	Range: [0001:00002400] - [0001:0000240F], 0 Gaps

(000480)  S_INLINESITE: Parent: 0000039C, End: 000004CC, Inlinee:             0x126B
          BinaryAnnotations:    LineOffset 14  CodeOffset 34  CodeOffsetAndLineOffset 28  CodeOffsetAndLineOffset 34
                                LineOffset 7  CodeOffset 9  CodeOffsetAndLineOffset 25  LineOffset 6
                                CodeLengthAndCodeOffset e 5
          BinaryAnnotation Length: 20 bytes (1 bytes padding)

(0004A4)   S_LOCAL: Param: 0000107D, pCur
(0004B4)   S_DEFRANGE_REGISTER:MayAvailable rbx
	Range: [0001:00002376] - [0001:00002405], 2 Gaps (startOffset, length): (001B, 2) (0070, 2)

(0004CC)  S_INLINESITE_END

(0004D0)  S_CALLEES: Count: 1
                       0x126F (0) 
(0004DC)  S_FILESTATIC: Local: 00001696, file static, __KMDF_CLASS_BIND_LAST_BOUND
(0004DC)   Mod: d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj
(000508)  S_DEFRANGE_REGISTER: rdi
	Range: [0001:00002356] - [0001:00002374], 0 Gaps
(000518)  S_FRAMEPROC:
          Frame size = 0x00000030 bytes
          Pad size = 0x00000000 bytes
          Offset of pad in frame = 0x00000000
          Size of callee save registers = 0x00000008
          Address of exception handler = 0000:00000000
          Function info: asynceh invalid_pgo_counts Local=rsp Param=rsp guardcf (0x00214200)
Error: unknown symbol record type 1168!

(000544)  S_REGREL32: rsp+00000040, Type:             0x163F, WdfBindInfo
(000560)  S_CALLSITEINFO: [0001:000023F4], type =             0x166E

(000570) S_END

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"


(000004) S_OBJNAME: Signature: 00000000, minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj

(00004C) S_COMPILE3:
         Language: MASM
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Macro Assembler

(000088) S_ENVBLOCK:
         Compiled for edit and continue: no
         Command block:
          cwd = 'minkernel\crts\crtw32\misc\guard'
          exe = 'd:\os\tools\vc\HostX86\amd64\ml64.EXE'
          src = '..\amd64\dispatchcfg.asm'

(0000FC) S_LDATA32: [0002:00000D10], Type:      T_UCHAR(0020), $xdatasym

(000114) S_GPROC32: [0001:000024E0], Cb: 00000006, Type:             0x100F, _guard_dispatch_icall
         Parent: 00000000, End: 00000154, Next: 00000000
         Debug start: 00000000, Debug end: 00000006

(000154) S_END

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"


(000004) S_OBJNAME: Signature: 00000000, WDFLDR.SYS

(000018) S_COMPILE2:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140
         Version string: Microsoft (R) LINK
         Command block:

(000044) S_OBJNAME: Signature: 00000000, WDFLDR.SYS

(000058) S_COMPILE2:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0
         Backend Version: Major = 14, Minor = 38, Build = 33140
         Version string: Microsoft (R) LINK
         Command block:

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"


(000004) S_OBJNAME: Signature: 00000000, d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj

(000058) S_COMPILE3:
         Language: C
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: yes
         Compiled with /hotpatch: yes
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Backend Version: Major = 19, Minor = 38, Build = 33140, QFE = 100
         Version string: Microsoft (R) Optimizing Compiler

(000094) S_BUILDINFO:             0x1203

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

(000004) S_OBJNAME: Signature: 00000000, C:\Users\appveyor\AppData\Local\Temp\lnk{B02E783A-DDCE-4D4B-8DD7-8D7E51FD9AD2}.tmp

(000060) S_COMPILE3:
         Language: CVTRES
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: yes
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) CVTRES

(000090) S_ENVBLOCK:
         Compiled for edit and continue: no
         Command block:
          cwd = 'C:\Users\appveyor\projects\bthps3\BthPS3PSM'
          exe = 'C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\cvtres.exe'

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"


(000004) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(00001C) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(00004C) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(000064) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(000094) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(0000AC) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(0000DC) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(0000F4) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(000124) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(00013C) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(00016C) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(000184) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(0001B4) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(0001CC) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(0001FC) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(000214) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(000244) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(00025C) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(00028C) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(0002A4) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(0002D4) S_OBJNAME: Signature: 00000000, ntoskrnl.exe

(0002EC) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"


(000004) S_OBJNAME: Signature: 00000000, WDFLDR.SYS

(000018) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(000048) S_THUNK32: [0001:00002450], Cb: 00000006, WdfVersionUnbindClass
         Parent: 00000000, End: 00000078, Next: 00000000

(000078) S_END

(00007C) S_OBJNAME: Signature: 00000000, WDFLDR.SYS

(000090) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(0000C0) S_THUNK32: [0001:0000242C], Cb: 00000006, WdfVersionUnbind
         Parent: 00000000, End: 000000EC, Next: 00000000

(0000EC) S_END

(0000F0) S_OBJNAME: Signature: 00000000, WDFLDR.SYS

(000104) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(000134) S_THUNK32: [0001:00002440], Cb: 00000006, WdfVersionBindClass
         Parent: 00000000, End: 00000164, Next: 00000000

(000164) S_END

(000168) S_OBJNAME: Signature: 00000000, WDFLDR.SYS

(00017C) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(0001AC) S_THUNK32: [0001:00002420], Cb: 00000006, WdfVersionBind
         Parent: 00000000, End: 000001D4, Next: 00000000

(0001D4) S_END

(0001D8) S_OBJNAME: Signature: 00000000, WDFLDR.SYS

(0001EC) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(00021C) S_THUNK32: [0001:00002426], Cb: 00000006, WdfLdrQueryInterface
         Parent: 00000000, End: 0000024C, Next: 00000000

(00024C) S_END

** Module: "* Linker *" from ""


(000004) S_OBJNAME: Signature: 00000000, * Linker *

(000018) S_COMPILE3:
         Language: LINK
         Target processor: x64
         Compiled for edit and continue: no
         Compiled without debugging info: no
         Compiled with LTCG: no
         Compiled with /bzalign: no
         Managed code present: no
         Compiled with /GS: no
         Compiled with /hotpatch: no
         Converted by CVTCIL: no
         MSIL module: no
         Compiled with /sdl: no
         Compiled with pgo: no
         .EXP module: no
         Pad bits = 0x0000
         Frontend Version: Major = 0, Minor = 0, Build = 0, QFE = 0
         Backend Version: Major = 14, Minor = 43, Build = 34808, QFE = 0
         Version string: Microsoft (R) LINK

(000048) S_ENVBLOCK:
         Compiled for edit and continue: no
         Command block:
          cwd = 'C:\Users\appveyor\projects\bthps3\BthPS3PSM'
          exe = 'C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe'
          pdb = 'C:\Users\appveyor\projects\bthps3\bin\x64\BthPS3PSM.pdb'
          cmd = ' /ERRORREPORT:QUEUE /OUT:C:\Users\appveyor\projects\bthps3\bin\x64\BthPS3PSM.sys /VERSION:10.0 /INCREMENTAL:NO /NOLOGO /WX /SECTION:INIT,d /NODEFAULTLIB /MANIFEST:NO /DEBUG /PDB:C:\Users\appveyor\projects\bthps3\bin\x64\BthPS3PSM.pdb /SUBSYSTEM:NATIVE,10.00 /Driver /OPT:REF /OPT:ICF /ENTRY:FxDriverEntry /RELEASE /IMPLIB:C:\Users\appveyor\projects\bthps3\bin\x64\BthPS3PSM.lib /MERGE:_TEXT=.text;_PAGE=PAGE /MACHINE:X64 /PROFILE /guard:cf /kernel /IGNORE:4198,4010,4037,4039,4065,4070,4078,4087,4089,4221,4108,4088,4218,4218,4235 /osversion:10.0 /pdbcompress /debugtype:pdata'

(000370) S_SECTION: [0001], RVA = 00001000, Cb = 00002BD2, Align = 00001000, Characteristics = 60000020, .text
(00038C) S_COFFGROUP: [0001:00000000], Cb: 00002460, Characteristics = 60000020, .text$mn
(0003A8) S_COFFGROUP: [0001:00002460], Cb: 000000A0, Characteristics = 60000020, .text$mn$00
(0003C8) S_COFFGROUP: [0001:00002500], Cb: 000004B0, Characteristics = 60000020, .text$mn$21
(0003E8) S_COFFGROUP: [0001:000029B0], Cb: 00000222, Characteristics = 60000020, .text$s
(000404) S_SECTION: [0002], RVA = 00004000, Cb = 00000D10, Align = 00001000, Characteristics = 40000040, .rdata
(000420) S_COFFGROUP: [0002:00000000], Cb: 00000090, Characteristics = C0000040, .idata$5
(00043C) S_COFFGROUP: [0002:00000090], Cb: 00000030, Characteristics = 40000040, .00cfg
(000458) S_COFFGROUP: [0002:000000C0], Cb: 00000060, Characteristics = 40000040, .gfids
(000474) S_COFFGROUP: [0002:00000114], Cb: 00000000, Characteristics = 40000040, .gfids$y
(000490) S_COFFGROUP: [0002:00000120], Cb: 000005E0, Characteristics = 40000040, .rdata
(0004AC) S_COFFGROUP: [0002:00000700], Cb: 00000000, Characteristics = 40000040, .rdata$CastGuardVftablesA
(0004D8) S_COFFGROUP: [0002:00000700], Cb: 00000000, Characteristics = 40000040, .rdata$CastGuardVftablesC
(000504) S_COFFGROUP: [0002:00000700], Cb: 000002A0, Characteristics = 40000040, .rdata$zzzdbg
(000524) S_COFFGROUP: [0002:000009A0], Cb: 00000370, Characteristics = 40000040, .xdata
(000540) S_SECTION: [0003], RVA = 00005000, Cb = 00000424, Align = 00001000, Characteristics = C0000040, .data
(00055C) S_COFFGROUP: [0003:00000000], Cb: 00000100, Characteristics = C0000040, .data
(000574) S_COFFGROUP: [0003:00000100], Cb: 00000010, Characteristics = C0000040, .kmdfclassbind$a
(000598) S_COFFGROUP: [0003:00000110], Cb: 00000008, Characteristics = C0000040, .kmdfclassbind$c
(0005BC) S_COFFGROUP: [0003:00000118], Cb: 00000008, Characteristics = C0000040, .kmdfclassbind$d
(0005E0) S_COFFGROUP: [0003:00000120], Cb: 00000010, Characteristics = C0000040, .kmdftypeinit$a
(000604) S_COFFGROUP: [0003:00000130], Cb: 00000010, Characteristics = C0000040, .kmdftypeinit$c
(000628) S_COFFGROUP: [0003:00000140], Cb: 000002E4, Characteristics = C0000080, .bss
(000640) S_SECTION: [0004], RVA = 00006000, Cb = 00000294, Align = 00001000, Characteristics = 40000040, .pdata
(00065C) S_COFFGROUP: [0004:00000000], Cb: 00000294, Characteristics = 40000040, .pdata
(000678) S_SECTION: [0005], RVA = 00007000, Cb = 00001C32, Align = 00001000, Characteristics = 60000020, PAGE
(000694) S_COFFGROUP: [0005:00000000], Cb: 00001780, Characteristics = 60000020, PAGE
(0006AC) S_COFFGROUP: [0005:00001780], Cb: 000004B2, Characteristics = 60000020, PAGE$s
(0006C8) S_SECTION: [0006], RVA = 00009000, Cb = 0000061C, Align = 00001000, Characteristics = 60000020, INIT
(0006E4) S_COFFGROUP: [0006:00000000], Cb: 00000350, Characteristics = 60000020, INIT
(0006FC) S_COFFGROUP: [0006:00000350], Cb: 00000084, Characteristics = 60000020, INIT$s
(000718) S_COFFGROUP: [0006:000003D4], Cb: 00000028, Characteristics = C0000040, .idata$2
(000734) S_COFFGROUP: [0006:000003FC], Cb: 00000014, Characteristics = C0000040, .idata$3
(000750) S_COFFGROUP: [0006:00000410], Cb: 00000090, Characteristics = C0000040, .idata$4
(00076C) S_COFFGROUP: [0006:000004A0], Cb: 0000017C, Characteristics = C0000040, .idata$6
(000788) S_SECTION: [0007], RVA = 0000A000, Cb = 00001110, Align = 00001000, Characteristics = 40000040, .rsrc
(0007A4) S_COFFGROUP: [0007:00000000], Cb: 00000110, Characteristics = 40000040, .rsrc$01
(0007C0) S_COFFGROUP: [0007:00000110], Cb: 00001000, Characteristics = 40000040, .rsrc$02
(0007DC) S_SECTION: [0008], RVA = 0000C000, Cb = 000000AC, Align = 00001000, Characteristics = 42000040, .reloc


*** GLOBALS

S_CONSTANT: Type:             0x101B, Value: 55, WdfDeviceInitSetPnpPowerEventCallbacksTableIndex
S_CONSTANT: Type:             0x104E, Value: 1, WDF_REQUEST_REUSE_SET_NEW_IRP
S_UDT:             0x10BE, EVT_WDF_DEVICE_EJECT
S_CONSTANT: Type:             0x15E8, Value: 30, JobObjectContainerId
S_GDATA32: [0003:000003B0], Type:             0x1017, WdfDriverGlobals
S_GDATA32: [0009:00014500], Type:      T_ULONG(0022), __guard_flags
S_PROCREF: 0x00000000: (   3, 00000208) UrbFunctionBulkInTransferCompleted
S_UDT:             0x10D0, EVT_WDF_DEVICE_WAKE_FROM_SX_TRIGGERED
S_CONSTANT: Type:             0x101B, Value: 47, WdfDeviceAssignSxWakeSettingsTableIndex
S_UDT:     T_USHORT(0021), wchar_t
S_GDATA32: [0002:000000A8], Type:             0x15C0, __guard_xfg_dispatch_icall_fptr
S_GDATA32: [0002:000000A8], Type:    T_64PVOID(0603), __guard_xfg_dispatch_icall_fptr
S_UDT:             0x10E4, PDEVICE_OBJECT
S_CONSTANT: Type:             0x101B, Value: 225, WdfPdoAddEjectionRelationsPhysicalDeviceTableIndex
S_UDT:             0x1250, POWER_STATE_TYPE
S_PROCREF: 0x00000000: (   2, 00001884) WppClassicProviderCallback
S_UDT:             0x10D2, PFN_WDF_DEVICE_SURPRISE_REMOVAL
S_UDT:             0x11B4, PFN_WDFFDOINITQUERYPROPERTY
S_UDT:   T_64PUQUAD(0623), PREGHANDLE
S_UDT:             0x11BA, WDFREQUEST
S_CONSTANT: Type:             0x101B, Value: 243, WdfRegistryAssignMultiStringTableIndex
S_CONSTANT: Type:             0x101B, Value: 435, WdfDeviceAssignPropertyTableIndex
S_CONSTANT: Type:             0x101B, Value: 193, WdfMemoryCreatePreallocatedTableIndex
S_CONSTANT: Type:             0x101B, Value: 430, WdfDeviceInitSetReleaseHardwareOrderOnFailureTableIndex
S_UDT:             0x1725, PWDF_LOADER_INTERFACE_DRIVER_ENTRY_FAILURE
S_UDT:             0x10BE, EVT_WDF_DEVICE_SELF_MANAGED_IO_SUSPEND
S_UDT:             0x139F, PRTL_DYNAMIC_HASH_TABLE_CONTEXT
S_CONSTANT: Type:             0x101B, Value: 429, WdfInterruptReportInactiveTableIndex
S_CONSTANT: Type:             0x101B, Value: 14, WdfCollectionGetCountTableIndex
S_CONSTANT: Type:             0x101B, Value: 177, WdfIoTargetQueryForInterfaceTableIndex
S_CONSTANT: Type:             0x101B, Value: 404, WdfDeviceConfigureWdmIrpDispatchCallbackTableIndex
S_CONSTANT: Type:             0x1044, Value: 0, PowerDeviceUnspecified
S_UDT:             0x15F6, PGS_HANDLER_DATA
S_UDT:             0x10F1, EVENT_DATA_DESCRIPTOR
S_CONSTANT: Type:             0x100C, Value: 43, WPP_TRACE_OPTIONS
S_UDT:             0x115F, PACCESS_STATE
S_UDT:             0x112B, PETW_CLASSIC_CALLBACK
S_LDATA32: [0003:000003B8], Type:             0x10E1, WdfDriverStubDriverObject
S_UDT:             0x1100, USBD_PIPE_INFORMATION
S_CONSTANT: Type:             0x101B, Value: 182, WdfIoTargetSendReadSynchronouslyTableIndex
S_UDT:             0x1297, PFAST_IO_WRITE_COMPRESSED
S_UDT:             0x134E, PFN_WDFPDOINITADDCOMPATIBLEID
S_GDATA32: [0002:00000190], Type:             0x10FD, SetPatchStatusForDeviceInstance
S_CONSTANT: Type:             0x1052, Value: 5, WheaErrSrcTypeGeneric
S_UDT:             0x14A7, PFN_WDFWAITLOCKCREATE
S_UDT:             0x16BC, PFN_WDF_CLIENT_UNBIND_CLASS
S_GDATA32: [0002:00000180], Type:             0x10FD, GetPatchStatusForDeviceInstance
S_GDATA32: [0003:000000C8], Type:      T_UQUAD(0023), __security_cookie_complement
S_PROCREF: 0x00000000: (   2, 00001E60) WppTraceCallback
S_UDT:             0x119E, IO_RESOURCE_DESCRIPTOR
S_CONSTANT: Type:             0x15E8, Value: 21, JobObjectReserved4Information
S_CONSTANT: Type:             0x101B, Value: 367, WdfVerifierDbgBreakPointTableIndex
S_UDT:             0x1034, WDF_POWER_POLICY_S0_IDLE_USER_CONTROL
S_CONSTANT: Type:             0x1013, Value: 2, ResultPositive
S_UDT:             0x13C2, PFN_WDFWORKITEMFLUSH
S_CONSTANT: Type:             0x101B, Value: 204, WdfObjectContextGetObjectTableIndex
S_CONSTANT: Type:             0x101B, Value: 77, WdfDeviceCreateDeviceInterfaceTableIndex
S_UDT:             0x14F5, TP_CALLBACK_PRIORITY
S_UDT:             0x128D, PWDF_REQUEST_SEND_OPTIONS
S_UDT:             0x10BA, WDFDEVICE
S_UDT:             0x1458, FAST_IO_ACQUIRE_FOR_MOD_WRITE
S_UDT:      T_UCHAR(0020), UINT8
S_UDT:             0x12CD, PFN_WDFREQUESTGETSTATUS
S_UDT:             0x15F0, XSAVE_FORMAT
S_CONSTANT: Type:             0x15E8, Value: 25, JobObjectClearEvent
S_UDT:             0x10F8, DEVPROPGUID
S_GDATA32: [0002:000001F0], Type:             0x1308, WPP_d561fdd84a6b334c0c998bd67f784ac3_Traceguids
S_UDT:             0x11E8, PDEVICE_CONTEXT
S_UDT:             0x10F3, WDFFUNC
S_CONSTANT: Type:             0x1007, Value: 7, WPP_BIT_TRACE_SIDEBAND
S_UDT:      T_UINT4(0075), UINT
S_UDT:   T_64PULONG(0622), PULONG
S_CONSTANT: Type:             0x101B, Value: 13, WdfCollectionCreateTableIndex
S_UDT:             0x101D, WDF_EXECUTION_LEVEL
S_CONSTANT: Type:             0x15E8, Value: 50, JobObjectReserved28Information
S_CONSTANT: Type:             0x101B, Value: 72, WdfDeviceInitSetRequestAttributesTableIndex
S_UDT:             0x1338, FAST_IO_CHECK_IF_POSSIBLE
S_UDT:             0x10C5, PFN_WDFDEVICEINITFREE
S_CONSTANT: Type:             0x106C, Value: 9, RegNtQueryMultipleValueKey
S_CONSTANT: Type:             0x106A, Value: 32, NonPagedPoolSession
S_UDT:             0x1301, DRIVER_CANCEL
S_PROCREF: 0x00000000: (  12, 0000011C) _guard_dispatch_icall_nop
S_GDATA32: [0001:00002470], Type:             0x107B, _guard_dispatch_icall_nop
S_UDT:             0x1112, FAST_IO_MDL_READ_COMPLETE_COMPRESSED
S_CONSTANT: Type:             0x162B, Value: 1, DrvRtPoolNxOptIn
S_CONSTANT: Type:             0x15E8, Value: 40, JobObjectServerSiloInitialize
S_CONSTANT: Type:             0x15E8, Value: 49, JobObjectReserved27Information
S_CONSTANT: Type:             0x101B, Value: 304, WdfCmResourceListGetCountTableIndex
S_PROCREF: 0x00000000: (   1, 000025F0) McTemplateK0qz_EtwWriteTransfer
S_CONSTANT: Type:             0x101B, Value: 185, WdfIoTargetFormatRequestForWriteTableIndex
S_CONSTANT: Type:             0x101B, Value: 69, WdfDeviceInitSetDeviceClassTableIndex
S_UDT:             0x1433, PFAST_IO_WRITE
S_CONSTANT: Type:             0x1048, Value: 0, WdfIrqPolicyMachineDefault
S_UDT:             0x121A, PFILE_GET_QUOTA_INFORMATION
S_CONSTANT: Type:             0x15E8, Value: 38, JobObjectServerSiloBasicInformation
S_CONSTANT: Type:             0x101B, Value: 407, WdfDmaTransactionGetTransferInfoTableIndex
S_CONSTANT: Type:             0x15E8, Value: 48, JobObjectReserved26Information
S_CONSTANT: Type:             0x101B, Value: 265, WdfRequestCompleteWithInformationTableIndex
S_UDT:             0x127C, EVT_WDF_DRIVER_UNLOAD
S_CONSTANT: Type:             0x101B, Value: 210, WdfPdoInitAllocateTableIndex
S_UDT:   T_64PWCHAR(0671), PWCHAR
S_GDATA32: [0009:00000000], Type:      T_ULONG(0022), __guard_longjmp_count
S_CONSTANT: Type:             0x15E8, Value: 47, JobObjectReserved25Information
S_CONSTANT: Type:             0x101B, Value: 66, WdfDeviceInitSetDeviceTypeTableIndex
S_CONSTANT: Type:             0x101B, Value: 125, WdfFdoInitOpenRegistryKeyTableIndex
S_CONSTANT: Type:             0x101B, Value: 211, WdfPdoInitSetEventCallbacksTableIndex
S_CONSTANT: Type:             0x15E8, Value: 45, JobObjectSiloSystemRoot
S_CONSTANT: Type:             0x106C, Value: 6, RegNtEnumerateValueKey
S_CONSTANT: Type:             0x101B, Value: 388, WdfDeviceGetSystemPowerActionTableIndex
S_UDT:             0x10F6, INTERFACE_TYPE
S_UDT:             0x109E, WDF_OBJECT_CONTEXT_TYPE_INFO
S_UDT:             0x15F8, UNWIND_HISTORY_TABLE_ENTRY
S_CONSTANT: Type:             0x15E8, Value: 46, JobObjectReserved24Information
S_CONSTANT: Type:             0x102E, Value: 1, StateNotificationEnterState
S_CONSTANT: Type:             0x1013, Value: 1, ResultNegative
S_UDT:             0x1017, PWDF_DRIVER_GLOBALS
S_UDT:  T_64PUSHORT(0621), PUSHORT
S_UDT:             0x1305, DRIVER_UNLOAD
S_LDATA32: [0003:000003C0], Type:             0x1306, WdfDriverStubDisplacedDriverUnload
S_UDT:             0x12CD, PFN_WDFREQUESTALLOCATETIMER
S_UDT:             0x1343, SINGLE_LIST_ENTRY
S_CONSTANT: Type:             0x101B, Value: 378, WdfWmiInstanceFireEventTableIndex
S_UDT:      T_SHORT(0011), INT16
S_CONSTANT: Type:             0x101B, Value: 38, WdfDeviceClearRemovalRelationsDevicesTableIndex
S_UDT:             0x1159, FAST_IO_DETACH_DEVICE
S_UDT:             0x13A4, POWER_STATE
S_UDT:             0x139A, PFAST_IO_CHECK_IF_POSSIBLE
S_CONSTANT: Type:             0x15E8, Value: 45, JobObjectReserved23Information
S_UDT:             0x1104, PWDF_DEVICE_PROPERTY_DATA
S_CONSTANT: Type:             0x101B, Value: 86, WdfDeviceIndicateWakeStatusTableIndex
S_UDT:             0x1375, PIO_STACK_LOCATION
S_CONSTANT: Type:             0x101B, Value: 301, WdfIoResourceListRemoveByDescriptorTableIndex
S_CONSTANT: Type:             0x15E8, Value: 22, JobObjectReserved5Information
S_CONSTANT: Type:             0x101B, Value: 437, WdfFdoInitAllocAndQueryPropertyExTableIndex
S_CONSTANT: Type:             0x1007, Value: 4, WPP_BIT_TRACE_QUEUE
S_UDT:             0x106A, POOL_TYPE
S_UDT:             0x13F4, FAST_IO_UNLOCK_ALL
S_UDT:       T_LONG(0012), HRESULT
S_CONSTANT: Type:             0x15E8, Value: 44, JobObjectReserved22Information
S_GDATA32: [0002:000001C8], Type:             0x10D8, DEVPKEY_Device_InstanceId
S_CONSTANT: Type:             0x101B, Value: 236, WdfRegistryQueryMemoryTableIndex
S_UDT:             0x10EA, PWORKER_THREAD_ROUTINE
S_UDT:             0x1220, DEVICE_RELATION_TYPE
S_CONSTANT: Type:             0x15E8, Value: 43, JobObjectReserved21Information
S_UDT:      T_UQUAD(0023), uintptr_t
S_UDT:             0x11F0, PFN_WDFMEMORYGETBUFFER
S_UDT:       T_QUAD(0013), LONG64
S_CONSTANT: Type:             0x107B, Value: 8, CLFS_SCAN_CLOSE
S_CONSTANT: Type:             0x1277, Value: 16, ClfsContainerPendingArchive
S_CONSTANT: Type:             0x105E, Value: 8, WdfIoQueueDriverNoRequests
S_CONSTANT: Type:             0x101B, Value: 124, WdfFdoInitWdmGetPhysicalDeviceTableIndex
S_UDT:             0x11C2, DEVICE_USAGE_NOTIFICATION_TYPE
S_UDT:             0x1406, PKDEFERRED_ROUTINE
S_CONSTANT: Type:             0x1062, Value: 1, InterruptActiveHigh
S_CONSTANT: Type:             0x1058, Value: 3, WdfIoTargetOpenReopen
S_CONSTANT: Type:             0x1044, Value: 4, PowerDeviceD3
S_CONSTANT: Type:             0x15E8, Value: 42, JobObjectReserved20Information
S_CONSTANT: Type:             0x1044, Value: 3, PowerDeviceD2
S_CONSTANT: Type:             0x1044, Value: 2, PowerDeviceD1
S_CONSTANT: Type:             0x1044, Value: 1, PowerDeviceD0
S_GDATA32: [0002:00000098], Type:             0x15C0, __guard_dispatch_icall_fptr
S_GDATA32: [0002:00000098], Type:    T_64PVOID(0603), __guard_dispatch_icall_fptr
S_CONSTANT: Type:             0x1028, Value: 2, WdfRetrieveMissingChildren
S_UDT:             0x14AF, PFN_WDFCOLLECTIONCREATE
S_UDT:             0x1131, PEPROCESS
S_UDT:             0x13F2, PFN_WDFDEVICEINITSETPOWERPOLICYOWNERSHIP
S_UDT:             0x12D1, PDRIVER_EXTENSION
S_CONSTANT: Type:             0x101B, Value: 79, WdfDeviceRetrieveDeviceInterfaceStringTableIndex
S_UDT:             0x12E1, PFAST_IO_QUERY_BASIC_INFO
S_UDT:             0x1123, PFN_WDFOBJECTRELEASELOCK
S_CONSTANT: Type:             0x15E8, Value: 39, JobObjectReserved17Information
S_UDT:             0x1172, PFAST_IO_MDL_READ_COMPLETE_COMPRESSED
S_CONSTANT: Type:             0x101B, Value: 287, WdfIoResourceRequirementsListSetInterfaceTypeTableIndex
S_CONSTANT: Type:             0x101B, Value: 271, WdfRequestRetrieveInputWdmMdlTableIndex
S_UDT:             0x1123, PFN_WDFOBJECTDELETE
S_PROCREF: 0x00000000: (  19, 00000648) FxStubDriverMiniportUnload
S_UDT:             0x1739, IMAGE_LOAD_CONFIG_CODE_INTEGRITY
S_UDT:             0x145A, PFAST_IO_ACQUIRE_FOR_MOD_WRITE
S_CONSTANT: Type:             0x101B, Value: 379, WdfWorkItemCreateTableIndex
S_CONSTANT: Type:             0x15E8, Value: 38, JobObjectReserved16Information
S_GDATA32: [0002:00000268], Type:             0x10B7, SDDL_DEVOBJ_SYS_ALL_ADM_ALL
S_CONSTANT: Type:             0x101B, Value: 197, WdfMemoryCopyFromBufferTableIndex
S_PROCREF: 0x00000000: (  21, 0000039C) FxStubUnbindClasses
S_CONSTANT: Type:             0x101B, Value: 405, WdfDmaEnablerConfigureSystemProfileTableIndex
S_UDT:             0x11BC, PFN_WPPQUERYTRACEINFORMATION
S_CONSTANT: Type:             0x101B, Value: 261, WdfRequestGetCompletionParamsTableIndex
S_CONSTANT: Type:             0x15E4, Value: 1, SE_WS_APPX_SIGNATURE_ORIGIN_UNKNOWN
S_CONSTANT: Type:             0x101B, Value: 396, WdfCxDeviceInitAllocateTableIndex
S_CONSTANT: Type:             0x15E8, Value: 37, JobObjectReserved15Information
S_CONSTANT: Type:             0x101B, Value: 300, WdfIoResourceListRemoveTableIndex
S_CONSTANT: Type:             0x101B, Value: 370, WdfWmiProviderGetDeviceTableIndex
S_UDT:             0x1611, EXCEPTION_RECORD
S_CONSTANT: Type:             0x1007, Value: 3, WPP_BIT_TRACE_DEVICE
S_CONSTANT: Type:             0x101B, Value: 299, WdfIoResourceListGetDescriptorTableIndex
S_CONSTANT: Type:             0x101B, Value: 24, WdfCommonBufferGetLengthTableIndex
S_CONSTANT: Type:             0x101B, Value: 123, WdfDriverIsVersionAvailableTableIndex
S_CONSTANT: Type:             0x1030, Value: 5, DevicePropertyClassName
S_CONSTANT: Type:             0x15E8, Value: 31, JobObjectReserved14Information
S_PROCREF: 0x00000000: (   4, 00000D80) BthPS3PSM_QueueInitialize
S_UDT:             0x12C9, PFAST_IO_MDL_READ
S_CONSTANT: Type:             0x15E8, Value: 28, JobObjectMemoryUsageInformation
S_UDT:             0x1126, LPCGUID
S_CONSTANT: Type:             0x101B, Value: 289, WdfIoResourceRequirementsListInsertIoResListTableIndex
S_UDT:             0x128A, PFN_WDF_DRIVER_UNLOAD
S_CONSTANT: Type:             0x15E8, Value: 39, JobObjectServerSiloUserSharedData
S_CONSTANT: Type:             0x101B, Value: 84, WdfDeviceSetPowerCapabilitiesTableIndex
S_UDT:             0x113F, USBD_INTERFACE_INFORMATION
S_UDT:             0x12A6, PFN_WDFDRIVERCREATE
S_CONSTANT: Type:             0x1066, Value: 2, MmFrameBufferCached
S_CONSTANT: Type:             0x101B, Value: 126, WdfFdoInitQueryPropertyTableIndex
S_CONSTANT: Type:             0x15E8, Value: 30, JobObjectReserved13Information
S_UDT:      T_UCHAR(0020), BYTE
S_CONSTANT: Type:             0x15E8, Value: 23, JobObjectReserved6Information
S_CONSTANT: Type:             0x105E, Value: 16, WdfIoQueuePnpHeld
S_CONSTANT: Type:             0x1015, Value: 2, WdfUseDefault
S_UDT:             0x12CE, PRKEVENT
S_GDATA32: [0003:000003C8], Type:             0x1025, FilterDeviceCollectionLock
S_CONSTANT: Type:             0x101B, Value: 368, WdfVerifierKeBugCheckTableIndex
S_CONSTANT: Type:             0x101B, Value: 51, WdfDeviceGetCharacteristicsTableIndex
S_CONSTANT: Type:             0x15E8, Value: 29, JobObjectReserved12Information
S_CONSTANT: Type:             0x105C, Value: 2, MaximumMode
S_CONSTANT: Type:             0x101B, Value: 60, WdfDeviceInitRegisterPowerPolicyStateChangeCallbackTableIndex
S_UDT:    T_64PVOID(0603), PVOID
S_CONSTANT: Type:             0x101B, Value: 303, WdfCmResourceListInsertDescriptorTableIndex
S_CONSTANT: Type:             0x101B, Value: 21, WdfCommonBufferCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 262, WdfRequestAllocateTimerTableIndex
S_CONSTANT: Type:             0x106A, Value: 36, NonPagedPoolCacheAlignedSession
S_CONSTANT: Type:             0x101B, Value: 417, WdfInterruptTryToAcquireLockTableIndex
S_UDT:      T_UINT4(0075), UINT32
S_CONSTANT: Type:             0x15E8, Value: 28, JobObjectReserved11Information
S_CONSTANT: Type:             0x15E8, Value: 49, JobObjectPagePriorityLimit
S_UDT:             0x1097, PCWDF_OBJECT_CONTEXT_TYPE_INFO
S_CONSTANT: Type:             0x101B, Value: 395, WdfRequestForwardToParentDeviceIoQueueTableIndex
S_CONSTANT: Type:             0x101B, Value: 111, WdfDpcCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 414, WdfDmaTransactionCancelTableIndex
S_CONSTANT: Type:             0x15E8, Value: 27, JobObjectReserved10Information
S_GDATA32: [0009:00000000], Type:             0x1734, __guard_iat_table
S_UDT:             0x12C0, KDEVICE_QUEUE
S_CONSTANT: Type:             0x101B, Value: 309, WdfStringGetUnicodeStringTableIndex
S_UDT:             0x118C, PFN_WDFREGISTRYQUERYULONG
S_UDT:             0x1323, LIST_ENTRY
S_PROCREF: 0x00000000: (   8, 00000104) memcpy
S_UDT:             0x12EB, PHYSICAL_ADDRESS
S_CONSTANT: Type:             0x101B, Value: 28, WdfDeviceGetDeviceStateTableIndex
S_UDT:             0x1081, MCGEN_TRACE_CONTEXT
S_CONSTANT: Type:             0x1028, Value: 4, WdfRetrievePendingChildren
S_CONSTANT: Type:             0x15CC, Value: 1, VRF_TRIAGE_CONTEXT_DEFAULT
S_UDT:             0x10CE, PFN_WDF_DEVICE_SELF_MANAGED_IO_SUSPEND
S_CONSTANT: Type:             0x107B, Value: 32, CLFS_SCAN_BUFFERED
S_UDT:             0x10EB, PDRIVER_ADD_DEVICE
S_CONSTANT: Type:             0x101B, Value: 102, WdfDmaTransactionReleaseTableIndex
S_CONSTANT: Type:             0x101B, Value: 277, WdfRequestGetFileObjectTableIndex
S_CONSTANT: Type:             0x101B, Value: 180, WdfIoTargetWdmGetTargetFileObjectTableIndex
S_UDT:             0x138F, PFILE_NETWORK_OPEN_INFORMATION
S_CONSTANT: Type:             0x101B, Value: 248, WdfRequestCreateFromIrpTableIndex
S_CONSTANT: Type:             0x101B, Value: 254, WdfRequestGetStatusTableIndex
S_CONSTANT: Type:             0x101B, Value: 189, WdfIoTargetFormatRequestForInternalIoctlTableIndex
S_UDT:             0x1122, FAST_IO_WRITE_COMPRESSED
S_UDT:             0x1297, PFAST_IO_READ_COMPRESSED
S_UDT:   T_64PUCHAR(0620), PUCHAR
S_UDT:             0x1357, PIO_APC_ROUTINE
S_CONSTANT: Type:             0x101B, Value: 208, WdfObjectDeleteTableIndex
S_CONSTANT: Type:             0x1032, Value: 2, IdleCanWakeFromS0
S_UDT:             0x10D2, PFN_WDF_DEVICE_WAKE_FROM_SX_TRIGGERED
S_CONSTANT: Type:             0x101B, Value: 174, WdfIoTargetGetDeviceTableIndex
S_UDT:             0x1025, WDFWAITLOCK
S_CONSTANT: Type:             0x101B, Value: 167, WdfIoTargetCreateTableIndex
S_UDT:             0x11E1, PFN_ETWREGISTERCLASSICPROVIDER
S_GDATA32: [0002:000000B0], Type:             0x15C0, __guard_xfg_table_dispatch_icall_fptr
S_GDATA32: [0002:000000B0], Type:    T_64PVOID(0603), __guard_xfg_table_dispatch_icall_fptr
S_UDT:             0x10CE, PFN_WDF_DEVICE_EJECT
S_UDT:   T_64PULONG(0622), PDEVPROPTYPE
S_CONSTANT: Type:             0x101B, Value: 108, WdfDmaTransactionGetRequestTableIndex
S_GDATA32: [0003:000000D0], Type:             0x163B, WdfBindInfo
S_CONSTANT: Type:             0x101B, Value: 34, WdfDeviceWdmDispatchPreprocessedIrpTableIndex
S_CONSTANT: Type:             0x101B, Value: 394, WdfRequestIsReservedTableIndex
S_CONSTANT: Type:             0x106F, Value: 16, NormalPagePriority
S_CONSTANT: Type:             0x101B, Value: 209, WdfObjectQueryTableIndex
S_UDT:             0x1111, WDFMEMORY
S_GDATA32: [0003:00000160], Type:             0x1181, pfnWppGetVersion
S_CONSTANT: Type:             0x1054, Value: 1, PoEffectivePowerModeBetterBattery
S_CONSTANT: Type:             0x101B, Value: 376, WdfWmiInstanceGetDeviceTableIndex
S_UDT:             0x10D0, EVT_WDF_DEVICE_SURPRISE_REMOVAL
S_CONSTANT: Type:             0x101B, Value: 92, WdfDeviceGetDefaultQueueTableIndex
S_UDT:   T_64PWCHAR(0671), PWCH
S_CONSTANT: Type:             0x101B, Value: 148, WdfInterruptWdmGetInterruptTableIndex
S_CONSTANT: Type:             0x101B, Value: 191, WdfIoTargetFormatRequestForInternalIoctlOthersTableIndex
S_CONSTANT: Type:             0x1040, Value: 0, DriverManagedIdleTimeout
S_UDT:             0x11A9, WDFQUEUE
S_CONSTANT: Type:             0x15E8, Value: 42, JobObjectIoAttribution
S_CONSTANT: Type:             0x101B, Value: 165, WdfIoQueuePurgeTableIndex
S_UDT:       T_INT4(0074), INT32
S_CONSTANT: Type:             0x15D0, Value: 227, SystemPoolZeroingInformation
S_CONSTANT: Type:             0x101B, Value: 178, WdfIoTargetWdmGetTargetDeviceObjectTableIndex
S_UDT:             0x13B2, FAST_IO_QUERY_OPEN
S_UDT:             0x10B7, UNICODE_STRING
S_UDT:             0x1172, PFAST_IO_MDL_READ_COMPLETE
S_CONSTANT: Type:             0x101B, Value: 43, WdfDeviceGetDevicePnpStateTableIndex
S_CONSTANT: Type:             0x101B, Value: 136, WdfFdoUnlockStaticChildListFromIterationTableIndex
S_CONSTANT: Type:             0x106A, Value: 0, NonPagedPool
S_CONSTANT: Type:             0x15E8, Value: 24, JobObjectReserved7Information
S_CONSTANT: Type:             0x101B, Value: 122, WdfDriverRetrieveVersionStringTableIndex
S_UDT:             0x1128, FAST_IO_ACQUIRE_FOR_CCFLUSH
S_CONSTANT: Type:             0x15E8, Value: 27, JobObjectClearPeakJobMemoryUsed
S_UDT:             0x11A6, PFN_WDFCOLLECTIONGETITEM
S_UDT:             0x1478, PUSBD_PIPE_INFORMATION
S_CONSTANT: Type:             0x101B, Value: 116, WdfDriverCreateTableIndex
S_UDT:             0x13F6, PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR
S_CONSTANT: Type:             0x1277, Value: 2, ClsContainerInactive
S_CONSTANT: Type:             0x101B, Value: 88, WdfDeviceStopIdleNoTrackTableIndex
S_CONSTANT: Type:             0x101B, Value: 403, WdfDeviceInitSetRemoveLockOptionsTableIndex
S_UDT:      T_ULONG(0022), NODE_REQUIREMENT
S_CONSTANT: Type:             0x101B, Value: 159, WdfIoQueueRetrieveRequestByFileObjectTableIndex
S_UDT:             0x1396, PFAST_IO_DEVICE_CONTROL
S_CONSTANT: Type:             0x15E8, Value: 41, JobObjectReserved19Information
S_UDT:       T_LONG(0012), NTSTATUS
S_UDT:             0x13FA, SECTION_OBJECT_POINTERS
S_GDATA32: [0002:000001C0], Type:             0x130E, Nefarius_Bluetooth_PS_Filter_ServiceLevels
S_UDT:   T_64PUCHAR(0620), PBOOLEAN
S_CONSTANT: Type:             0x101B, Value: 96, WdfDmaEnablerGetMaximumScatterGatherElementsTableIndex
S_UDT:             0x1301, DRIVER_STARTIO
S_UDT:             0x117F, WMIENTRY_NEW
S_CONSTANT: Type:             0x101B, Value: 194, WdfMemoryGetBufferTableIndex
S_UDT:             0x126C, IO_COMPLETION_ROUTINE
S_PROCREF: 0x00000000: (   6, 0000024C) __GSHandlerCheckCommon
S_CONSTANT: Type:             0x15E8, Value: 40, JobObjectReserved18Information
S_CONSTANT: Type:             0x101B, Value: 156, WdfIoQueueStopSynchronouslyTableIndex
S_CONSTANT: Type:             0x101B, Value: 291, WdfIoResourceRequirementsListGetIoResListTableIndex
S_CONSTANT: Type:             0x106C, Value: 14, RegNtKeyHandleClose
S_CONSTANT: Type:             0x101B, Value: 377, WdfWmiInstanceGetProviderTableIndex
S_GDATA32: [0009:00000000], Type:      T_ULONG(0022), __guard_eh_cont_count
S_ANNOTATIONREF: 0x00000000: (   5, 000004F4) 
S_ANNOTATIONREF: 0x00000000: (   5, 000005E4) 
S_ANNOTATIONREF: 0x00000000: (   5, 000006E0) 
S_ANNOTATIONREF: 0x00000000: (   5, 000007E8) 
S_ANNOTATIONREF: 0x00000000: (   5, 000008EC) 
S_ANNOTATIONREF: 0x00000000: (   5, 000009F4) 
S_ANNOTATIONREF: 0x00000000: (   5, 00000AC8) 
S_ANNOTATIONREF: 0x00000000: (   5, 00000E80) 
S_ANNOTATIONREF: 0x00000000: (   5, 000012FC) 
S_ANNOTATIONREF: 0x00000000: (   5, 000013BC) 
S_ANNOTATIONREF: 0x00000000: (   5, 00001484) 
S_ANNOTATIONREF: 0x00000000: (   5, 00001590) 
S_ANNOTATIONREF: 0x00000000: (   5, 00002030) 
S_ANNOTATIONREF: 0x00000000: (   5, 000020F0) 
S_ANNOTATIONREF: 0x00000000: (   5, 000021FC) 
S_ANNOTATIONREF: 0x00000000: (   5, 00002308) 
S_ANNOTATIONREF: 0x00000000: (   5, 0000242C) 
S_ANNOTATIONREF: 0x00000000: (   5, 00002538) 
S_ANNOTATIONREF: 0x00000000: (   5, 0000263C) 
S_ANNOTATIONREF: 0x00000000: (   5, 00002740) 
S_ANNOTATIONREF: 0x00000000: (   5, 0000284C) 
S_ANNOTATIONREF: 0x00000000: (   5, 00002950) 
S_ANNOTATIONREF: 0x00000000: (   5, 00002A54) 
S_ANNOTATIONREF: 0x00000000: (   5, 00002B58) 
S_ANNOTATIONREF: 0x00000000: (   4, 000006B8) 
S_ANNOTATIONREF: 0x00000000: (   4, 000007B0) 
S_ANNOTATIONREF: 0x00000000: (   4, 000008A8) 
S_ANNOTATIONREF: 0x00000000: (   4, 0000097C) 
S_ANNOTATIONREF: 0x00000000: (   4, 00000A74) 
S_ANNOTATIONREF: 0x00000000: (   4, 00000F24) 
S_ANNOTATIONREF: 0x00000000: (   3, 000006CC) 
S_ANNOTATIONREF: 0x00000000: (   3, 00000784) 
S_ANNOTATIONREF: 0x00000000: (   3, 00000858) 
S_ANNOTATIONREF: 0x00000000: (   3, 00000958) 
S_ANNOTATIONREF: 0x00000000: (   3, 00000A68) 
S_ANNOTATIONREF: 0x00000000: (   3, 00000B3C) 
S_ANNOTATIONREF: 0x00000000: (   3, 00000C3C) 
S_ANNOTATIONREF: 0x00000000: (   3, 00000D48) 
S_ANNOTATIONREF: 0x00000000: (   3, 000011AC) 
S_ANNOTATIONREF: 0x00000000: (   3, 00001264) 
S_ANNOTATIONREF: 0x00000000: (   3, 00001338) 
S_ANNOTATIONREF: 0x00000000: (   3, 00001478) 
S_ANNOTATIONREF: 0x00000000: (   3, 00001600) 
S_ANNOTATIONREF: 0x00000000: (   3, 000016F8) 
S_ANNOTATIONREF: 0x00000000: (   2, 000001C4) 
S_ANNOTATIONREF: 0x00000000: (   2, 000002AC) 
S_ANNOTATIONREF: 0x00000000: (   2, 000004B8) 
S_ANNOTATIONREF: 0x00000000: (   2, 0000084C) 
S_ANNOTATIONREF: 0x00000000: (   2, 00000934) 
S_ANNOTATIONREF: 0x00000000: (   2, 00000A2C) 
S_ANNOTATIONREF: 0x00000000: (   2, 00000B28) 
S_ANNOTATIONREF: 0x00000000: (   2, 00000C24) 
S_ANNOTATIONREF: 0x00000000: (   2, 00000CE0) 
S_ANNOTATIONREF: 0x00000000: (   1, 0000073C) 
S_ANNOTATIONREF: 0x00000000: (   1, 000007F4) 
S_ANNOTATIONREF: 0x00000000: (   1, 000008D8) 
S_ANNOTATIONREF: 0x00000000: (   1, 000009C0) 
S_ANNOTATIONREF: 0x00000000: (   1, 00000ACC) 
S_ANNOTATIONREF: 0x00000000: (   1, 00000BD0) 
S_ANNOTATIONREF: 0x00000000: (   1, 00000CCC) 
S_ANNOTATIONREF: 0x00000000: (   1, 00000DA4) 
S_ANNOTATIONREF: 0x00000000: (   1, 00000EA8) 
S_ANNOTATIONREF: 0x00000000: (   1, 00000FB0) 
S_ANNOTATIONREF: 0x00000000: (   1, 000010B0) 
S_ANNOTATIONREF: 0x00000000: (   1, 000011B0) 
S_ANNOTATIONREF: 0x00000000: (   1, 000012AC) 
S_ANNOTATIONREF: 0x00000000: (   1, 000013B8) 
S_ANNOTATIONREF: 0x00000000: (   1, 00001488) 
S_ANNOTATIONREF: 0x00000000: (   1, 00001AA4) 
S_ANNOTATIONREF: 0x00000000: (   1, 00001B5C) 
S_ANNOTATIONREF: 0x00000000: (   1, 00001C5C) 
S_UDT:       T_QUAD(0013), LONGLONG
S_GDATA32: [0001:00002490], Type:             0x107B, _guard_xfg_dispatch_icall_nop
S_PROCREF: 0x00000000: (  14, 00000124) _guard_xfg_dispatch_icall_nop
S_CONSTANT: Type:             0x101B, Value: 0, WdfChildListCreateTableIndex
S_UDT:             0x11FE, FS_INFORMATION_CLASS
S_UDT:             0x1309, PDRIVER_DISPATCH
S_UDT:             0x131B, FAST_IO_RELEASE_FOR_MOD_WRITE
S_CONSTANT: Type:             0x101B, Value: 425, WdfDeviceWdmAssignPowerFrameworkSettingsTableIndex
S_CONSTANT: Type:             0x101B, Value: 434, WdfDeviceAllocAndQueryPropertyExTableIndex
S_CONSTANT: Type:             0x106A, Value: 0, NonPagedPoolExecute
S_UDT:             0x1302, PDRIVER_STARTIO
S_CONSTANT: Type:             0x101B, Value: 401, WdfDeviceWdmDispatchIrpTableIndex
S_CONSTANT: Type:             0x101B, Value: 11, WdfChildListUpdateAllChildDescriptionsAsPresentTableIndex
S_UDT:             0x16CA, PFN_WDF_CLIENT_BIND_CLASS
S_CONSTANT: Type:             0x101B, Value: 7, WdfChildListRetrieveNextDeviceTableIndex
S_UDT:             0x1167, PFN_WDFCOLLECTIONADD
S_UDT:             0x127D, EVT_WDF_IO_QUEUE_IO_DEFAULT
S_CONSTANT: Type:             0x106C, Value: 3, RegNtSetInformationKey
S_GDATA32: [0003:000003E0], Type:             0x1019, WPP_MAIN_CB
S_CONSTANT: Type:             0x101B, Value: 164, WdfIoQueuePurgeSynchronouslyTableIndex
S_UDT:             0x1276, POWNER_ENTRY
S_UDT:             0x13B6, PWDF_COMPONENT_GLOBALS
S_CONSTANT: Type:             0x101B, Value: 6, WdfChildListBeginIterationTableIndex
S_CONSTANT: Type:             0x14F5, Value: 1, TP_CALLBACK_PRIORITY_NORMAL
S_CONSTANT: Type:             0x101B, Value: 400, WdfCxDeviceInitSetFileObjectConfigTableIndex
S_UDT:             0x1737, IMAGE_LOAD_CONFIG_DIRECTORY64
S_UDT:    T_64PQUAD(0613), PLONGLONG
S_CONSTANT: Type:             0x101B, Value: 275, WdfRequestSetInformationTableIndex
S_CONSTANT: Type:             0x101B, Value: 149, WdfInterruptGetInfoTableIndex
S_CONSTANT: Type:             0x1054, Value: 0, PoEffectivePowerModeBatterySaver
S_CONSTANT: Type:             0x101B, Value: 297, WdfIoResourceListUpdateDescriptorTableIndex
S_UDT:      T_UQUAD(0023), ULONGLONG
S_CONSTANT: Type:             0x101B, Value: 428, WdfInterruptReportActiveTableIndex
S_CONSTANT: Type:             0x101B, Value: 10, WdfChildListUpdateChildDescriptionAsMissingTableIndex
S_CONSTANT: Type:             0x101B, Value: 397, WdfCxDeviceInitAssignWdmIrpPreprocessCallbackTableIndex
S_UDT:             0x1040, WDF_POWER_POLICY_IDLE_TIMEOUT_TYPE
S_CONSTANT: Type:             0x101B, Value: 285, WdfRequestWdmGetIrpTableIndex
S_UDT:             0x1411, OWNER_ENTRY
S_CONSTANT: Type:             0x106C, Value: 8, RegNtQueryValueKey
S_CONSTANT: Type:             0x1629, Value: 2, WdfDriverInitNoDispatchOverride
S_CONSTANT: Type:             0x101B, Value: 302, WdfCmResourceListAppendDescriptorTableIndex
S_UDT:             0x10D2, PFN_WDF_DEVICE_SHUTDOWN_NOTIFICATION
S_PROCREF: 0x00000000: (   9, 000001D8) __memset_repmovs
S_UDT:      T_ULONG(0022), SECURITY_INFORMATION
S_CONSTANT: Type:             0x101B, Value: 231, WdfRegistryCloseTableIndex
S_UDT:             0x1302, PDRIVER_CANCEL
S_UDT:             0x13EB, WHEA_ERROR_RECORD_SECTION_DESCRIPTOR
S_UDT:             0x16C0, WDF_VERSION
S_CONSTANT: Type:             0x15E6, Value: 6, REFS_STREAM_SNAPSHOT_OPERATION_CLEAR_SHADOW_BTREE
S_UDT:             0x10D0, EVT_WDF_DEVICE_DISARM_WAKE_FROM_S0
S_UDT:             0x145C, PFN_WDFDEVICEGETIOTARGET
S_CONSTANT: Type:             0x106C, Value: 4, RegNtRenameKey
S_GDATA32: [0002:00000150], Type:             0x10FD, StartEvent
S_UDT:             0x119D, PWPP_TRACE_CONTROL_BLOCK
S_UDT:             0x13AC, PKTHREAD
S_CONSTANT: Type:             0x101B, Value: 12, WdfChildListRequestChildEjectTableIndex
S_CONSTANT: Type:             0x101B, Value: 288, WdfIoResourceRequirementsListAppendIoResListTableIndex
S_PROCREF: 0x00000000: (   1, 00002864) McTemplateK0szq_EtwWriteTransfer
S_PROCREF: 0x00000000: (   5, 00001758) BthPS3PSM_SidebandIoDeviceControl
S_UDT:             0x1020, WDF_SYNCHRONIZATION_SCOPE
S_PROCREF: 0x00000000: (   5, 00000098) BthPS3PSM_CreateControlDevice
S_CONSTANT: Type:             0x1068, Value: 1, MmCached
S_CONSTANT: Type:             0x101B, Value: 127, WdfFdoInitAllocAndQueryPropertyTableIndex
S_CONSTANT: Type:             0x1007, Value: 5, WPP_BIT_TRACE_FILTER
S_CONSTANT: Type:             0x15CA, Value: 3, PsProtectedTypeMax
S_CONSTANT: Type:             0x101B, Value: 150, WdfInterruptSetPolicyTableIndex
S_UDT:             0x13B4, PFAST_IO_RELEASE_FOR_MOD_WRITE
S_CONSTANT: Type:             0x1032, Value: 3, IdleUsbSelectiveSuspend
S_GDATA32: [0003:00000388], Type:             0x10F3, WdfDriverMiniportUnloadOverride
S_UDT:             0x135F, PFN_WDFDEVICEGETDRIVER
S_CONSTANT: Type:             0x101B, Value: 196, WdfMemoryCopyToBufferTableIndex
S_UDT:             0x12FD, PDRIVER_INITIALIZE
S_CONSTANT: Type:             0x15E8, Value: 43, JobObjectMemoryPartitionInformation
S_UDT:             0x1123, PFN_WDFOBJECTACQUIRELOCK
S_UDT:             0x10B6, CM_PARTIAL_RESOURCE_DESCRIPTOR
S_UDT:             0x1321, ETWENABLECALLBACK
S_CONSTANT: Type:             0x101B, Value: 246, WdfRegistryAssignULongTableIndex
S_CONSTANT: Type:             0x15E8, Value: 46, JobObjectEnergyTrackingState
S_CONSTANT: Type:             0x101B, Value: 64, WdfDeviceInitSetPowerPageableTableIndex
S_UDT:             0x111C, PMCGEN_TRACE_CONTEXT
S_CONSTANT: Type:             0x1072, Value: 1, L2CAP_Command_Reject
S_CONSTANT: Type:             0x101B, Value: 206, WdfObjectDereferenceActualTableIndex
S_UDT:             0x1283, EVT_WDF_IO_QUEUE_IO_DEVICE_CONTROL
S_UDT:             0x117D, EVT_WDF_TRACE_CALLBACK
S_GDATA32: [0003:00000110], Type:    T_64PVOID(0603), __KMDF_CLASS_BIND_END
S_UDT:      T_ULONG(0022), WDF_MAJOR_VERSION
S_UDT:             0x12A5, IO_STATUS_BLOCK
S_UDT:             0x10C5, PFN_WDFPDOINITALLOWFORWARDINGREQUESTTOPARENT
S_CONSTANT: Type:             0x101B, Value: 169, WdfIoTargetCloseForQueryRemoveTableIndex
S_GDATA32: [0003:00000010], Type:             0x1081, DriverControlGuid_Context
S_CONSTANT: Type:             0x1277, Value: 1, ClsContainerInitializing
S_CONSTANT: Type:             0x101B, Value: 186, WdfIoTargetSendIoctlSynchronouslyTableIndex
S_CONSTANT: Type:             0x101B, Value: 237, WdfRegistryQueryMultiStringTableIndex
S_UDT:             0x110D, PWDF_OBJECT_ATTRIBUTES
S_UDT:             0x1087, WORKER_THREAD_ROUTINE
S_GDATA32: [0003:00000140], Type:             0x11BC, pfnWppQueryTraceInformation
S_UDT:   T_64PSHORT(0611), PSHORT
S_UDT:             0x16B2, WDF_CLASS_VERSION
S_UDT:     T_USHORT(0021), WORD
S_CONSTANT: Type:             0x101B, Value: 195, WdfMemoryAssignBufferTableIndex
S_UDT:     T_USHORT(0021), USHORT
S_UDT:             0x15EA, EXCEPTION_DISPOSITION
S_UDT:             0x10E2, WDF_DEVICE_PROPERTY_DATA
S_UDT:             0x111A, PIO_STATUS_BLOCK
S_UDT:             0x1170, FAST_IO_UNLOCK_SINGLE
S_CONSTANT: Type:             0x101B, Value: 199, WdfMemoryCreateFromLookasideTableIndex
S_CONSTANT: Type:             0x101B, Value: 138, WdfFileObjectGetFlagsTableIndex
S_UDT:      T_SHORT(0011), CSHORT
S_UDT:             0x105E, WDF_IO_QUEUE_STATE
S_UDT:             0x13DB, PBTHPS3PSM_ENABLE_PSM_PATCHING
S_CONSTANT: Type:             0x101B, Value: 227, WdfPdoClearEjectionRelationsDevicesTableIndex
S_PROCREF: 0x00000000: (  19, 00000438) FxDriverEntryWorker
S_UDT:      T_UQUAD(0023), ERESOURCE_THREAD
S_CONSTANT: Type:             0x15E4, Value: 2, SE_WS_APPX_SIGNATURE_ORIGIN_APPSTORE
S_CONSTANT: Type:             0x101B, Value: 161, WdfIoQueueRetrieveFoundRequestTableIndex
S_CONSTANT: Type:             0x107B, Value: 0, ClfsNullRecord
S_UDT:      T_UINT4(0075), CLFS_CONTAINER_STATE
S_UDT:             0x1142, FAST_IO_DEVICE_CONTROL
S_UDT:             0x1721, WDF_LOADER_INTERFACE_DRIVER_ENTRY_FAILURE
S_UDT:             0x12BF, WDF_IO_QUEUE_CONFIG
S_CONSTANT: Type:             0x101B, Value: 83, WdfDeviceSetPnpCapabilitiesTableIndex
S_UDT:             0x163B, WDF_BIND_INFO
S_UDT:             0x13B6, PPVOID
S_CONSTANT: Type:             0x101B, Value: 433, WdfDeviceQueryPropertyExTableIndex
S_UDT:             0x10BE, EVT_WDF_DEVICE_ARM_WAKE_FROM_S0
S_CONSTANT: Type:             0x1277, Value: 4, ClsContainerActive
S_CONSTANT: Type:             0x15E8, Value: 29, JobObjectSharedCommit
S_CONSTANT: Type:             0x15E8, Value: 18, JobObjectReserved1Information
S_CONSTANT: Type:             0x101B, Value: 223, WdfPdoRetrieveAddressDescriptionTableIndex
S_CONSTANT: Type:             0x1062, Value: 2, InterruptActiveLow
S_UDT:             0x10D1, USBD_ISO_PACKET_DESCRIPTOR
S_CONSTANT: Type:             0x101B, Value: 213, WdfPdoInitAssignInstanceIDTableIndex
S_UDT:             0x10C1, PWDFDEVICE_INIT
S_CONSTANT: Type:             0x101B, Value: 48, WdfDeviceOpenRegistryKeyTableIndex
S_CONSTANT: Type:             0x101B, Value: 154, WdfIoQueueStartTableIndex
S_UDT:             0x1377, WDF_WORKITEM_CONFIG
S_UDT:             0x10BE, EVT_WDF_DEVICE_ARM_WAKE_FROM_SX
S_UDT:       T_LONG(0012), LONG
S_UDT:             0x15FC, PEXCEPTION_RECORD
S_CONSTANT: Type:             0x103C, Value: 6, DeviceWakeDepthMaximum
S_CONSTANT: Type:             0x15C2, Value: 0, PsCreateInitialState
S_PROCREF: 0x00000000: (   1, 00001FEC) BthPS3PSM_IsBthUsbDevice
S_PROCREF: 0x00000000: (   2, 000003A4) BthPS3PSM_EvtDriverContextCleanup
S_CONSTANT: Type:             0x101B, Value: 20, WdfCollectionGetLastItemTableIndex
S_UDT:             0x10BE, EVT_WDF_DEVICE_SELF_MANAGED_IO_RESTART
S_CONSTANT: Type:             0x101B, Value: 390, WdfIoQueueAssignForwardProgressPolicyTableIndex
S_CONSTANT: Type:             0x107B, Value: 1, CLFS_SCAN_INIT
S_PROCREF: 0x00000000: (  20, 000000F0) FxStubInitTypes
S_UDT:             0x1042, SYSTEM_POWER_STATE
S_CONSTANT: Type:             0x101B, Value: 179, WdfIoTargetWdmGetTargetPhysicalDeviceTableIndex
S_CONSTANT: Type:             0x1028, Value: 1, WdfRetrievePresentChildren
S_PROCREF: 0x00000000: (  15, 0000009C) __cpu_features_init
S_UDT:             0x109A, PFN_GET_UNIQUE_CONTEXT_TYPE
S_CONSTANT: Type:             0x101B, Value: 107, WdfDmaTransactionSetMaximumLengthTableIndex
S_CONSTANT: Type:             0x101B, Value: 171, WdfIoTargetStartTableIndex
S_CONSTANT: Type:             0x15D2, Value: 7, PsMaxWakeReasons
S_UDT:             0x13BD, PFN_WDFREQUESTRETRIEVEINPUTBUFFER
S_CONSTANT: Type:             0x101B, Value: 90, WdfDeviceGetFileObjectTableIndex
S_PROCREF: 0x00000000: (   6, 0000009C) __GSHandlerCheck
S_CONSTANT: Type:             0x15E8, Value: 47, JobObjectThreadImpersonationInformation
S_UDT:   T_64PUQUAD(0623), PULONG64
S_CONSTANT: Type:             0x101B, Value: 95, WdfDmaEnablerGetMaximumLengthTableIndex
S_UDT:             0x1437, PFAST_IO_MDL_WRITE_COMPLETE_COMPRESSED
S_CONSTANT: Type:             0x101B, Value: 216, WdfPdoInitAddDeviceTextTableIndex
S_UDT:             0x1386, IRP
S_UDT:      T_UCHAR(0020), KIRQL
S_CONSTANT: Type:             0x101B, Value: 23, WdfCommonBufferGetAlignedLogicalAddressTableIndex
S_UDT:             0x1169, PFILE_STANDARD_INFORMATION
S_GDATA32: [0002:000000A0], Type:             0x15C0, __guard_xfg_check_icall_fptr
S_GDATA32: [0002:000000A0], Type:    T_64PVOID(0603), __guard_xfg_check_icall_fptr
S_UDT:      T_RCHAR(0070), CHAR
S_UDT:    T_64PVOID(0603), WDFOBJECT
S_PROCREF: 0x00000000: (   2, 0000146C) McTemplateK0p_EtwWriteTransfer
S_CONSTANT: Type:             0x106A, Value: 34, NonPagedPoolMustSucceedSession
S_CONSTANT: Type:             0x101B, Value: 409, WdfDmaTransactionSetTransferCompleteCallbackTableIndex
S_CONSTANT: Type:             0x1036, Value: 0, IdleTimeoutDefaultConstant
S_CONSTANT: Type:             0x101B, Value: 166, WdfIoQueueReadyNotifyTableIndex
S_CONSTANT: Type:             0x1060, Value: 3, WdfIoForwardProgressReservedPolicyPagingIO
S_PROCREF: 0x00000000: (   2, 0000137C) McGenEventUnregister_EtwUnregister
S_GDATA32: [0002:00000200], Type:             0x1308, WPP_9fd9018fc07b3383a12a2352710d4d14_Traceguids
S_UDT:             0x10E9, DRIVER_ADD_DEVICE
S_UDT:             0x13F2, PFN_WDFDEVICEINITSETEXCLUSIVE
S_UDT:             0x146E, PFAST_IO_QUERY_NETWORK_OPEN_INFO
S_CONSTANT: Type:             0x101B, Value: 420, WdfIoTargetPurgeTableIndex
S_CONSTANT: Type:             0x102C, Value: (LF_USHORT) 32768, WdfDevStateNP
S_CONSTANT: Type:             0x101B, Value: 104, WdfDmaTransactionDmaCompletedWithLengthTableIndex
S_GDATA32: [0003:00000080], Type:             0x15C9, __isa_info
S_UDT:             0x127E, PKPCR
S_CONSTANT: Type:             0x101B, Value: 284, WdfRequestStopAcknowledgeTableIndex
S_UDT:             0x117F, PFN_WDF_TRACE_CALLBACK
S_UDT:             0x1286, PFN_WDF_IO_QUEUE_IO_DEVICE_CONTROL
S_CONSTANT: Type:             0x102A, Value: 7, TraceHandleByNameClass
S_UDT:             0x1466, PFAST_IO_QUERY_OPEN
S_CONSTANT: Type:             0x101B, Value: 25, WdfControlDeviceInitAllocateTableIndex
S_CONSTANT: Type:             0x101B, Value: 175, WdfIoTargetQueryTargetPropertyTableIndex
S_CONSTANT: Type:             0x101B, Value: 274, WdfRequestRetrieveUnsafeUserOutputBufferTableIndex
S_GDATA32: [0003:00000158], Type:             0x11E1, pfnEtwRegisterClassicProvider
S_UDT:             0x1146, PFN_WDFSTRINGCREATE
S_UDT:             0x11A2, FAST_IO_PREPARE_MDL_WRITE
S_CONSTANT: Type:             0x101B, Value: 224, WdfPdoUpdateAddressDescriptionTableIndex
S_CONSTANT: Type:             0x101B, Value: 432, WdfDeviceInitSetIoTypeExTableIndex
S_CONSTANT: Type:             0x101B, Value: 1, WdfChildListGetDeviceTableIndex
S_CONSTANT: Type:             0x101B, Value: 44, WdfDeviceGetDevicePowerStateTableIndex
S_UDT:             0x1060, WDF_IO_FORWARD_PROGRESS_RESERVED_POLICY
S_UDT:             0x10CE, PFN_WDF_DEVICE_ARM_WAKE_FROM_SX
S_CONSTANT: Type:             0x15E8, Value: 19, JobObjectReserved2Information
S_CONSTANT: Type:             0x101B, Value: 155, WdfIoQueueStopTableIndex
S_UDT:             0x10CE, PFN_WDF_DEVICE_SELF_MANAGED_IO_RESTART
S_CONSTANT: Type:             0x14D9, Value: 4, JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG
S_CONSTANT: Type:             0x101B, Value: 50, WdfDeviceSetCharacteristicsTableIndex
S_PROCREF: 0x00000000: (   5, 00002EA8) WPP_SF_Zd
S_UDT:             0x112E, PUSB_CONFIGURATION_DESCRIPTOR
S_UDT:             0x13EF, PFAST_IO_LOCK
S_UDT:             0x1358, PFN_WDFPDOCLEAREJECTIONRELATIONSDEVICES
S_CONSTANT: Type:             0x101B, Value: 245, WdfRegistryAssignStringTableIndex
S_CONSTANT: Type:             0x101B, Value: 276, WdfRequestGetInformationTableIndex
S_UDT:             0x10CE, PFN_WDF_DEVICE_ARM_WAKE_FROM_S0
S_CONSTANT: Type:             0x1060, Value: 2, WdfIoForwardProgressReservedPolicyUseExamine
S_UDT:     T_USHORT(0021), UINT16
S_UDT:       T_LONG(0012), USBD_STATUS
S_UDT:      T_UQUAD(0023), KSPIN_LOCK
S_UDT:             0x170F, WDF_INTERFACE_HEADER
S_UDT:             0x108A, PUNICODE_STRING
S_UDT:             0x13E0, PWHEA_ERROR_RECORD
S_UDT:      T_ULONG(0022), TP_VERSION
S_CONSTANT: Type:             0x101B, Value: 439, WdfDeviceResumeIdleActualTableIndex
S_UDT:             0x1358, PFN_WDFFDOLOCKSTATICCHILDLISTFORITERATION
S_CONSTANT: Type:             0x101B, Value: 39, WdfDeviceGetDriverTableIndex
S_UDT:             0x1122, FAST_IO_READ_COMPRESSED
S_CONSTANT: Type:             0x15DA, Value: 4, KCONTINUE_LAST
S_UDT:             0x13C7, PFN_WDFREGISTRYASSIGNULONG
S_UDT:             0x12F7, PFAST_IO_DISPATCH
S_PROCREF: 0x00000000: (   2, 00000094) BthPS3PSM_EvtDeviceAdd
S_CONSTANT: Type:             0x15BC, Value: 2, FeatureConfigurationPrioritySafeguard
S_UDT:             0x161F, IO_PRIORITY_HINT
S_UDT:             0x11E5, DIRECTORY_NOTIFY_INFORMATION_CLASS
S_PROCREF: 0x00000000: (   1, 00002B30) WPP_SF_
S_CONSTANT: Type:             0x101B, Value: 29, WdfDeviceSetDeviceStateTableIndex
S_CONSTANT: Type:             0x101B, Value: 212, WdfPdoInitAssignDeviceIDTableIndex
S_UDT:             0x12CD, PFN_WDFREQUESTREQUEUE
S_UDT:   T_64PRCHAR(0670), PCH
S_UDT:             0x102A, TRACE_INFORMATION_CLASS
S_CONSTANT: Type:             0x101B, Value: 30, WdfWdmDeviceGetWdfDeviceHandleTableIndex
S_CONSTANT: Type:             0x101B, Value: 120, WdfWdmDriverGetWdfDriverHandleTableIndex
S_UDT:      T_UQUAD(0023), SIZE_T
S_UDT:      T_UQUAD(0023), size_t
S_UDT:             0x1415, PFAST_IO_UNLOCK_SINGLE
S_CONSTANT: Type:             0x15E0, Value: 4, MemDedicatedAttributeMax
S_PROCREF: 0x00000000: (   5, 00000D60) BthPS3PSM_DeleteControlDevice
S_CONSTANT: Type:             0x101B, Value: 266, WdfRequestGetParametersTableIndex
S_LDATA32: [0003:00000180], Type:             0x1733, WdfDriverStubRegistryPathBuffer
S_UDT:             0x10D0, EVT_WDF_DEVICE_SHUTDOWN_NOTIFICATION
S_UDT:             0x1392, PBTHPS3PSM_GET_PSM_PATCHING
S_CONSTANT: Type:             0x101B, Value: 176, WdfIoTargetAllocAndQueryTargetPropertyTableIndex
S_UDT:             0x10C5, PFN_WDFDEVICEINITSETPOWERNOTPAGEABLE
S_UDT:             0x1128, FAST_IO_RELEASE_FOR_CCFLUSH
S_GDATA32: [0003:00000150], Type:             0x1084, pfnEtwUnregister
S_CONSTANT: Type:             0x15E8, Value: 31, JobObjectIoRateControlInformation
S_UDT:             0x1130, PIRP
S_CONSTANT: Type:             0x101B, Value: 308, WdfStringCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 241, WdfRegistryAssignValueTableIndex
S_CONSTANT: Type:             0x101B, Value: 286, WdfIoResourceRequirementsListSetSlotNumberTableIndex
S_CONSTANT: Type:             0x14F5, Value: 3, TP_CALLBACK_PRIORITY_INVALID
S_CONSTANT: Type:             0x101B, Value: 385, WdfDmaEnablerWdmGetDmaAdapterTableIndex
S_CONSTANT: Type:             0x101B, Value: 128, WdfFdoInitSetEventCallbacksTableIndex
S_PROCREF: 0x00000000: (  19, 000002B0) FxStubDriverUnloadCommon
S_CONSTANT: Type:             0x101B, Value: 160, WdfIoQueueFindRequestTableIndex
S_CONSTANT: Type:             0x101B, Value: 398, WdfCxDeviceInitSetIoInCallerContextCallbackTableIndex
S_CONSTANT: Type:             0x101B, Value: 318, WdfTimerCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 281, WdfRequestForwardToIoQueueTableIndex
S_CONSTANT: Type:             0x101B, Value: 27, WdfControlFinishInitializingTableIndex
S_CONSTANT: Type:             0x101B, Value: 152, WdfIoQueueCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 438, WdfDeviceStopIdleActualTableIndex
S_UDT:             0x129F, PFN_WDF_IO_QUEUE_IO_DEFAULT
S_CONSTANT: Type:             0x1003, Value: 4, WppTraceServer08
S_UDT:   T_64PUQUAD(0623), PUINT_PTR
S_UDT:             0x113B, PDRIVER_LIST_CONTROL
S_CONSTANT: Type:             0x1005, Value: 0, WPP_CTL_BthPS3PSMTraceGuid
S_UDT:             0x13BC, WDF_REQUEST_SEND_OPTIONS
S_UDT:             0x10C5, PFN_WDFDEVICEINITSETPOWERINRUSH
S_CONSTANT: Type:             0x101B, Value: 244, WdfRegistryAssignUnicodeStringTableIndex
S_CONSTANT: Type:             0x101B, Value: 292, WdfIoResourceRequirementsListRemoveTableIndex
S_UDT:             0x1181, PFN_WPPGETVERSION
S_UDT:      T_UCHAR(0020), SECURITY_CONTEXT_TRACKING_MODE
S_UDT:             0x1137, DRIVER_LIST_CONTROL
S_CONSTANT: Type:             0x101B, Value: 230, WdfRegistryCreateKeyTableIndex
S_CONSTANT: Type:             0x1050, Value: 8, WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET
S_CONSTANT: Type:             0x101B, Value: 278, WdfRequestProbeAndLockUserBufferForReadTableIndex
S_UDT:      T_ULONG(0022), DEVPROPID
S_CONSTANT: Type:             0x15E8, Value: 20, JobObjectReserved3Information
S_UDT:             0x1052, WHEA_ERROR_SOURCE_TYPE
S_CONSTANT: Type:             0x15E8, Value: 24, JobObjectCycleTimeNotification
S_CONSTANT: Type:             0x14D9, Value: 1, JOB_OBJECT_NET_RATE_CONTROL_ENABLE
S_UDT:             0x1453, PWDF_USB_REQUEST_COMPLETION_PARAMS
S_UDT:             0x134E, PFN_WDFPDOINITASSIGNINSTANCEID
S_UDT:             0x10B3, PFN_WDFREGISTRYASSIGNSTRING
S_UDT:      T_SHORT(0011), SHORT
S_UDT:             0x13CF, PWDF_WORKITEM_CONFIG
S_UDT:             0x134E, PFN_WDFDEVICEINITASSIGNSDDLSTRING
S_UDT:             0x1026, WDF_MEMORY_DESCRIPTOR_TYPE
S_CONSTANT: Type:             0x101B, Value: 146, WdfInterruptEnableTableIndex
S_CONSTANT: Type:             0x101B, Value: 73, WdfDeviceInitAssignWdmIrpPreprocessCallbackTableIndex
S_CONSTANT: Type:             0x101B, Value: 97, WdfDmaEnablerSetMaximumScatterGatherElementsTableIndex
S_UDT:             0x15F4, PRUNTIME_FUNCTION
S_PROCREF: 0x00000000: (  21, 0000033C) FxStubIsClassBound
S_UDT:             0x1347, PKDPC
S_CONSTANT: Type:             0x1026, Value: 1, WdfMemoryDescriptorTypeBuffer
S_CONSTANT: Type:             0x101B, Value: 436, WdfFdoInitQueryPropertyExTableIndex
S_CONSTANT: Type:             0x101B, Value: 26, WdfControlDeviceInitSetShutdownNotificationTableIndex
S_UDT:             0x1484, PFN_WDFREQUESTWDMGETIRP
S_GDATA32: [0002:00000090], Type:             0x15C0, __guard_check_icall_fptr
S_GDATA32: [0002:00000090], Type:    T_64PVOID(0603), __guard_check_icall_fptr
S_UDT:             0x10D2, PFN_WDF_DEVICE_DISARM_WAKE_FROM_S0
S_LDATA32: [0002:00000C88], Type:      T_UCHAR(0020), $xdatasym
S_LDATA32: [0002:00000C58], Type:      T_UCHAR(0020), $xdatasym
S_LDATA32: [0002:00000C98], Type:      T_UCHAR(0020), $xdatasym
S_LDATA32: [0002:00000D10], Type:      T_UCHAR(0020), $xdatasym
S_LDATA32: [0002:00000C60], Type:      T_UCHAR(0020), $xdatasym
S_UDT:             0x105A, WDF_IO_QUEUE_DISPATCH_TYPE
S_CONSTANT: Type:             0x101B, Value: 36, WdfDeviceAddRemovalRelationsPhysicalDeviceTableIndex
S_UDT:             0x11AB, PIO_SECURITY_CONTEXT
S_UDT:             0x1032, WDF_POWER_POLICY_S0_IDLE_CAPABILITIES
S_CONSTANT: Type:             0x101B, Value: 65, WdfDeviceInitSetPowerInrushTableIndex
S_UDT:             0x11F5, PFN_WDFWAITLOCKRELEASE
S_UDT:             0x1393, FAST_IO_QUERY_NETWORK_OPEN_INFO
S_UDT:             0x1358, PFN_WDFDEVICECLEARREMOVALRELATIONSDEVICES
S_CONSTANT: Type:             0x15E8, Value: 19, JobObjectExtendedAccountingInformation
S_UDT:             0x1119, PFN_WDFFDOINITALLOCANDQUERYPROPERTYEX
S_UDT:             0x1347, PRKDPC
S_UDT:             0x10D2, PFN_WDF_DEVICE_SELF_MANAGED_IO_CLEANUP
S_CONSTANT: Type:             0x101B, Value: 410, WdfDmaTransactionSetImmediateExecutionTableIndex
S_CONSTANT: Type:             0x101B, Value: 184, WdfIoTargetSendWriteSynchronouslyTableIndex
S_GDATA32: [0002:00000160], Type:             0x10FD, UnloadEvent
S_UDT:             0x10EA, PINTERFACE_REFERENCE
S_CONSTANT: Type:             0x15E8, Value: 21, JobObjectBackgroundInformation
S_UDT:             0x1615, PDISPATCHER_CONTEXT
S_UDT:             0x1112, FAST_IO_MDL_READ_COMPLETE
S_GDATA32: [0003:00000170], Type:             0x10BA, ControlDevice
S_CONSTANT: Type:             0x101B, Value: 117, WdfDriverGetRegistryPathTableIndex
S_CONSTANT: Type:             0x101B, Value: 217, WdfPdoInitSetDefaultLocaleTableIndex
S_UDT:             0x10CE, PFN_WDF_DEVICE_SELF_MANAGED_IO_INIT
S_CONSTANT: Type:             0x101B, Value: 306, WdfCmResourceListRemoveTableIndex
S_CONSTANT: Type:             0x106A, Value: 33, PagedPoolSession
S_CONSTANT: Type:             0x101B, Value: 31, WdfDeviceWdmGetDeviceObjectTableIndex
S_CONSTANT: Type:             0x101B, Value: 118, WdfDriverWdmGetDriverObjectTableIndex
S_CONSTANT: Type:             0x101B, Value: 141, WdfInterruptCreateTableIndex
S_UDT:      T_UQUAD(0023), UINT_PTR
S_CONSTANT: Type:             0x101B, Value: 305, WdfCmResourceListGetDescriptorTableIndex
S_CONSTANT: Type:             0x101B, Value: 272, WdfRequestRetrieveOutputWdmMdlTableIndex
S_CONSTANT: Type:             0x101B, Value: 419, WdfIoQueueStopAndPurgeSynchronouslyTableIndex
S_UDT:             0x115D, PFN_WDFDEVICECREATE
S_UDT:    T_64PVOID(0603), USBD_INTERFACE_HANDLE
S_GDATA32: [0002:000002B8], Type:             0x10F8, GUID_WDF_LOADER_INTERFACE_DRIVER_ENTRY_FAILURE
S_UDT:             0x13FD, FAST_IO_MDL_WRITE_COMPLETE
S_CONSTANT: Type:             0x1277, Value: 8, ClfsContainerActivePendingDelete
S_UDT:             0x129F, PFN_WDF_IO_QUEUE_IO_RESUME
S_CONSTANT: Type:             0x101B, Value: 200, WdfDeviceMiniportCreateTableIndex
S_UDT:             0x113C, FAST_IO_ACQUIRE_FILE
S_PROCREF: 0x00000000: (   1, 000023D8) McGenEventWrite_EtwWriteTransfer
S_UDT:      T_RCHAR(0070), INT8
S_UDT:             0x1287, PFN_WDF_DRIVER_DEVICE_ADD
S_CONSTANT: Type:             0x101B, Value: 153, WdfIoQueueGetStateTableIndex
S_UDT:             0x132E, SYSTEM_POWER_STATE_CONTEXT
S_CONSTANT: Type:             0x1009, Value: 1, WPP_FLAG_LEN
S_PROCREF: 0x00000000: (   3, 00000EAC) UrbSelectConfigurationCompleted
S_UDT:             0x103E, WDF_FILEOBJECT_CLASS
S_CONSTANT: Type:             0x101B, Value: 205, WdfObjectReferenceActualTableIndex
S_UDT:             0x10EA, WHEA_ERROR_SOURCE_UNINITIALIZE_DEVICE_DRIVER
S_UDT:             0x1369, WDFWORKITEM
S_CONSTANT: Type:             0x101B, Value: 129, WdfFdoInitSetFilterTableIndex
S_UDT:             0x1711, PWDF_INTERFACE_HEADER
S_UDT:      T_ULONG(0022), DWORD
S_UDT:      T_UQUAD(0023), KAFFINITY
S_CONSTANT: Type:             0x101B, Value: 427, WdfCxVerifierKeBugCheckTableIndex
S_CONSTANT: Type:             0x101B, Value: 296, WdfIoResourceListInsertDescriptorTableIndex
S_CONSTANT: Type:             0x101B, Value: 252, WdfRequestWdmFormatUsingStackLocationTableIndex
S_UDT:             0x1306, PFNDRIVERUNLOAD
S_CONSTANT: Type:             0x101B, Value: 112, WdfDpcEnqueueTableIndex
S_UDT:             0x125C, PCM_RESOURCE_LIST
S_CONSTANT: Type:             0x15BC, Value: 15, FeatureConfigurationPriorityImageOverride
S_CONSTANT: Type:             0x15C6, Value: 9, PsProtectedSignerMax
S_GDATA32: [0003:00000000], Type:             0x1294, WPP_GLOBAL_Control
S_CONSTANT: Type:             0x101B, Value: 375, WdfWmiInstanceDeregisterTableIndex
S_UDT:             0x12EB, LARGE_INTEGER
S_CONSTANT: Type:             0x15DE, Value: 2, SysPlMemTypeMax
S_UDT:             0x12A9, PFN_WDF_IO_QUEUE_IO_WRITE
S_CONSTANT: Type:             0x101B, Value: 113, WdfDpcCancelTableIndex
S_CONSTANT: Type:             0x101B, Value: 257, WdfRequestIsCanceledTableIndex
S_UDT:             0x1371, PFN_WDF_WORKITEM
S_CONSTANT: Type:             0x101B, Value: 173, WdfIoTargetGetStateTableIndex
S_PROCREF: 0x00000000: (   3, 00001848) WPP_SF_D
S_PROCREF: 0x00000000: (   1, 00002C40) WPP_SF_d
S_UDT:             0x1135, FAST_IO_LOCK
S_CONSTANT: Type:             0x104A, Value: 0, WdfIrqPriorityUndefined
S_CONSTANT: Type:             0x1062, Value: 3, InterruptActiveBoth
S_UDT:             0x12D8, PIO_COMPLETION_CONTEXT
S_CONSTANT: Type:             0x101B, Value: 110, WdfDmaTransactionGetDeviceTableIndex
S_UDT:             0x1087, EVT_WDF_OBJECT_CONTEXT_CLEANUP
S_CONSTANT: Type:             0x101B, Value: 57, WdfDeviceInitSetPowerPolicyOwnershipTableIndex
S_PROCREF: 0x00000000: (   5, 00000F80) BthPS3PSM_EvtSaveConfigToRegistry
S_UDT:             0x10BB, SECURITY_IMPERSONATION_LEVEL
S_CONSTANT: Type:             0x101B, Value: 130, WdfFdoInitSetDefaultChildListConfigTableIndex
S_UDT:             0x12DC, PFILE_BASIC_INFORMATION
S_CONSTANT: Type:             0x101B, Value: 312, WdfWaitLockCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 387, WdfDeviceRemoveDependentUsageDeviceObjectTableIndex
S_UDT:             0x10E1, PDRIVER_OBJECT
S_CONSTANT: Type:             0x1046, Value: 3, PowerUserMaximum
S_UDT:             0x12F3, DRIVER_CONTROL
S_CONSTANT: Type:             0x101B, Value: 215, WdfPdoInitAddCompatibleIDTableIndex
S_UDT:             0x133B, KDEVICE_QUEUE_ENTRY
S_CONSTANT: Type:             0x101B, Value: 393, WdfRequestMarkCancelableExTableIndex
S_UDT:             0x12AE, EVT_WDF_IO_QUEUE_IO_STOP
S_UDT:             0x13FD, FAST_IO_MDL_WRITE_COMPLETE_COMPRESSED
S_UDT:             0x146C, KDPC
S_UDT:             0x1449, WAIT_CONTEXT_BLOCK
S_CONSTANT: Type:             0x162D, Value: 77, DPFLTR_IHVDRIVER_ID
S_CONSTANT: Type:             0x101B, Value: 381, WdfWorkItemGetParentObjectTableIndex
S_CONSTANT: Type:             0x101B, Value: 135, WdfFdoRetrieveNextStaticChildTableIndex
S_CONSTANT: Type:             0x101B, Value: 16, WdfCollectionRemoveTableIndex
S_PROCREF: 0x00000000: (  22, 00000114) _guard_dispatch_icall
S_UDT:             0x10D2, PFN_WDF_DEVICE_SELF_MANAGED_IO_FLUSH
S_UDT:             0x163D, PFNLIBRARYCOMMISSION
S_CONSTANT: Type:             0x101B, Value: 250, WdfRequestChangeTargetTableIndex
S_CONSTANT: Type:             0x1277, Value: 16, ClsContainerPendingArchive
S_UDT:   T_64PUQUAD(0623), PULONG_PTR
S_UDT:             0x1091, PCSTR
S_UDT:             0x1022, WDFCOLLECTION
S_UDT:             0x128C, PURB
S_UDT:             0x108E, FN_WPPGETVERSION
S_UDT:             0x10D0, EVT_WDF_DEVICE_WAKE_FROM_S0_TRIGGERED
S_PROCREF: 0x00000000: (  16, 00000124) __security_check_cookie
S_UDT:             0x11A0, WPP_TRACE_CONTROL_BLOCK
S_UDT:             0x10B3, PFN_WDFREGISTRYQUERYSTRING
S_CONSTANT: Type:             0x106C, Value: 5, RegNtEnumerateKey
S_CONSTANT: Type:             0x101B, Value: 75, WdfDeviceCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 316, WdfSpinLockAcquireTableIndex
S_UDT:             0x16B6, PFN_WDF_VERSION_UNBIND_CLASS
S_CONSTANT: Type:             0x101B, Value: 222, WdfPdoRetrieveIdentificationDescriptionTableIndex
S_CONSTANT: Type:             0x101B, Value: 54, WdfDeviceInitFreeTableIndex
S_GDATA32: [0002:00000170], Type:             0x10FD, FailedWithNTStatus
S_UDT:             0x10D0, EVT_WDF_DEVICE_REPORTED_MISSING
S_UDT:   T_64PUCHAR(0620), PBYTE
S_CONSTANT: Type:             0x101B, Value: 163, WdfIoQueueDrainTableIndex
S_CONSTANT: Type:             0x101B, Value: 9, WdfChildListAddOrUpdateChildDescriptionAsPresentTableIndex
S_GDATA32: [0003:00000420], Type:             0x101E, Nefarius_Bluetooth_PS_Filter_ServiceEnableBits
S_UDT:             0x1737, IMAGE_LOAD_CONFIG_DIRECTORY
S_UDT:             0x1087, EXT_DELETE_CALLBACK
S_CONSTANT: Type:             0x101B, Value: 145, WdfInterruptReleaseLockTableIndex
S_UDT:             0x131D, PEVENT_FILTER_DESCRIPTOR
S_UDT:             0x148A, PIO_DRIVER_CREATE_CONTEXT
S_CONSTANT: Type:             0x1044, Value: 5, PowerDeviceMaximum
S_UDT:             0x12C9, PFAST_IO_PREPARE_MDL_WRITE
S_CONSTANT: Type:             0x101B, Value: 89, WdfDeviceResumeIdleNoTrackTableIndex
S_CONSTANT: Type:             0x101B, Value: 443, WdfDeviceOpenDevicemapKeyTableIndex
S_UDT:             0x131E, PLIST_ENTRY
S_UDT:             0x10FD, EVENT_DESCRIPTOR
S_CONSTANT: Type:             0x101B, Value: 253, WdfRequestSendTableIndex
S_PROCREF: 0x00000000: (   4, 00000094) BthPS3PSMEvtIoInternalDeviceControl
S_CONSTANT: Type:             0x101B, Value: 56, WdfDeviceInitSetPowerPolicyEventCallbacksTableIndex
S_UDT:             0x165B, PWDF_OBJECT_CONTEXT_TYPE_INFO
S_UDT:             0x1185, PEVENT_DESCRIPTOR
S_CONSTANT: Type:             0x101B, Value: 382, WdfWorkItemFlushTableIndex
S_CONSTANT: Type:             0x106C, Value: 0, RegNtDeleteKey
S_CONSTANT: Type:             0x161F, Value: 2, IoPriorityNormal
S_UDT:      T_UQUAD(0023), ULONG64
S_UDT:      T_UQUAD(0023), DWORD_PTR
S_UDT:    T_64PQUAD(0613), PLONG64
S_UDT:             0x164F, MARKER_TYPE
S_UDT:             0x1381, PWHEA_ERROR_RECORD_HEADER
S_CONSTANT: Type:             0x101B, Value: 143, WdfInterruptSynchronizeTableIndex
S_UDT:             0x142B, PFAST_IO_UNLOCK_ALL
S_CONSTANT: Type:             0x101B, Value: 106, WdfDmaTransactionGetBytesTransferredTableIndex
S_UDT:             0x1129, PFAST_IO_ACQUIRE_FOR_CCFLUSH
S_UDT:    T_64PVOID(0603), OPLOCK
S_CONSTANT: Type:             0x101B, Value: 372, WdfWmiProviderGetTracingHandleTableIndex
S_CONSTANT: Type:             0x100D, Value: 1, WPP_MAX_FLAG_LEN_CHECK
S_UDT:             0x10CE, PFN_WDF_DEVICE_QUERY_REMOVE
S_CONSTANT: Type:             0x101B, Value: 46, WdfDeviceAssignS0IdleSettingsTableIndex
S_CONSTANT: Type:             0x15E4, Value: 0, SE_WS_APPX_SIGNATURE_ORIGIN_NOT_VALIDATED
S_CONSTANT: Type:             0x107B, Value: 3, ClfsClientRecord
S_CONSTANT: Type:             0x101B, Value: 219, WdfPdoMarkMissingTableIndex
S_GDATA32: [0002:00000140], Type:             0x10F8, DriverControlGuid
S_GDATA32: [0003:00000390], Type:             0x162F, typeWDF_IFR_HEADER
S_UDT:             0x1203, PFN_WDFCOLLECTIONGETCOUNT
S_CONSTANT: Type:             0x14E4, Value: 8, JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP
S_UDT:             0x10E8, PFN_WDFOBJECTGETTYPEDCONTEXTWORKER
S_CONSTANT: Type:             0x101B, Value: 220, WdfPdoRequestEjectTableIndex
S_CONSTANT: Type:             0x15E8, Value: 23, JobObjectTimerVirtualizationInformation
S_UDT:             0x10D2, PFN_WDF_DEVICE_DISABLE_WAKE_AT_BUS
S_CONSTANT: Type:             0x101B, Value: 80, WdfDeviceCreateSymbolicLinkTableIndex
S_UDT:             0x1210, PVPB
S_CONSTANT: Type:             0x101B, Value: 314, WdfWaitLockReleaseTableIndex
S_UDT:             0x10D2, PFN_WDF_DEVICE_WAKE_FROM_S0_TRIGGERED
S_PROCREF: 0x00000000: (   2, 00001648) McTemplateK0pq_EtwWriteTransfer
S_UDT:             0x10ED, PIO_RESOURCE_REQUIREMENTS_LIST
S_CONSTANT: Type:             0x101B, Value: 188, WdfIoTargetSendInternalIoctlSynchronouslyTableIndex
S_UDT:       T_INT4(0074), INT
S_PROCREF: 0x00000000: (   3, 00000094) McTemplateK0_EtwWriteTransfer
S_CONSTANT: Type:             0x101B, Value: 40, WdfDeviceRetrieveDeviceNameTableIndex
S_UDT:             0x10D2, PFN_WDF_DEVICE_REPORTED_MISSING
S_UDT:      T_ULONG(0022), LCID
S_CONSTANT: Type:             0x15C4, Value: 3, PsMaxStdHandleStates
S_CONSTANT: Type:             0x101B, Value: 242, WdfRegistryAssignMemoryTableIndex
S_CONSTANT: Type:             0x101B, Value: 53, WdfDeviceSetAlignmentRequirementTableIndex
S_UDT:    T_64PVOID(0603), PSID
S_CONSTANT: Type:             0x101B, Value: 101, WdfDmaTransactionExecuteTableIndex
S_UDT:             0x1199, WDFDRIVER
S_CONSTANT: Type:             0x101B, Value: 133, WdfFdoAddStaticChildTableIndex
S_CONSTANT: Type:             0x101B, Value: 228, WdfDeviceAddQueryInterfaceTableIndex
S_GDATA32: [0009:00000015], Type:      T_ULONG(0022), __guard_fids_count
S_PROCREF: 0x00000000: (   2, 000019FC) WppCleanupKm
S_UDT:             0x12B1, PFN_WDF_IO_QUEUE_IO_STOP
S_CONSTANT: Type:             0x15DA, Value: 0, KCONTINUE_UNWIND
S_CONSTANT: Type:             0x15DC, Value: 3, SystemFeatureConfigurationSectionTypeCount
S_CONSTANT: Type:             0x101B, Value: 255, WdfRequestMarkCancelableTableIndex
S_UDT:             0x10D0, EVT_WDF_DEVICE_SELF_MANAGED_IO_FLUSH
S_CONSTANT: Type:             0x102E, Value: 2, StateNotificationPostProcessState
S_CONSTANT: Type:             0x106A, Value: 37, PagedPoolCacheAlignedSession
S_UDT:             0x1499, RTL_SPLAY_LINKS
S_GDATA32: [0002:000000C0], Type:             0x1734, __guard_fids_table
S_CONSTANT: Type:             0x101D, Value: 1, WdfExecutionLevelInheritFromParent
S_CONSTANT: Type:             0x101B, Value: 192, WdfMemoryCreateTableIndex
S_UDT:             0x10BE, EVT_WDF_DEVICE_QUERY_REMOVE
S_UDT:             0x11A5, PWDF_IO_QUEUE_CONFIG
S_CONSTANT: Type:             0x1038, Value: 2, WakeAllowUserControl
S_UDT:             0x12AF, KEVENT
S_GDATA32: [0002:00000540], Type:             0x1737, _load_config_used
S_PROCREF: 0x00000000: (  19, 0000074C) FxStubDriverUnload
S_UDT:             0x1358, PFN_WDFFDOUNLOCKSTATICCHILDLISTFROMITERATION
S_CONSTANT: Type:             0x107B, Value: 2, ClfsRestartRecord
S_UDT:             0x10A6, WDFKEY
S_UDT:             0x16ED, PWDF_VERSION_BIND
S_CONSTANT: Type:             0x107B, Value: 16, CLFS_SCAN_INITIALIZED
S_UDT:             0x1385, PUSBD_STREAM_INFORMATION
S_CONSTANT: Type:             0x101B, Value: 190, WdfIoTargetSendInternalIoctlOthersSynchronouslyTableIndex
S_CONSTANT: Type:             0x101B, Value: 18, WdfCollectionGetItemTableIndex
S_UDT:             0x10D0, EVT_WDF_DEVICE_DISABLE_WAKE_AT_BUS
S_UDT:             0x10D6, PRIVILEGE_SET
S_UDT:             0x136E, PETHREAD
S_UDT:             0x10CB, CM_PARTIAL_RESOURCE_LIST
S_UDT:             0x110A, PFILE_OBJECT
S_GDATA32: [0002:000001A0], Type:             0x10FD, FailedToFindBulkInPipe
S_CONSTANT: Type:             0x105C, Value: 0, KernelMode
S_GDATA32: [0003:00000130], Type:    T_64PVOID(0603), __KMDF_TYPE_INIT_END
S_CONSTANT: Type:             0x101B, Value: 170, WdfIoTargetCloseTableIndex
S_UDT:      T_ULONG(0022), DEVPROPTYPE
S_CONSTANT: Type:             0x129C, Value: 256, CLFS_MAX_CONTAINER_INFO
S_UDT:             0x1322, PETWENABLECALLBACK
S_UDT:             0x10C0, SECURITY_SUBJECT_CONTEXT
S_CONSTANT: Type:             0x101B, Value: 426, WdfDmaTransactionStopSystemTransferTableIndex
S_CONSTANT: Type:             0x101B, Value: 369, WdfWmiProviderCreateTableIndex
S_UDT:             0x1723, PFN_WDFDRIVERMINIPORTUNLOAD
S_CONSTANT: Type:             0x1058, Value: 2, WdfIoTargetOpenByName
S_UDT:             0x11C6, PWDF_REQUEST_COMPLETION_PARAMS
S_CONSTANT: Type:             0x101B, Value: 151, WdfInterruptGetDeviceTableIndex
S_UDT:             0x12DF, FAST_IO_QUERY_BASIC_INFO
S_CONSTANT: Type:             0x15D4, Value: 1, JOBOBJECT_IO_PRIORITY_LIMIT_ENABLE
S_UDT:             0x13ED, KDEFERRED_ROUTINE
S_UDT:             0x12D7, PFN_WDFREQUESTFORMATREQUESTUSINGCURRENTTYPE
S_UDT:             0x11C0, WDFIOTARGET
S_UDT:             0x1191, DEVICE_CONTEXT
S_CONSTANT: Type:             0x101B, Value: 384, WdfDmaEnablerGetFragmentLengthTableIndex
S_UDT:             0x162F, PWDF_IFR_HEADER
S_CONSTANT: Type:             0x101B, Value: 168, WdfIoTargetOpenTableIndex
S_UDT:             0x1177, WDF_OBJECT_ATTRIBUTES
S_CONSTANT: Type:             0x101B, Value: 3, WdfChildListRetrieveAddressDescriptionTableIndex
S_CONSTANT: Type:             0x101B, Value: 58, WdfDeviceInitRegisterPnpStateChangeCallbackTableIndex
S_UDT:             0x138B, PFN_WDFDEVICECREATESYMBOLICLINK
S_UDT:             0x10FB, CM_FULL_RESOURCE_DESCRIPTOR
S_UDT:             0x15F2, PCONTEXT
S_CONSTANT: Type:             0x101B, Value: 203, WdfObjectAllocateContextTableIndex
S_GDATA32: [0002:000001B0], Type:             0x130D, Nefarius_Bluetooth_PS_Filter_ServiceKeywords
S_CONSTANT: Type:             0x101B, Value: 232, WdfRegistryWdmGetHandleTableIndex
S_CONSTANT: Type:             0x105E, Value: 1, WdfIoQueueAcceptRequests
S_CONSTANT: Type:             0x101B, Value: 218, WdfPdoInitAssignRawDeviceTableIndex
S_CONSTANT: Type:             0x14D9, Value: 2, JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH
S_UDT:             0x10BE, EVT_WDF_DEVICE_SELF_MANAGED_IO_INIT
S_CONSTANT: Type:             0x101B, Value: 298, WdfIoResourceListGetCountTableIndex
S_CONSTANT: Type:             0x101B, Value: 311, WdfObjectReleaseLockTableIndex
S_CONSTANT: Type:             0x102E, Value: 4, StateNotificationLeaveState
S_UDT:             0x1402, PFN_WDFWORKITEMGETPARENTOBJECT
S_CONSTANT: Type:             0x1064, Value: 4, WdfWmiProviderTracing
S_UDT:             0x11E4, PCEVENT_DESCRIPTOR
S_UDT:      T_UQUAD(0023), rsize_t
S_UDT:   T_64PUQUAD(0623), PSIZE_T
S_CONSTANT: Type:             0x101B, Value: 114, WdfDpcGetParentObjectTableIndex
S_UDT:      T_UQUAD(0023), REGHANDLE
S_UDT:    T_64PVOID(0603), PACCESS_TOKEN
S_UDT:             0x11FA, PDEVICE_CAPABILITIES
S_UDT:             0x13B3, WHEA_EVENT_LOG_ENTRY_ID
S_UDT:             0x1163, FAST_IO_UNLOCK_ALL_BY_KEY
S_UDT:             0x12B6, PFN_WDFDRIVERWDMGETDRIVEROBJECT
S_CONSTANT: Type:             0x101B, Value: 239, WdfRegistryQueryStringTableIndex
S_CONSTANT: Type:             0x15D6, Value: 1, JOBOBJECT_PAGE_PRIORITY_LIMIT_ENABLE
S_CONSTANT: Type:             0x15E8, Value: 20, JobObjectWakeInformation
S_CONSTANT: Type:             0x106C, Value: 2, RegNtDeleteValueKey
S_CONSTANT: Type:             0x101B, Value: 399, WdfCxDeviceInitSetRequestAttributesTableIndex
S_CONSTANT: Type:             0x107B, Value: 4, CLFS_SCAN_BACKWARD
S_CONSTANT: Type:             0x14ED, Value: 2, COR_VERSION_MAJOR_V2
S_CONSTANT: Type:             0x101B, Value: 416, WdfInterruptQueueWorkItemForIsrTableIndex
S_UDT:             0x1388, PUSBD_INTERFACE_INFORMATION
S_UDT:             0x15CD, _PIFV
S_CONSTANT: Type:             0x1277, Value: 32, ClfsContainerPendingArchiveAndDelete
S_UDT:             0x1072, L2CAP_SIGNALLING_COMMAND_CODE
S_PROCREF: 0x00000000: (   1, 00000094) BthPS3PSM_CreateDevice
S_CONSTANT: Type:             0x14E4, Value: 2, JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME
S_UDT:             0x1003, WPP_TRACE_API_SUITE
S_UDT:             0x10D0, EVT_WDF_DEVICE_SELF_MANAGED_IO_CLEANUP
S_UDT:             0x10C5, PFN_WDFFDOINITSETFILTER
S_CONSTANT: Type:             0x1013, Value: 0, ResultZero
S_UDT:             0x1087, FREE_FUNCTION
S_CONSTANT: Type:             0x15E8, Value: 44, JobObjectContainerTelemetryId
S_CONSTANT: Type:             0x101B, Value: 240, WdfRegistryQueryULongTableIndex
S_UDT:             0x140D, PFN_WDFSTRINGGETUNICODESTRING
S_UDT:             0x1358, PFN_WDFDEVICERESUMEIDLENOTRACK
S_UDT:       T_INT4(0074), mbstate_t
S_CONSTANT: Type:             0x106A, Value: 35, DontUseThisTypeSession
S_CONSTANT: Type:             0x101B, Value: 234, WdfRegistryRemoveValueTableIndex
S_CONSTANT: Type:             0x101B, Value: 103, WdfDmaTransactionDmaCompletedTableIndex
S_CONSTANT: Type:             0x101B, Value: 183, WdfIoTargetFormatRequestForReadTableIndex
S_UDT:       T_QUAD(0013), INT_PTR
S_UDT:             0x1295, PFN_WDFREQUESTSEND
S_UDT:             0x1015, WDF_TRI_STATE
S_CONSTANT: Type:             0x101B, Value: 415, WdfDmaTransactionWdmGetTransferContextTableIndex
S_CONSTANT: Type:             0x101B, Value: 307, WdfCmResourceListRemoveByDescriptorTableIndex
S_UDT:             0x12A7, EVT_WDF_IO_QUEUE_IO_WRITE
S_CONSTANT: Type:             0x101B, Value: 115, WdfDpcWdmGetDpcTableIndex
S_UDT:             0x141E, PFN_WDFWORKITEMCREATE
S_UDT:             0x136F, EVT_WDF_WORKITEM
S_UDT:             0x1070, USBD_PIPE_TYPE
S_UDT:             0x13A8, PFAST_IO_RELEASE_FILE
S_CONSTANT: Type:             0x101B, Value: 98, WdfDmaTransactionCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 294, WdfIoResourceListCreateTableIndex
S_UDT:             0x10EA, PFN_WDF_OBJECT_CONTEXT_CLEANUP
S_CONSTANT: Type:             0x15E8, Value: 26, JobObjectInterferenceInformation
S_CONSTANT: Type:             0x14D9, Value: 7, JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS
S_CONSTANT: Type:             0x15E4, Value: 4, SE_WS_APPX_SIGNATURE_ORIGIN_ENTERPRISE
S_CONSTANT: Type:             0x101B, Value: 201, WdfDriverMiniportUnloadTableIndex
S_UDT:             0x127D, EVT_WDF_IO_QUEUE_IO_RESUME
S_UDT:             0x11D8, FILE_INFORMATION_CLASS
S_CONSTANT: Type:             0x101B, Value: 121, WdfDriverRegisterTraceInfoTableIndex
S_CONSTANT: Type:             0x101B, Value: 251, WdfRequestFormatRequestUsingCurrentTypeTableIndex
S_CONSTANT: Type:             0x101B, Value: 293, WdfIoResourceRequirementsListRemoveByIoResListTableIndex
S_CONSTANT: Type:             0x15EA, Value: 1, ExceptionContinueSearch
S_CONSTANT: Type:             0x101B, Value: 2, WdfChildListRetrievePdoTableIndex
S_UDT:             0x1282, EVT_WDF_DRIVER_DEVICE_ADD
S_CONSTANT: Type:             0x106A, Value: 512, NonPagedPoolNx
S_CONSTANT: Type:             0x1050, Value: 1, WDF_REQUEST_SEND_OPTION_TIMEOUT
S_CONSTANT: Type:             0x101B, Value: 402, WdfDeviceWdmDispatchIrpToIoQueueTableIndex
S_PROCREF: 0x00000000: (  13, 000000A4) _guard_check_icall_nop
S_CONSTANT: Type:             0x101B, Value: 373, WdfWmiInstanceCreateTableIndex
S_UDT:             0x10AA, PCUNICODE_STRING
S_UDT:             0x1433, PFAST_IO_READ
S_CONSTANT: Type:             0x1005, Value: 1, WPP_LAST_CTL
S_CONSTANT: Type:             0x101B, Value: 147, WdfInterruptDisableTableIndex
S_CONSTANT: Type:             0x1277, Value: 32, ClsContainerPendingArchiveAndDelete
S_CONSTANT: Type:             0x15BF, Value: 33, PsAttributeMax
S_UDT:             0x11B8, PNAMED_PIPE_CREATE_PARAMETERS
S_UDT:             0x1358, PFN_WDFPDOREQUESTEJECT
S_CONSTANT: Type:             0x101B, Value: 45, WdfDeviceGetDevicePowerPolicyStateTableIndex
S_UDT:             0x1430, FAST_IO_WRITE
S_UDT:             0x10EA, PEXT_DELETE_CALLBACK
S_CONSTANT: Type:             0x101B, Value: 202, WdfObjectGetTypedContextWorkerTableIndex
S_GDATA32: [0009:00000000], Type:      T_ULONG(0022), __guard_iat_count
S_CONSTANT: Type:             0x105E, Value: 4, WdfIoQueueNoRequests
S_CONSTANT: Type:             0x107B, Value: 2, CLFS_SCAN_FORWARD
S_CONSTANT: Type:             0x101B, Value: 187, WdfIoTargetFormatRequestForIoctlTableIndex
S_CONSTANT: Type:             0x105A, Value: 2, WdfIoQueueDispatchParallel
S_CONSTANT: Type:             0x101B, Value: 132, WdfFdoGetDefaultChildListTableIndex
S_UDT:             0x11D0, PFN_WDFWAITLOCKACQUIRE
S_GDATA32: [0002:00000130], Type:             0x1308, WPP_ca66b9c097d737763daf3296492866aa_Traceguids
S_UDT:             0x1418, PBTHPS3PSM_DISABLE_PSM_PATCHING
S_UDT:             0x141B, KAPC
S_CONSTANT: Type:             0x101B, Value: 263, WdfRequestCompleteTableIndex
S_CONSTANT: Type:             0x15E8, Value: 50, JobObjectServerSiloDiagnosticInformation
S_GDATA32: [0002:00000220], Type:             0x1308, WPP_03fb1cb41c8130e950db4ecb4f47594e_Traceguids
S_UDT:             0x12FB, DRIVER_INITIALIZE
S_CONSTANT: Type:             0x101B, Value: 392, WdfPdoInitAllowForwardingRequestToParentTableIndex
S_CONSTANT: Type:             0x14E4, Value: 1, JOB_OBJECT_IO_RATE_CONTROL_ENABLE
S_UDT:             0x13AD, LUID
S_CONSTANT: Type:             0x104C, Value: 255, WdfRequestTypeNoFormat
S_PROCREF: 0x00000000: (   2, 00001CB0) WppLoadTracingSupport
S_UDT:             0x10F8, GUID
S_UDT:             0x1114, PLARGE_INTEGER
S_UDT:             0x1038, WDF_POWER_POLICY_SX_WAKE_USER_CONTROL
S_UDT:             0x113C, FAST_IO_RELEASE_FILE
S_UDT:   T_64PUCHAR(0620), PSE_SIGNING_LEVEL
S_CONSTANT: Type:             0x101B, Value: 5, WdfChildListEndScanTableIndex
S_UDT:             0x1378, PFN_WDF_REQUEST_CANCEL
S_CONSTANT: Type:             0x101B, Value: 76, WdfDeviceSetStaticStopRemoveTableIndex
S_CONSTANT: Type:             0x101B, Value: 408, WdfDmaTransactionSetChannelConfigurationCallbackTableIndex
S_CONSTANT: Type:             0x14E4, Value: 4, JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL
S_UDT:             0x134E, PFN_WDFDEVICEINITASSIGNNAME
S_CONSTANT: Type:             0x101B, Value: 94, WdfDmaEnablerCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 319, WdfTimerStartTableIndex
S_GDATA32: [0003:00000058], Type:             0x109E, _WDF_DEVICE_CONTEXT_TYPE_INFO
S_UDT:             0x11DE, FN_ETWREGISTERCLASSICPROVIDER
S_UDT:             0x1044, DEVICE_POWER_STATE
S_CONSTANT: Type:             0x15E8, Value: 41, JobObjectServerSiloRunningState
S_CONSTANT: Type:             0x101B, Value: 226, WdfPdoRemoveEjectionRelationsPhysicalDeviceTableIndex
S_CONSTANT: Type:             0x15E2, Value: 4, MemoryContiguityStateMax
S_UDT:             0x15F0, XMM_SAVE_AREA32
S_CONSTANT: Type:             0x101B, Value: 273, WdfRequestRetrieveUnsafeUserInputBufferTableIndex
S_CONSTANT: Type:             0x106C, Value: 7, RegNtQueryKey
S_CONSTANT: Type:             0x101B, Value: 198, WdfLookasideListCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 269, WdfRequestRetrieveInputBufferTableIndex
S_CONSTANT: Type:             0x101B, Value: 100, WdfDmaTransactionInitializeUsingRequestTableIndex
S_UDT:             0x1048, WDF_INTERRUPT_POLICY
S_UDT:             0x1283, EVT_WDF_IO_QUEUE_IO_INTERNAL_DEVICE_CONTROL
S_CONSTANT: Type:             0x1020, Value: 1, WdfSynchronizationScopeInheritFromParent
S_UDT:             0x10C5, PFN_WDFDEVICEINITSETPOWERPAGEABLE
S_UDT:      T_ULONG(0022), ACCESS_MASK
S_CONSTANT: Type:             0x101B, Value: 258, WdfRequestCancelSentRequestTableIndex
S_CONSTANT: Type:             0x1026, Value: 3, WdfMemoryDescriptorTypeHandle
S_CONSTANT: Type:             0x15E8, Value: 25, JobObjectReserved8Information
S_CONSTANT: Type:             0x101B, Value: 17, WdfCollectionRemoveItemTableIndex
S_UDT:             0x1314, PDMA_COMMON_BUFFER_EXTENDED_CONFIGURATION
S_UDT:      T_ULONG(0022), WDF_BUILD_NUMBER
S_CONSTANT: Type:             0x1072, Value: 2, L2CAP_Connection_Request
S_UDT:             0x10D8, DEVPROPKEY
S_UDT:             0x10EA, PINTERFACE_DEREFERENCE
S_UDT:             0x1696, PWDF_CLASS_BIND_INFO
S_UDT:             0x10D0, EVT_WDF_DEVICE_DISARM_WAKE_FROM_SX
S_CONSTANT: Type:             0x101B, Value: 93, WdfDeviceConfigureRequestDispatchingTableIndex
S_UDT:             0x1108, PFN_WDFCOLLECTIONREMOVEITEM
S_UDT:             0x114E, PCWSTR
S_UDT:             0x11D7, PFN_WDFDEVICEOPENREGISTRYKEY
S_PROCREF: 0x00000000: (   1, 0000173C) BthPS3PSM_EvtDeviceContextCleanup
S_CONSTANT: Type:             0x103E, Value: 4, WdfFileObjectWdfCannotUseFsContexts
S_UDT:             0x103C, DEVICE_WAKE_DEPTH
S_CONSTANT: Type:             0x101B, Value: 140, WdfFileObjectWdmGetFileObjectTableIndex
S_CONSTANT: Type:             0x103A, Value: 2, WdfDeviceIoBuffered
S_CONSTANT: Type:             0x1003, Value: 0, WppTraceDisabledSuite
S_LDATA32: [0003:00000398], Type:             0x10B7, WdfDriverStubRegistryPath
S_CONSTANT: Type:             0x1070, Value: 2, UsbdPipeTypeBulk
S_CONSTANT: Type:             0x15D8, Value: 5, SystemProcessClassificationMaximum
S_CONSTANT: Type:             0x101B, Value: 412, WdfDmaTransactionSetDeviceAddressOffsetTableIndex
S_PROCREF: 0x00000000: (  19, 00000324) FxDriverEntry
S_CONSTANT: Type:             0x101B, Value: 74, WdfDeviceInitSetIoInCallerContextCallbackTableIndex
S_UDT:             0x104A, WDF_INTERRUPT_PRIORITY
S_UDT:             0x11CC, EVT_WDF_REQUEST_COMPLETION_ROUTINE
S_UDT:             0x12CD, PFN_WDFREQUESTUNMARKCANCELABLE
S_GDATA32: [0002:000000B8], Type:             0x15B4, __castguard_check_failure_os_handled_fptr
S_GDATA32: [0002:000000B8], Type:    T_64PVOID(0603), __castguard_check_failure_os_handled_fptr
S_GDATA32: [0003:000000C0], Type:      T_UQUAD(0023), __security_cookie
S_PROCREF: 0x00000000: (   3, 00001994) WPP_SF_dDDq
S_CONSTANT: Type:             0x15E8, Value: 48, JobObjectIoPriorityLimit
S_CONSTANT: Type:             0x101B, Value: 142, WdfInterruptQueueDpcForIsrTableIndex
S_CONSTANT: Type:             0x1032, Value: 1, IdleCannotWakeFromS0
S_UDT:             0x1642, PFNLIBRARYUNREGISTERCLIENT
S_CONSTANT: Type:             0x101B, Value: 418, WdfIoQueueStopAndPurgeTableIndex
S_GDATA32: [0009:00000000], Type:             0x1734, __guard_eh_cont_table
S_UDT:             0x1645, WDF_IFR_OFFSET
S_UDT:             0x129B, PWDF_DRIVER_CONFIG
S_CONSTANT: Type:             0x101B, Value: 99, WdfDmaTransactionInitializeTableIndex
S_CONSTANT: Type:             0x101B, Value: 78, WdfDeviceSetDeviceInterfaceStateTableIndex
S_UDT:             0x1076, FN_ETWUNREGISTER
S_CONSTANT: Type:             0x101B, Value: 235, WdfRegistryQueryValueTableIndex
S_CONSTANT: Type:             0x101B, Value: 19, WdfCollectionGetFirstItemTableIndex
S_CONSTANT: Type:             0x101B, Value: 279, WdfRequestProbeAndLockUserBufferForWriteTableIndex
S_CONSTANT: Type:             0x101B, Value: 270, WdfRequestRetrieveOutputBufferTableIndex
S_UDT:             0x10EA, PFN_WDF_OBJECT_CONTEXT_DESTROY
S_CONSTANT: Type:             0x101B, Value: 15, WdfCollectionAddTableIndex
S_GDATA32: [0002:00000230], Type:             0x1621, SDDL_DEVOBJ_SYS_ALL_ADM_ALL_buffer
S_UDT:   T_64PWCHAR(0671), PWSTR
S_UDT:             0x1091, LPCSTR
S_CONSTANT: Type:             0x101B, Value: 105, WdfDmaTransactionDmaCompletedFinalTableIndex
S_CONSTANT: Type:             0x101B, Value: 371, WdfWmiProviderIsEnabledTableIndex
S_CONSTANT: Type:             0x101B, Value: 380, WdfWorkItemEnqueueTableIndex
S_UDT:             0x116C, FAST_IO_QUERY_STANDARD_INFO
S_CONSTANT: Type:             0x101B, Value: 317, WdfSpinLockReleaseTableIndex
S_UDT:       T_INT4(0074), errno_t
S_UDT:             0x13A8, PFAST_IO_ACQUIRE_FILE
S_UDT:       T_QUAD(0013), LONG_PTR
S_PROCREF: 0x00000000: (   2, 00000E28) McGenControlCallbackV2
S_CONSTANT: Type:             0x101B, Value: 233, WdfRegistryRemoveKeyTableIndex
S_CONSTANT: Type:             0x1277, Value: 1, ClfsContainerInitializing
S_CONSTANT: Type:             0x101B, Value: 247, WdfRequestCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 109, WdfDmaTransactionGetCurrentDmaTransferLengthTableIndex
S_CONSTANT: Type:             0x1277, Value: 8, ClsContainerActivePendingDelete
S_CONSTANT: Type:             0x101B, Value: 444, WdfFunctionTableNumEntries
S_UDT:             0x13FE, PFN_WDFREQUESTSETINFORMATION
S_UDT:             0x104C, WDF_REQUEST_TYPE
S_CONSTANT: Type:             0x1058, Value: 1, WdfIoTargetOpenUseExistingDevice
S_CONSTANT: Type:             0x101B, Value: 67, WdfDeviceInitAssignNameTableIndex
S_UDT:             0x117A, IRQ_DEVICE_POLICY
S_UDT:             0x11E8, WDF_POINTER_TYPE_DEVICE_CONTEXT
S_UDT:             0x133F, PSINGLE_LIST_ENTRY
S_PROCREF: 0x00000000: (  21, 0000011C) FxStubBindClasses
S_CONSTANT: Type:             0x105E, Value: 2, WdfIoQueueDispatchRequests
S_UDT:             0x1001, EVENT_TYPE
S_CONSTANT: Type:             0x101B, Value: 91, WdfDeviceEnqueueRequestTableIndex
S_UDT:    T_64PVOID(0603), HANDLE
S_CONSTANT: Type:             0x101B, Value: 260, WdfRequestSetCompletionRoutineTableIndex
S_UDT:             0x117E, IRQ_PRIORITY
S_UDT:             0x102E, WDF_STATE_NOTIFICATION_TYPE
S_CONSTANT: Type:             0x1007, Value: 2, WPP_BIT_TRACE_DRIVER
S_CONSTANT: Type:             0x102A, Value: 3, TraceEnableLevelClass
S_CONSTANT: Type:             0x101B, Value: 229, WdfRegistryOpenKeyTableIndex
S_CONSTANT: Type:             0x101B, Value: 61, WdfDeviceInitSetIoTypeTableIndex
S_UDT:             0x1639, PLIBRARY_MODULE
S_UDT:             0x110E, PMDL
S_CONSTANT: Type:             0x15E8, Value: 26, JobObjectReserved9Information
S_PROCREF: 0x00000000: (   2, 00001188) McGenEventRegister_EtwRegister
S_UDT:      T_ULONG(0022), WDF_MINOR_VERSION
S_UDT:             0x1068, MEMORY_CACHING_TYPE
S_CONSTANT: Type:             0x101B, Value: 42, WdfDeviceGetIoTargetTableIndex
S_UDT:             0x11AA, LPGUID
S_PROCREF: 0x00000000: (   3, 00001BA4) WPP_SF_qD
S_UDT:             0x10C8, PPOWER_SEQUENCE
S_UDT:             0x1430, FAST_IO_READ
S_PROCREF: 0x00000000: (  19, 00000198) FxStubDriverEntryFailure
S_CONSTANT: Type:             0x101B, Value: 406, WdfDmaTransactionInitializeUsingOffsetTableIndex
S_CONSTANT: Type:             0x1060, Value: 1, WdfIoForwardProgressReservedPolicyAlwaysUseReservedRequest
S_CONSTANT: Type:             0x101B, Value: 249, WdfRequestReuseTableIndex
S_CONSTANT: Type:             0x101B, Value: 221, WdfPdoGetParentTableIndex
S_UDT:             0x12A7, EVT_WDF_IO_QUEUE_IO_READ
S_CONSTANT: Type:             0x101B, Value: 321, WdfTimerGetParentObjectTableIndex
S_UDT:      T_RCHAR(0070), KPROCESSOR_MODE
S_UDT:             0x114A, PFN_WPPTRACEMESSAGE
S_CONSTANT: Type:             0x101B, Value: 144, WdfInterruptAcquireLockTableIndex
S_CONSTANT: Type:             0x101B, Value: 383, WdfCommonBufferCreateWithConfigTableIndex
S_CONSTANT: Type:             0x101B, Value: 411, WdfDmaTransactionAllocateResourcesTableIndex
S_UDT:             0x138B, PFN_WDFDEVICEASSIGNMOFRESOURCENAME
S_GDATA32: [0002:00000210], Type:             0x1308, WPP_324ed36d69493aa1d5813e2dc9652ec2_Traceguids
S_PROCREF: 0x00000000: (  17, 000000AC) __security_init_cookie
S_CONSTANT: Type:             0x101B, Value: 59, WdfDeviceInitRegisterPowerStateChangeCallbackTableIndex
S_UDT:             0x129F, PFN_WDF_IO_QUEUE_IO_CANCELED_ON_QUEUE
S_PROCREF: 0x00000000: (   4, 00001074) WPP_SF_q
S_CONSTANT: Type:             0x106A, Value: 0, NonPagedPoolBase
S_UDT:    T_64PVOID(0603), USBD_PIPE_HANDLE
S_CONSTANT: Type:             0x101B, Value: 87, WdfDeviceSetFailedTableIndex
S_UDT:             0x14B2, PCM_PARTIAL_RESOURCE_DESCRIPTOR
S_UDT:             0x10BE, EVT_WDF_DEVICE_QUERY_STOP
S_CONSTANT: Type:             0x101B, Value: 310, WdfObjectAcquireLockTableIndex
S_UDT:             0x13BA, PSECTION_OBJECT_POINTERS
S_UDT:             0x134E, PFN_WDFPDOINITADDHARDWAREID
S_UDT:             0x1319, PCREATE_COMMON_BUFFER_FROM_MDL
S_UDT:             0x134E, PFN_WDFPDOINITASSIGNDEVICEID
S_GDATA32: [0003:00000168], Type:             0x1003, WPPTraceSuite
S_UDT:             0x10DB, INITIAL_PRIVILEGE_SET
S_UDT:             0x1427, PFN_WDFREQUESTCOMPLETE
S_UDT:             0x148E, PIO_TIMER
S_UDT:    T_64PVOID(0603), WDFCONTEXT
S_GDATA32: [0003:000003A8], Type:             0x1011, WdfFunctions_01015
S_CONSTANT: Type:             0x101B, Value: 313, WdfWaitLockAcquireTableIndex
S_CONSTANT: Type:             0x101B, Value: 33, WdfDeviceWdmGetPhysicalDeviceTableIndex
S_UDT:             0x10F2, LUID_AND_ATTRIBUTES
S_CONSTANT: Type:             0x101B, Value: 139, WdfFileObjectGetDeviceTableIndex
S_UDT:             0x115B, PFAST_IO_DETACH_DEVICE
S_CONSTANT: Type:             0x101B, Value: 238, WdfRegistryQueryUnicodeStringTableIndex
S_CONSTANT: Type:             0x101B, Value: 158, WdfIoQueueRetrieveNextRequestTableIndex
S_CONSTANT: Type:             0x101B, Value: 68, WdfDeviceInitAssignSDDLStringTableIndex
S_CONSTANT: Type:             0x101B, Value: 63, WdfDeviceInitSetPowerNotPageableTableIndex
S_CONSTANT: Type:             0x15E8, Value: 18, JobObjectFreezeInformation
S_CONSTANT: Type:             0x105A, Value: 1, WdfIoQueueDispatchSequential
S_CONSTANT: Type:             0x101B, Value: 290, WdfIoResourceRequirementsListGetCountTableIndex
S_CONSTANT: Type:             0x101B, Value: 52, WdfDeviceGetAlignmentRequirementTableIndex
S_UDT:             0x13E7, DISPATCHER_HEADER
S_CONSTANT: Type:             0x101B, Value: 267, WdfRequestRetrieveInputMemoryTableIndex
S_UDT:             0x1084, PFN_ETWUNREGISTER
S_CONSTANT: Type:             0x101B, Value: 49, WdfDeviceSetSpecialFileSupportTableIndex
S_CONSTANT: Type:             0x101B, Value: 315, WdfSpinLockCreateTableIndex
S_UDT:             0x11B3, PFN_WDFIOQUEUECREATE
S_UDT:             0x1358, PFN_WDFCONTROLFINISHINITIALIZING
S_UDT:             0x1087, EVT_WDF_OBJECT_CONTEXT_DESTROY
S_UDT:             0x1227, PINTERFACE
S_LDATA32: [0003:00000118], Type:             0x1696, __KMDF_CLASS_BIND_LAST_BOUND
S_CONSTANT: Type:             0x101B, Value: 81, WdfDeviceQueryPropertyTableIndex
S_CONSTANT: Type:             0x101B, Value: 268, WdfRequestRetrieveOutputMemoryTableIndex
S_CONSTANT: Type:             0x1277, Value: 2, ClfsContainerInactive
S_CONSTANT: Type:             0x101B, Value: 295, WdfIoResourceListAppendDescriptorTableIndex
S_CONSTANT: Type:             0x101B, Value: 374, WdfWmiInstanceRegisterTableIndex
S_CONSTANT: Type:             0x101B, Value: 280, WdfRequestGetRequestorModeTableIndex
S_CONSTANT: Type:             0x101B, Value: 283, WdfRequestRequeueTableIndex
S_UDT:             0x16AC, PFN_WDF_VERSION_BIND_CLASS
S_CONSTANT: Type:             0x1064, Value: 2, WdfWmiProviderExpensive
S_CONSTANT: Type:             0x1007, Value: 8, WPP_BLOCK_END_BthPS3PSMTraceGuid
S_CONSTANT: Type:             0x101B, Value: 137, WdfFileObjectGetFileNameTableIndex
S_UDT:             0x1642, PWDF_LOADER_INTERFACE_DRIVER_ENTRY_FAILURE_NOTIFY
S_CONSTANT: Type:             0x15C4, Value: 0, PsNeverDuplicate
S_UDT:             0x12A9, PFN_WDF_IO_QUEUE_IO_READ
S_UDT:             0x10AE, WDFSTRING
S_UDT:    T_64PVOID(0603), PSECURITY_DESCRIPTOR
S_UDT:             0x127D, EVT_WDF_IO_QUEUE_IO_CANCELED_ON_QUEUE
S_UDT:             0x1114, PPHYSICAL_ADDRESS
S_PROCREF: 0x00000000: (  18, 000000AC) __report_gsfailure
S_UDT:             0x15FF, PEXCEPTION_ROUTINE
S_UDT:      T_UQUAD(0023), DWORD64
S_UDT:      T_UQUAD(0023), ULONG_PTR
S_UDT:             0x10CE, PFN_WDF_DEVICE_QUERY_STOP
S_GDATA32: [0003:00000120], Type:             0x164F, __KMDF_TYPE_INIT_START
S_CONSTANT: Type:             0x1064, Value: 1, WdfWmiProviderEventOnly
S_CONSTANT: Type:             0x101B, Value: 8, WdfChildListEndIterationTableIndex
S_CONSTANT: Type:             0x101B, Value: 85, WdfDeviceSetBusInformationForChildrenTableIndex
S_UDT:             0x1106, IO_RESOURCE_LIST
S_UDT:             0x10F3, PFN_WDF_CLASS_EXPORT
S_CONSTANT: Type:             0x101B, Value: 162, WdfIoQueueDrainSynchronouslyTableIndex
S_UDT:             0x13EA, PDRIVER_CONTROL
S_UDT:             0x134E, PFN_WDFPDOINITASSIGNCONTAINERID
S_CONSTANT: Type:             0x101B, Value: 256, WdfRequestUnmarkCancelableTableIndex
S_PROCREF: 0x00000000: (   1, 00001DA8) BthPS3PSM_GetPropertyInstanceId
S_CONSTANT: Type:             0x15E8, Value: 22, JobObjectSchedulingRankBiasInformation
S_UDT:       T_INT4(0074), BOOL
S_CONSTANT: Type:             0x101B, Value: 389, WdfInterruptSetExtendedPolicyTableIndex
S_UDT:             0x1457, PFN_WDFIOQUEUEGETDEVICE
S_UDT:    T_64PVOID(0603), USBD_CONFIGURATION_HANDLE
S_CONSTANT: Type:             0x1003, Value: 2, WppTraceWinXP
S_CONSTANT: Type:             0x1042, Value: 7, PowerSystemMaximum
S_UDT:             0x1728, PWDF_VERSION_UNBIND
S_CONSTANT: Type:             0x101B, Value: 214, WdfPdoInitAddHardwareIDTableIndex
S_CONSTANT: Type:             0x1001, Value: 1, SynchronizationEvent
S_UDT:             0x13BD, PFN_WDFREQUESTRETRIEVEOUTPUTBUFFER
S_CONSTANT: Type:             0x101B, Value: 181, WdfIoTargetWdmGetTargetFileHandleTableIndex
S_UDT:             0x1493, PRTL_SPLAY_LINKS
S_CONSTANT: Type:             0x1026, Value: 2, WdfMemoryDescriptorTypeMdl
S_UDT:      T_UQUAD(0023), TRACEHANDLE
S_UDT:      T_UINT4(0075), CLS_CONTAINER_STATE
S_CONSTANT: Type:             0x101B, Value: 282, WdfRequestGetIoQueueTableIndex
S_CONSTANT: Type:             0x1030, Value: 15, DevicePropertyEnumeratorName
S_GDATA32: [0003:000003D0], Type:             0x1022, FilterDeviceCollection
S_UDT:             0x10A3, PEVENT_DATA_DESCRIPTOR
S_UDT:             0x1437, PFAST_IO_MDL_WRITE_COMPLETE
S_CONSTANT: Type:             0x101B, Value: 413, WdfDmaTransactionFreeResourcesTableIndex
S_CONSTANT: Type:             0x101B, Value: 172, WdfIoTargetStopTableIndex
S_UDT:             0x1129, PFAST_IO_RELEASE_FOR_CCFLUSH
S_UDT:             0x11A2, FAST_IO_MDL_READ
S_UDT:             0x13C2, PFN_WDFWORKITEMENQUEUE
S_UDT:             0x103A, WDF_DEVICE_IO_TYPE
S_CONSTANT: Type:             0x101B, Value: 131, WdfFdoQueryForInterfaceTableIndex
S_UDT:             0x1087, _WHEA_ERROR_SOURCE_UNINITIALIZE_DEVICE_DRIVER
S_UDT:   T_64PRCHAR(0670), PCHAR
S_UDT:      T_WCHAR(0071), WCHAR
S_UDT:      T_UCHAR(0020), UCHAR
S_CONSTANT: Type:             0x101B, Value: 259, WdfRequestIsFrom32BitProcessTableIndex
S_CONSTANT: Type:             0x101B, Value: 320, WdfTimerStopTableIndex
S_UDT:             0x1414, PFN_WDFCONTROLDEVICEINITALLOCATE
S_UDT:      T_RCHAR(0070), CCHAR
S_UDT:             0x15FA, M128A
S_CONSTANT: Type:             0x101B, Value: 37, WdfDeviceRemoveRemovalRelationsPhysicalDeviceTableIndex
S_CONSTANT: Type:             0x101B, Value: 134, WdfFdoLockStaticChildListForIterationTableIndex
S_CONSTANT: Type:             0x1034, Value: 2, IdleAllowUserControl
S_UDT:             0x13BD, PFN_WDFREQUESTRETRIEVEUNSAFEUSEROUTPUTBUFFER
S_CONSTANT: Type:             0x101B, Value: 32, WdfDeviceWdmGetAttachedDeviceTableIndex
S_UDT:             0x12C6, EVT_WDF_REQUEST_CANCEL
S_CONSTANT: Type:             0x101B, Value: 70, WdfDeviceInitSetCharacteristicsTableIndex
S_UDT:             0x1273, PIO_RESOURCE_DESCRIPTOR
S_CONSTANT: Type:             0x101B, Value: 119, WdfDriverOpenParametersRegistryKeyTableIndex
S_CONSTANT: Type:             0x107B, Value: 1, ClfsDataRecord
S_CONSTANT: Type:             0x106C, Value: 1, RegNtSetValueKey
S_UDT:             0x163D, PFNLIBRARYDECOMMISSION
S_UDT:             0x1165, PFAST_IO_UNLOCK_ALL_BY_KEY
S_UDT:             0x11DB, PFN_WDFREQUESTSETCOMPLETIONROUTINE
S_PROCREF: 0x00000000: (   2, 000005A8) DriverEntry
S_UDT:             0x1291, WDF_DRIVER_CONFIG
S_GDATA32: [0002:00000120], Type:             0x10F8, WPP_ThisDir_CTLGUID_BthPS3PSMTraceGuid
S_CONSTANT: Type:             0x101B, Value: 35, WdfDeviceAddDependentUsageDeviceObjectTableIndex
S_UDT:   T_64PUQUAD(0623), PKSPIN_LOCK
S_UDT:             0x13BD, PFN_WDFREQUESTRETRIEVEUNSAFEUSERINPUTBUFFER
S_UDT:             0x11CF, PFN_WDF_REQUEST_COMPLETION_ROUTINE
S_UDT:             0x12CE, PKEVENT
S_GDATA32: [0003:00000100], Type:             0x164F, __KMDF_CLASS_BIND_START
S_CONSTANT: Type:             0x101B, Value: 431, WdfGetTriageInfoTableIndex
S_UDT:             0x1331, PSECURITY_QUALITY_OF_SERVICE
S_CONSTANT: Type:             0x1277, Value: 4, ClfsContainerActive
S_GDATA32: [0009:00000000], Type:             0x1734, __guard_longjmp_table
S_UDT:    T_64PLONG(0612), PLONG
S_CONSTANT: Type:             0x101B, Value: 264, WdfRequestCompleteWithPriorityBoostTableIndex
S_UDT:      T_ULONG(0022), ULONG
S_CONSTANT: Type:             0x101B, Value: 4, WdfChildListBeginScanTableIndex
S_UDT:             0x163F, PWDF_BIND_INFO
S_CONSTANT: Type:             0x102A, Value: 2, TraceEnableFlagsClass
S_CONSTANT: Type:             0x15E8, Value: 37, JobObjectSiloRootDirectory
S_CONSTANT: Type:             0x1056, Value: 1, WDF_REQUEST_FORWARD_OPTION_SEND_AND_FORGET
S_GDATA32: [0003:00000148], Type:             0x114A, pfnWppTraceMessage
S_UDT:             0x1286, PFN_WDF_IO_QUEUE_IO_INTERNAL_DEVICE_CONTROL
S_CONSTANT: Type:             0x101B, Value: 62, WdfDeviceInitSetExclusiveTableIndex
S_CONSTANT: Type:             0x101B, Value: 207, WdfObjectCreateTableIndex
S_CONSTANT: Type:             0x101B, Value: 82, WdfDeviceAllocAndQueryPropertyTableIndex
S_CONSTANT: Type:             0x101B, Value: 22, WdfCommonBufferGetAlignedVirtualAddressTableIndex
S_UDT:             0x11C3, PMAILSLOT_CREATE_PARAMETERS
S_PROCREF: 0x00000000: (   2, 00001B24) WppInitKm
S_UDT:             0x1306, PDRIVER_UNLOAD
S_UDT:             0x1058, WDF_IO_TARGET_OPEN_TYPE
S_UDT:             0x1397, PFAST_IO_QUERY_STANDARD_INFO
S_UDT:             0x1307, DRIVER_DISPATCH
S_CONSTANT: Type:             0x1072, Value: 11, L2CAP_Information_Response
S_CONSTANT: Type:             0x101B, Value: 71, WdfDeviceInitSetFileObjectConfigTableIndex
S_CONSTANT: Type:             0x101B, Value: 157, WdfIoQueueGetDeviceTableIndex
S_UDT:             0x10D2, PFN_WDF_DEVICE_DISARM_WAKE_FROM_SX
S_UDT:             0x126D, PIO_COMPLETION_ROUTINE
S_PROCREF: 0x00000000: (   9, 00000244) __memset_query
S_UDT:             0x12F0, IO_ALLOCATION_ACTION
S_PROCREF: 0x00000000: (   5, 00003040) WPP_SF_c
S_PROCREF: 0x00000000: (   9, 00000104) memset
S_UDT:      T_UCHAR(0020), BOOLEAN
S_CONSTANT: Type:             0x101B, Value: 391, WdfPdoInitAssignContainerIDTableIndex
S_CONSTANT: Type:             0x101B, Value: 41, WdfDeviceAssignMofResourceNameTableIndex
S_CONSTANT: Type:             0x15E4, Value: 3, SE_WS_APPX_SIGNATURE_ORIGIN_WINDOWS


*** COFF SYMBOL RVA

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "* Linker *" from ""


*** INLINEE LINES

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

InlineeId  FileId  StaringLine
     1113       0          807
     10E2      5F          148
     10E6      5F          562
     10EE      5F          742
     10E4      61          180
     10E8      61          209
     10EC       9          265
     110B      33         1871
     10E9      33         2613
     10E1      33         3512
     10FF      2A          104
     10E7      2A          135
     1103      2A          193
     1102      2A          222
     110C      2B          215
     1108      2B          356
     10E3      2B          410
     10EB      25           83
     10ED      34          464
     10EA      34          499
     10E5      24           98

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"

InlineeId  FileId  StaringLine
     1113       0          807
     10E2      5A          148
     120A      39          275
     11FF      5C          139
     11FA      49          149
     11F9      49          237
     11F4      49          287
     11FD      29           79
     11FB      4A         1962
     1214      4A         2035

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"

InlineeId  FileId  StaringLine
     11DB       8        30070
     10E6      5C          562
     10E5      25           98
     1191      44          994
     11CA      44         1688
     11D6      43           47
     11D1      53          332

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"

InlineeId  FileId  StaringLine
     1113       0          807
     10E6      5A          562
     10E5      24           98
     11CA      42         1688
     11D5      33         2433
     11E6      42          411
     11DD      42          619
     11D0      42          683
     11E2      42          710
     11DA      42          909
     116D      3F          438
     1169      3F          624
     11CC      3F          769

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"

InlineeId  FileId  StaringLine
     1113       0          807
     10E2      5A          148
     10E6      5A          562
     10EE      5A          742
     10E4      5C          180
     10E8      5C          209
     10EC       9          265
     10E1      33         3512
     10FF      2A          104
     1102      2A          222
     10E5      24           98
     1191      42          994
     116D      3F          438
     1169      3F          624
     115E      33         2346
     1170      33         2822
     1164      33         3055
     1160      33         3219
     1168      33         3683
     118A      52           88
     1187      52          128
     1179      52          178
     1182      42         1190
     118D      42         1229
     1190      42         1398
     115B      3A           97
     116E      3A          155
     118F      25          112
     1175      34          725

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

InlineeId  FileId  StaringLine
     1207      3C         8831
     120B      3C         9784
     120E       C          214
     1213       C          228
     1216       C          309

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

InlineeId  FileId  StaringLine
     11EB       A        13177

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

InlineeId  FileId  StaringLine
     11EB       A        13177

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

InlineeId  FileId  StaringLine
     1279      41          154

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

InlineeId  FileId  StaringLine
     1258      10           64

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

InlineeId  FileId  StaringLine
     126B      45          211

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "* Linker *" from ""


*** LINES

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Device.c (SHA_256: 17DCCBC8F5D33680671431951FA5BDF6F9B66CBD041B7134B206243DAF66C890), 0005:00000000-000008BA, line/addr pairs = 82

     66 00000000     75 0000002D     76 00000063     79 000000B0
     83 000000EC     85 0000010C    110 0000013B    115 00000154
    120 00000193    331 000001A7    124 000001D5    132 000001F5
    129 00000201    132 00000211    129 00000215    132 00000218
    129 0000021D    130 0000022B    132 00000236    129 0000023D
    132 00000246    138 00000259    143 00000298    144 000002AC
    147 000002B1    149 000002D8    158 000002DD    147 000002E0
    149 000002E3    158 000002E7    163 0000030F    168 0000034E
    169 00000362    176 00000367    181 00000394    186 000003D0
    188 00000409    190 0000042B    204 00000433    212 00000477
    217 000004B3    218 000004C7    224 000004CC    233 00000500
    235 0000050B    240 0000054E    242 0000058B    245 00000590
    250 000005C6    252 000005E9    265 00000614    259 0000061F
    265 00000621    259 00000625    265 00000635    259 00000637
    260 0000063D    259 00000642    260 00000646    265 0000064A
    259 00000651    265 0000065C    271 0000066F    276 000006B2
    277 000006C6    283 000006CB    289 000006FB    294 0000073E
    295 00000752    307 00000757    311 00000767    316 000007AA
    317 000007BA    327 000007BF    331 000007D2    333 000007E0
    336 000007FB    338 0000082D     93 00000831    104 00000860
    105 0000088F    339 00000891

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Device.c (SHA_256: 17DCCBC8F5D33680671431951FA5BDF6F9B66CBD041B7134B206243DAF66C890), 0005:000008C0-00000AEE, line/addr pairs = 21

    425 000008C0    428 000008DC    430 00000911    436 00000936
    430 00000947    436 0000094A    441 00000966    446 000009A0
    449 000009D9    451 000009FA    462 000009FF    469 00000A09
    471 00000A0D    473 00000A32    469 00000A37    473 00000A3D
    475 00000A3F    480 00000A64    485 00000A86    491 00000AA5
    492 00000AD3

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Device.c (SHA_256: 17DCCBC8F5D33680671431951FA5BDF6F9B66CBD041B7134B206243DAF66C890), 0001:00000000-00000096, line/addr pairs = 21

    396 00000000    399 0000000F    401 00000011    399 00000019
    406 0000001D    399 00000028    406 0000002C    399 00000034
    401 00000039    399 00000041    406 00000044    399 00000048
    406 0000004B    399 00000051    401 00000055    406 0000005C
    401 00000060    406 00000064    399 00000075    406 00000080
    413 0000008D

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Device.c (SHA_256: 17DCCBC8F5D33680671431951FA5BDF6F9B66CBD041B7134B206243DAF66C890), 0001:00000098-000001F8, line/addr pairs = 11

    347 00000098    355 000000C6    356 000000D8    358 000000EA
    369 00000134    380 0000017A    381 00000189    383 0000019B
    384 000001A0    387 000001D4    388 000001D6

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31), 0001:000001F8-00000248, line/addr pairs = 10

    522 000001F8    528 000001FE    530 00000202    531 00000211
    533 00000214    534 00000217    535 00000219    537 0000021C
    540 00000225    547 00000242

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31), 0001:00000248-000002F1, line/addr pairs = 10

   1070 00000248   1075 00000263   1077 0000026C   1075 00000274
   1070 00000284   1077 00000287   1081 000002BF   1077 000002C5
   1081 000002CA   1082 000002DF

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31), 0001:000002F4-000003D0, line/addr pairs = 15

   1101 000002F4   1106 0000030F   1110 0000033A   1106 0000034D
   1110 00000356   1114 00000379   1110 0000037F   1114 0000038A
   1110 0000038F   1116 00000393   1110 00000396   1116 0000039B
   1114 0000039E   1116 000003AB   1117 000003BA

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\device.tmh (SHA_256: 7547406A21F4F5AE0776C4A889285869DFE40A4DE5F0A823A119429AA4C981B2), 0001:000003D0-000003F8, line/addr pairs = 1

   1534 000003D0

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\device.tmh (SHA_256: 7547406A21F4F5AE0776C4A889285869DFE40A4DE5F0A823A119429AA4C981B2), 0001:000003F8-00000436, line/addr pairs = 1

   1616 000003F8

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Driver.c (SHA_256: 820747C06C8731204E89FFB497A5010B9D3C497CCC2F6DA8F32F1B84FFF5CE96), 0005:00000AF0-00000B7B, line/addr pairs = 6

    157 00000AF0    162 00000AFD    164 00000B32    166 00000B3C
    168 00000B6E    169 00000B70

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Driver.c (SHA_256: 820747C06C8731204E89FFB497A5010B9D3C497CCC2F6DA8F32F1B84FFF5CE96), 0005:00000B80-00000C17, line/addr pairs = 7

    176 00000B80    181 00000B89    183 00000BBE    185 00000BE0
    190 00000BEC    191 00000C0D    190 00000C12

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Driver.c (SHA_256: 820747C06C8731204E89FFB497A5010B9D3C497CCC2F6DA8F32F1B84FFF5CE96), 0006:00000000-0000031C, line/addr pairs = 41

     60 00000000     68 00000023     60 00000046     68 00000049
     60 00000050     68 00000053     70 00000071     72 00000091
     78 000000C8     81 000000CA     78 000000D2     85 000000D6
     78 000000E2     85 000000EB     78 000000FB     85 000000FE
     78 00000101     85 00000104     78 00000107     79 0000010B
     78 00000112     79 00000119     81 0000011D     85 00000128
     78 0000012F     81 00000133     85 00000138     93 0000014B
     98 0000017C    149 0000018C    106 000001C3    111 000001EA
    116 0000021B    119 0000022B    126 00000230    131 0000025A
    136 0000028B    139 0000029F    144 000002A4    146 000002CC
    149 000002F9

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31), 0001:00000440-00000548, line/addr pairs = 14

    366 00000440    374 00000446    378 00000456    383 00000467
    386 00000470    387 0000048A    388 000004EB    389 000004ED
    390 000004EF    386 000004F3    426 00000503    400 00000509
    402 00000523    426 00000542

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31), 0001:00000548-0000055E, line/addr pairs = 4

    591 00000548    594 0000054C    600 00000553    604 00000559

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31), 0001:00000560-00000588, line/addr pairs = 7

    631 00000560    634 00000569    636 00000571    637 00000573
    640 00000575    641 0000057B    645 00000582

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31), 0001:00000588-000005D7, line/addr pairs = 4

   1016 00000588   1021 000005A2   1023 000005B2   1024 000005C5

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31), 0001:000005D8-00000637, line/addr pairs = 6

   1042 000005D8   1047 000005F2   1051 00000602   1049 00000608
   1051 00000618   1052 00000625

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\driver.tmh (SHA_256: 3DDD1C7F9544CC6B7FCB55BB2507253AB7EC6283CE6454583F7CDE205C767049), 0001:00000640-0000066D, line/addr pairs = 10

   2601 00000640   2613 00000640   2619 00000645   2620 0000064B
   2621 00000653   2622 0000065B   2631 0000065E   2632 00000660
   2633 00000664   2650 00000668

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\driver.tmh (SHA_256: 3DDD1C7F9544CC6B7FCB55BB2507253AB7EC6283CE6454583F7CDE205C767049), 0005:00000C18-00000C8E, line/addr pairs = 13

   2784 00000C18   2789 00000C22   2797 00000C35   2812 00000C40
   2815 00000C45   2827 00000C53   2828 00000C5A   2802 00000C65
   2803 00000C6E   2805 00000C7B   2809 00000C83   2801 00000C87
   2812 00000C8C

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\driver.tmh (SHA_256: 3DDD1C7F9544CC6B7FCB55BB2507253AB7EC6283CE6454583F7CDE205C767049), 0005:00000C90-00000D1B, line/addr pairs = 11

   2683 00000C90   2694 00000C96   2710 00000CA6   2717 00000CB8
   2718 00000CBC   2729 00000CE5   2757 00000CEE   2732 00000CF4
   2735 00000CF9   2738 00000D00   2757 00000D15

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\driver.tmh (SHA_256: 3DDD1C7F9544CC6B7FCB55BB2507253AB7EC6283CE6454583F7CDE205C767049), 0005:00000D1C-00000E19, line/addr pairs = 17

   2059 00000D1C   2065 00000D25   2066 00000D3D   2069 00000D47
   2070 00000D5F   2078 00000D69   2079 00000D81   2087 00000D92
   2088 00000DA8   2094 00000DBA   2096 00000DC0   2097 00000DD1
   2100 00000DE5   2104 00000DE7   2105 00000DF8   2108 00000E09
   2111 00000E13

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\driver.tmh (SHA_256: 3DDD1C7F9544CC6B7FCB55BB2507253AB7EC6283CE6454583F7CDE205C767049), 0005:00000E20-00001098, line/addr pairs = 57

   2285 00000E20   2295 00000E3C   2297 00000E4D   2443 00000E8C
   2566 00000E99   2448 00000EA3   2465 00000EB0   2469 00000ED0
   2472 00000ED9   2482 00000EDE   2487 00000EE4   2488 00000EE7
   2490 00000EEE   2494 00000EF3   2495 00000EF7   2497 00000EFB
   2499 00000F09   2505 00000F32   2506 00000F36   2509 00000F3D
   2515 00000F66   2516 00000F6B   2517 00000F72   2539 00000F79
   2297 00000F7E   2566 00000F95   2312 00000F9F   2315 00000FAC
   2320 00000FB0   2322 00000FBB   2566 00000FC0   2334 00000FCA
   2337 00000FDA   2342 00000FDD   2344 00000FDF   2347 00000FE2
   2355 00000FED   2359 00000FF2   2365 00000FFF   2366 00001002
   2367 00001006   2369 00001009   2371 0000100E   2373 0000101F
   2382 0000102C   2384 00001036   2385 0000103D   2387 0000104C
   2388 0000104F   2403 00001052   2407 0000105C   2409 00001060
   2410 00001062   2412 00001067   2413 0000106D   2414 00001070
   2567 00001078

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31), 0001:00000670-000006AA, line/addr pairs = 3

    993 00000670    998 00000683    999 00000698

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Filter.c (SHA_256: FF3DE82F7AB50DDADA174F0C1DF352CB38C8D376F215ECECA598725D00B1243C), 0001:000006B0-0000099D, line/addr pairs = 28

    125 000006B0    129 000006D5    132 00000712    133 00000737
    132 00000741    133 00000744    136 00000758    138 00000763
    139 00000766    148 000007AF    153 000007E0    157 000007E9
    159 00000800    165 00000829    167 0000082F    169 0000083A
    173 00000865    176 00000867    183 0000088F    185 0000089C
    191 000008CA    193 000008D0    195 000008DB    200 00000906
    203 00000908    212 00000933    214 00000955    215 00000980

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Filter.c (SHA_256: FF3DE82F7AB50DDADA174F0C1DF352CB38C8D376F215ECECA598725D00B1243C), 0001:000009A0-00000BFB, line/addr pairs = 22

     56 000009A0     59 000009C6     62 000009FE     63 00000A23
     62 00000A2D     63 00000A30     66 00000A44     68 00000A4F
     74 00000A7D     76 00000A88     78 00000A8C     84 00000ADD
     86 00000AEB     74 00000AF4     88 00000AFD     94 00000B32
    100 00000B3A    102 00000B47    106 00000B71    109 00000B90
    111 00000BB2    112 00000BDC

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\filter.tmh (SHA_256: 5C8D49EEA298866859337904F0D9C596AF2293ECA16EA8C12093CFEE45D04376), 0001:000003F8-00000436, line/addr pairs = 1

   1444 000003F8

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\filter.tmh (SHA_256: 5C8D49EEA298866859337904F0D9C596AF2293ECA16EA8C12093CFEE45D04376), 0001:00000BFC-00000C63, line/addr pairs = 1

   1608 00000BFC

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\filter.tmh (SHA_256: 5C8D49EEA298866859337904F0D9C596AF2293ECA16EA8C12093CFEE45D04376), 0001:00000C64-00000CB2, line/addr pairs = 1

   1690 00000C64

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Queue.c (SHA_256: DFC50382C471C97DE15C5852335889BE1033C2490560FF26A7868587052231FE), 0001:00000CC0-0000118A, line/addr pairs = 39

    104 00000CC0    113 00000CE1    104 00000CE8    113 00000CEE
    114 00000D05    113 00000D0C    114 00000D0F    115 00000D2D
    114 00000D37    115 00000D3A    120 00000D4E    122 00000D62
    124 00000D6D    172 00000D84    174 00000D91    180 00000DC5
    182 00000DE3    188 00000E0B    194 00000E71    196 00000E79
    197 00000E99    244 00000EC4    130 00000EDC    134 00000F11
    136 00000F2F    142 00000F57    148 00000FBD    150 00000FC5
    151 00000FE5    159 00001010    220 00001015    227 00001033
    222 00001044    227 00001059    233 000010B0    235 000010B8
    236 000010D8    241 00001111    244 00001147

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Queue.c (SHA_256: DFC50382C471C97DE15C5852335889BE1033C2490560FF26A7868587052231FE), 0005:00001098-000011A3, line/addr pairs = 19

     55 00001098     62 000010A1     55 000010A3     62 000010A6
     70 000010B4     62 000010BB     70 000010C3     72 000010C8
     62 000010DC     72 000010E4     62 000010E7     72 000010EC
     62 000010EF     72 00001102     79 00001121     84 0000115D
     86 00001193     89 00001197     90 0000119A

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\queue.tmh (SHA_256: 5B1645F29801E2EC4D37E0074C7DF3167361BDCE323DCF14A1201B7EEB4BBD27), 0001:0000118C-000011CA, line/addr pairs = 1

   1170 0000118C

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.c (SHA_256: C70CB8AEA45844B9024D38AFCD4E6AD08CB59B2B88CA6712C2835C5C97FB09F2), 0005:000011A4-00001704, line/addr pairs = 51

     63 000011A4     71 000011CD     72 000011FD     74 00001260
     84 00001298     86 000012BD     91 000012DC     86 000012E3
     91 000012E5     93 00001300     98 00001305    101 0000130C
    108 00001336    114 00001384    116 00001386    117 0000138B
    122 000013B8    214 000013CD    129 000013FB    134 0000141E
    139 00001449    144 00001481    145 00001495    148 0000149A
    154 000014C8    155 000014E3    163 000014E8    168 00001513
    173 0000154A    174 00001565    177 0000156A    188 0000157E
    182 00001583    188 0000158E    177 0000159F    188 000015A3
    177 000015A6    188 000015BB    195 000015DA    200 00001611
    201 00001628    208 0000162D    210 0000164D    214 00001659
    216 00001663    219 0000167E    225 0000168C    226 000016A7
    229 000016B0    231 000016DD    232 000016DF

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.c (SHA_256: C70CB8AEA45844B9024D38AFCD4E6AD08CB59B2B88CA6712C2835C5C97FB09F2), 0005:00001704-00001774, line/addr pairs = 6

    242 00001704    247 00001708    252 0000173D    254 00001749
    255 00001764    257 0000176F

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.c (SHA_256: C70CB8AEA45844B9024D38AFCD4E6AD08CB59B2B88CA6712C2835C5C97FB09F2), 0001:000011D0-00001457, line/addr pairs = 21

    550 000011D0    552 000011F7    550 000011FE    552 00001201
    553 00001218    552 0000121F    553 00001222    555 0000123D
    553 0000124A    555 0000124D    557 00001282    559 000012C3
    565 000012F1    570 0000132D    571 0000136A    574 0000136C
    579 0000139A    581 000013BC    588 000013E4    590 00001402
    591 00001430

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.c (SHA_256: C70CB8AEA45844B9024D38AFCD4E6AD08CB59B2B88CA6712C2835C5C97FB09F2), 0001:00001460-00001C69, line/addr pairs = 86

    269 00001460    271 00001483    274 00001492    275 00001496
    276 0000149A    280 0000149E    282 000014A2    289 000014DD
    528 000014FF    371 0000153B    378 0000156E    391 00001581
    393 000015A6    395 000015D2    401 000015DB    402 00001600
    404 00001604    418 00001636    414 00001641    418 00001643
    414 00001647    418 0000164B    414 00001652    415 00001666
    414 00001668    415 0000166F    418 00001677    415 0000167E
    414 00001682    415 00001685    416 00001696    418 0000169A
    424 000016B1    430 000016DC    380 000016E1    388 0000170C
    295 00001711    302 00001744    315 00001757    317 0000177C
    319 000017A8    537 000017AD    325 000017B7    326 000017DC
    328 000017E4    342 00001814    338 0000181F    342 00001821
    338 00001825    342 00001829    338 00001830    339 00001849
    342 00001853    339 0000185A    340 0000186F    342 00001873
    348 00001886    537 000018A5    304 0000193F    312 0000196A
    447 0000196F    454 000019A4    467 000019B6    469 000019DB
    471 00001A07    477 00001A10    479 00001A35    477 00001A40
    479 00001A43    486 00001A6B    498 00001A81    500 00001A88
    498 00001A8C    500 00001A99    502 00001AB8    511 00001AEF
    513 00001AFA    514 00001B10    517 00001B1E    488 00001B47
    494 00001B7F    523 00001B93    456 00001B98    537 00001BB7
    539 00001C1D    540 00001C48

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh (SHA_256: 4F23B4F334EE40898C8C08DE335AC01B14746F1B58F320D5097808837878F14D), 0001:00001C6C-00001D02, line/addr pairs = 1

   1970 00001C6C

  C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh (SHA_256: 4F23B4F334EE40898C8C08DE335AC01B14746F1B58F320D5097808837878F14D), 0001:00001D04-00001D42, line/addr pairs = 1

   2052 00001D04

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

  minkernel\crts\crtw32\misc\amd64\gshandler.c (SHA_256: BD218F84340BC13FEA540D3FAD15F98883F8B3535599903849B5B7E347665A44), 0001:00001D44-00001D62, line/addr pairs = 4

     77 00001D44     82 00001D48     91 00001D57     92 00001D5C

  minkernel\crts\crtw32\misc\amd64\gshandler.c (SHA_256: BD218F84340BC13FEA540D3FAD15F98883F8B3535599903849B5B7E347665A44), 0001:00001D64-00001DC4, line/addr pairs = 12

    126 00001D64    140 00001D68    148 00001D71    149 00001D78
    151 00001D7C    162 00001D8F    170 00001D96    173 00001D9D
    175 00001DAB    184 00001DB3    185 00001DB6    186 00001DBE

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

  minkernel\crts\crtw32\string\amd64\memcpy.asm (SHA_256: C35C66FAF897CBA6790B15E255A7174C330D39ADC3CB2D759449FD89C612E180), 0001:00002500-000027AA, line/addr pairs = 151

    144 00002500    148 00002500    154 00002503    155 00002507
    161 00002509    162 0000250D    163 0000250F    164 00002512
    165 00002517    166 0000251A    167 0000251F    175 00002520
    176 00002524    177 00002526    178 00002529    179 0000252F
    180 00002532    181 00002538    188 00002540    189 00002543
    190 00002545    191 00002548    197 0000254A    198 0000254E
    199 00002551    200 00002554    201 00002558    202 0000255A
    209 00002560    210 00002563    211 00002568    212 0000256B
    213 0000256E    214 00002571    215 00002573    224 00002580
    225 00002584    226 00002587    227 00002589    228 0000258C
    234 00002592    235 00002596    236 0000259A    237 0000259D
    238 0000259F    239 000025A3    240 000025A7    241 000025AA
    242 000025AD    243 000025B1    244 000025B4    251 000025B7
    252 000025BA    253 000025BE    254 000025C0    255 000025C7
    256 000025CD    257 000025D1    260 00002600    261 00002604
    262 00002609    263 0000260E    264 00002613    265 00002617
    266 0000261B    267 0000261E    268 00002622    269 00002626
    270 0000262A    271 0000262D    278 0000262F    279 00002632
    280 00002636    283 00002640    284 00002644    285 00002648
    286 0000264C    287 0000264F    288 00002651    289 00002655
    290 00002657    291 0000265C    292 00002661    293 00002665
    294 00002669    304 00002680    305 00002683    306 00002687
    307 0000268B    308 00002690    311 000026C0    312 000026C4
    313 000026C9    314 000026CE    315 000026D3    316 000026D7
    317 000026DB    318 000026E0    319 000026E3    320 000026E7
    321 000026EB    322 000026EF    323 000026F2    324 000026F4
    325 000026F7    333 00002700    339 00002703    340 00002708
    341 0000270C    342 00002710    343 00002713    344 00002715
    345 00002718    346 0000271C    347 00002720    348 00002724
    349 00002727    350 0000272A    357 0000272D    358 00002730
    359 00002734    360 00002736    361 0000273A    364 00002740
    365 00002745    366 0000274A    367 0000274F    368 00002754
    369 00002757    370 0000275B    371 0000275E    372 00002762
    373 00002766    374 0000276A    375 0000276D    382 0000276F
    383 00002772    384 00002776    387 00002780    388 00002783
    389 00002788    390 0000278C    391 0000278F    392 00002791
    393 00002795    394 00002797    395 0000279A    396 0000279D
    397 000027A2    398 000027A6    399 000027A9

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

  minkernel\crts\crtw32\string\amd64\memset.asm (SHA_256: 758065F7780E7CAD6EFFF82D265156CF6EA7BC44873C02D30B29908C429F33C3), 0001:000027C0-000028C7, line/addr pairs = 66

    440 000027C0    443 000027C0    444 000027C3    445 000027C6
    446 000027D0    447 000027D4    448 000027D9    449 000027DC
    450 000027E0    463 000027E2    464 000027E9    465 000027EB
    466 000027F2    475 000027F8    476 000027FB    477 000027FE
    478 00002802    479 00002806    480 00002809    481 0000280D
    483 0000280F    484 00002814    485 00002819    486 0000281D
    489 00002821    490 00002824    491 00002828    492 0000282C
    493 0000282F    494 00002833    495 00002837    514 00002839
    515 0000283D    516 00002842    517 00002847    519 0000284A
    523 00002850    524 00002854    531 00002856    532 0000285B
    533 0000285F    534 00002862    535 00002865    536 00002869
    537 0000286E    538 00002871    540 00002876    544 00002880
    545 00002884    551 00002886    552 0000288B    553 0000288F
    554 00002891    555 00002894    556 00002897    557 0000289B
    558 0000289E    560 000028A2    568 000028B0    569 000028B3
    572 000028B5    573 000028B7    575 000028BC    576 000028C0
    578 000028C2    581 000028C6

  minkernel\crts\crtw32\string\amd64\memset.asm (SHA_256: 758065F7780E7CAD6EFFF82D265156CF6EA7BC44873C02D30B29908C429F33C3), 0001:00002900-00002943, line/addr pairs = 22

    592 00002900    598 00002900    609 00002901    610 00002908
    613 0000290A    614 0000290D    615 00002910    616 00002913
    617 00002917    618 0000291B    619 0000291F    620 00002923
    621 00002926    622 0000292A    623 0000292D    624 00002930
    625 00002935    626 00002937    629 0000293A    630 0000293B
    641 0000293C    642 00002941

  minkernel\crts\crtw32\string\amd64\memset.asm (SHA_256: 758065F7780E7CAD6EFFF82D265156CF6EA7BC44873C02D30B29908C429F33C3), 0001:00002980-000029A6, line/addr pairs = 17

    660 00002980    678 00002980    679 00002982    680 00002984
    681 00002985    682 00002986    684 00002987    688 0000298B
    690 00002990    692 00002995    701 0000299A    705 0000299E
    706 0000299F    707 000029A0    708 000029A1    709 000029A3
    711 000029A5

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

Mod::GetEnumLines failed

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

  minkernel\crts\crtw32\misc\amd64\guard_dispatch.asm (SHA_256: 151F30DC57AAB00F184F1E1300F545F1C9DEC176980C3548078A45FC7E0A37BC), 0001:00002470-00002475, line/addr pairs = 2

     59 00002470     64 00002470

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

  minkernel\crts\crtw32\misc\guard_check.c (SHA_256: 6B22C5F8312F22ADE46748A0AA4B715654DCCA2C6AADA8EA9FEFCA5FA3562E99), 0001:00001DD0-00001DD4, line/addr pairs = 2

     64 00001DD0     68 00001DD0

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

  minkernel\crts\crtw32\misc\amd64\guard_xfg_dispatch.asm (SHA_256: 0815D25F2170A854DA3BD66FADE52AC7F32CAA4DA68BDFD313C3146AC469BB65), 0001:00002490-00002496, line/addr pairs = 2

     60 00002490     65 00002490

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

  minkernel\crts\crtw32\misc\amd64\cpuinfo.c (SHA_256: 7C7D57EFC0B47F0F24A5394017546C2CD432675C465E87E640B28417F08FC361), 0001:00001DE0-00001E95, line/addr pairs = 16

     53 00001DE0    142 00001DE6    147 00001DEF    154 00001E0A
    156 00001E10    163 00001E12    167 00001E21    168 00001E2D
    176 00001E3E    179 00001E48    189 00001E4F    191 00001E7B
    199 00001E81    200 00001E85    202 00001E8C    203 00001E8E

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

  OneCore\Private\MinWin\Priv_Sdk\Inc\gs\crt_amdsecgs.asm (SHA_256: 0BD9A240AD1D933E6141DABDDF672C5C18A8698DC3A2FC01CECEDDFCAFC9EECF), 0001:000024A0-000024CE, line/addr pairs = 9

     54 000024B0     56 000024B0     57 000024B7     58 000024B9
     59 000024BD     60 000024C2     61 000024C4     67 000024C5
     70 000024C9

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

  minkernel\tools\gs_support\kmodefastfail\gs_support.c (SHA_256: ED352DE838E47375FA29E29D6C5FD8F693DC3AD5BB434C75CAA329B89473B7F8), 0006:0000031C-0000034A, line/addr pairs = 5

     40 0000031C     47 0000031C     52 00000337     53 00000341
     49 00000343

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

  minkernel\tools\gs_support\kmodefastfail\gs_report.c (SHA_256: 85C5A14BE0D3B1991A2EFBA3900237947E9CBB8F627B0F10DB788CDBBDE6A496), 0001:00001EA0-00001EA7, line/addr pairs = 2

     33 00001EA0     37 00001EA0

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

  minkernel\wdf\framework\kmdf\src\dynamic\stub\stub.cpp (SHA_256: CFBACD16EAF74383D747C563DF1127D31E30F81FBDE63561180340C85D602E6A), 0001:00001EA8-00001F00, line/addr pairs = 9

    420 00001EA8    430 00001EAC    434 00001EB5    436 00001EC7
    434 00001ECC    436 00001ED9    437 00001EDE    441 00001EE2
    443 00001EFA

  minkernel\wdf\framework\kmdf\src\dynamic\stub\stub.cpp (SHA_256: CFBACD16EAF74383D747C563DF1127D31E30F81FBDE63561180340C85D602E6A), 0001:00001F00-00001F30, line/addr pairs = 4

    164 00001F00    168 00001F04    173 00001F10    176 00001F2A

  minkernel\wdf\framework\kmdf\src\dynamic\stub\stub.cpp (SHA_256: CFBACD16EAF74383D747C563DF1127D31E30F81FBDE63561180340C85D602E6A), 0001:00001F30-00001F5C, line/addr pairs = 4

    242 00001F30    246 00001F40    248 00001F45    249 00001F50

  minkernel\wdf\framework\kmdf\src\dynamic\stub\stub.cpp (SHA_256: CFBACD16EAF74383D747C563DF1127D31E30F81FBDE63561180340C85D602E6A), 0001:00001F5C-000020AC, line/addr pairs = 27

    258 00001F5C    261 00001F75    275 00001F82    313 00001F8C
    315 00001F9A    320 00001FC1    325 00001FDA    333 00001FDE
    338 00001FE5    340 00002001    352 00002005    353 0000200C
    360 00002010    362 0000201D    363 00002021    371 00002041
    411 00002046    413 0000204B    414 0000204D    376 00002069
    380 00002076    385 0000207F    391 00002086    392 00002091
    393 00002093    402 0000209A    405 000020A8

  minkernel\wdf\framework\kmdf\src\dynamic\stub\stub.cpp (SHA_256: CFBACD16EAF74383D747C563DF1127D31E30F81FBDE63561180340C85D602E6A), 0001:000020B0-000020BF, line/addr pairs = 3

    210 000020B0    216 000020B4    217 000020B9

  minkernel\wdf\framework\kmdf\src\dynamic\stub\stub.cpp (SHA_256: CFBACD16EAF74383D747C563DF1127D31E30F81FBDE63561180340C85D602E6A), 0001:000020C0-000020EC, line/addr pairs = 5

    189 000020C0    195 000020C4    198 000020DC    201 000020E1
    202 000020E6

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

  minkernel\wdf\framework\kmdf\src\dynamic\stub\inittypes.cpp (SHA_256: CAD0F058188ABB6EA3CF38BCE9128EDF46847449B4CDE04D827D9B43B267BB30), 0001:000020EC-000021AD, line/addr pairs = 14

    112 000020EC    126 000020F6    128 00002109    171 0000212E
    138 00002135    143 0000213C    148 00002167    164 0000216C
    165 00002175    141 0000217E    149 00002185    152 0000219D
    170 0000219F    171 000021A1

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

  minkernel\wdf\framework\kmdf\src\dynamic\stub\classbind.cpp (SHA_256: F23F36158E615F31896F6EB540DA55FAA139E870170F4F391120A6BDCC6B5827), 0001:000021B0-0000232A, line/addr pairs = 20

     49 000021B0     53 000021C4     63 000021C6     65 000021DC
    140 000021FF     75 00002209     80 00002210     85 00002243
    109 0000224C    110 0000225C    114 00002277    115 0000227B
    140 000022A9    125 000022C1    128 000022D5     78 000022D9
    129 000022E3    134 0000230B     86 0000230D     89 00002325

  minkernel\wdf\framework\kmdf\src\dynamic\stub\classbind.cpp (SHA_256: F23F36158E615F31896F6EB540DA55FAA139E870170F4F391120A6BDCC6B5827), 0001:0000232C-0000233F, line/addr pairs = 3

    222 0000232C    223 0000232C    224 0000233D

  minkernel\wdf\framework\kmdf\src\dynamic\stub\classbind.cpp (SHA_256: F23F36158E615F31896F6EB540DA55FAA139E870170F4F391120A6BDCC6B5827), 0001:00002340-00002411, line/addr pairs = 13

    146 00002340    164 0000234F    175 00002370    185 00002374
    190 000023A1    200 000023A6    204 000023AB    205 000023B4
    209 000023CD    211 000023CF    183 000023E1    191 000023E8
    216 00002400

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

  minkernel\crts\crtw32\misc\amd64\dispatchcfg.asm (SHA_256: 9FE59E1CFA107166C1147701EECC9083CC1B2368C0BCF8A983AA4C1BA32DFD3F), 0001:000024E0-000024E6, line/addr pairs = 2

     65 000024E0     69 000024E0

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

Mod::GetEnumLines failed

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

Mod::GetEnumLines failed

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

Mod::GetEnumLines failed

** Module: "* Linker *" from ""

Mod::GetEnumLines failed


*** IL LINES

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

Mod::GetEnumILLines failed

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

Mod::GetEnumILLines failed

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

Mod::GetEnumILLines failed

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

Mod::GetEnumILLines failed

** Module: "* Linker *" from ""

Mod::GetEnumILLines failed


*** SOURCE FILES

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

     0 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
     1 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
     2 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\warning.h (SHA_256: 7AEC3700813495AE791996E0DD4845DC592D07D5F57B1EF480E08B63B4DFDFCB)
     3 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\suppress.h (SHA_256: C827CF61AE117FFD7B7CE07C543D7CFCEA30ED07673CE4EAFF4DC44456215688)
     4 C:\Users\appveyor\projects\bthps3\BthPS3PSM\driver.h (SHA_256: 53A28BADA034C193780B2E1C9D904EF2F3D5EED9AB077A81851BA94539CB0F4F)
     5 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h (SHA_256: BBA511C4393F870A17293244C329DDAFD91BB259434812502BB8D10A892054D7)
     6 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfresource.h (SHA_256: 3DC6E587B90360E8CD078884F28498CA4E0D1806AFBFEFF413A690A70A879518)
     7 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfglobals.h (SHA_256: 58DD0022F0A10AEA5648A56ECDF17833431CA251CD0A74D6CEF6096CE5C62F25)
     8 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
     9 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfmemory.h (SHA_256: E8F318E9D94464F7DD3639E083DB2697AFF93F002D7E9D0AA61F7A82C57733D4)
    10 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    11 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    12 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31)
    13 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    14 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings.h (SHA_256: 3B83B1CD3B4F9BF46009BFDCCF01D5C3A6FA6EED3F823D1EF497ED6D1B9BCE0E)
    15 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sal.h (SHA_256: A2B3EE38BC3B998D7162A38D1AA1C8D19EB3F72EEA64EB5EE68FB6497B65E7F1)
    16 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    17 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    18 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    19 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    20 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffuncenum.h (SHA_256: 5E3B8CACFF893D2AAA99ECE776D881FD2129E58DA0219C85996ACC654124FC63)
    21 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    22 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    23 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    24 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    25 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    26 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    27 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdf.h (SHA_256: 5B4AFDB7D7A8347BB48BA644E6BE12471ABE2B2503752AA0B120328E6CCB8000)
    28 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaEnabler.h (SHA_256: DCD9987E6FD5DB1F8926DA0E55453F6A8BC594D9DFEFF12BD5AE11CBB3CEDF5B)
    29 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h (SHA_256: AEA98EEE25226092782EF1337362BF8A1DF91CD7D758AF9C9CA9464315643624)
    30 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffileobject.h (SHA_256: 68E2DC75733DE75F7D698916D0EDF594E664006617011092CC3631DC0F9367D1)
    31 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfroletypes.h (SHA_256: A7F0FB482229F46E50A0875326CE601E7E382537E3FB44C2C5E4D539281B3F29)
    32 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h (SHA_256: AD0CB5C783BDF29281FA05287234A1A704BB65BDFBB91F97CC7720E1A981D597)
    33 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfchildlist.h (SHA_256: 070017480E61E0C56D682FC7D7545538D800A0C6BE293B9E22148FA2C59A11E5)
    34 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfhwaccess.h (SHA_256: 7B73B6B106F2B9F432B5D08FA535117EE63145CA3DD2EB621EA937A4A7912BC7)
    35 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\initguid.h (SHA_256: 422EBCF50B8E8AD2F21A06E7281540F759237EABE37E445605FC45CC45D88314)
    36 C:\Users\appveyor\projects\bthps3\BthPS3PSM\device.h (SHA_256: 4F47E46A7EFF14E13C77EDB5F3004E3B546F79A0B5C288BDEB064EF23A39FD9A)
    37 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstring.h (SHA_256: 313107C1656E0D3BB0D4C62CB73B7DFB0917F1C5CE655A976C0303D09637A8FA)
    38 C:\Users\appveyor\projects\bthps3\common\include\BthPS3.h (SHA_256: 239292F3BDF315D52CCAB046148E8501B00604BB0CA08A4D644127B60ABACF60)
    39 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaTransaction.h (SHA_256: A227E5A01245FA6CF0F8FFD6A07D522CADED238F3DEAF67FF843678E042ACE42)
    40 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    41 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftimer.h (SHA_256: 3077550EFCD5967261E9507F8C8CE98EAD63EE9335E10B995E17B8386E11B9BA)
    42 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcollection.h (SHA_256: C069DBD65402DD409746C2D0A243D9B3A646A2B9066284F6D18E07A93A8245B8)
    43 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffdo.h (SHA_256: 0C5A357EA22F50003E41E909599904A3FE0B86633325425B9CAF8A52B50C87F9)
    44 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfiotarget.h (SHA_256: BA3C0C8B69CA043AA53FE42820A51D55D736EEEB1815409D56A564A9F2E5A8FD)
    45 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    46 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfCommonBuffer.h (SHA_256: 52CD5BB72418DDDF7A68FDEB55034A7B0B2F7C9924B9715685E6EEFECCD956A5)
    47 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    48 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    49 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    50 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    51 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h (SHA_256: 6AD0AD3C8D8C5EA57AE9C570D8293B4A30C9F135551A497A133488D732ECC235)
    52 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfregistry.h (SHA_256: 1302A06A70DB8C6FA813408E5621E18BC9FEAB80EF7F3DF32B53AB41D5E4D786)
    53 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\devpkey.h (SHA_256: 132AD3EA096996FBBF79EA8B23C4ADB5B348D95A9D2D854BC076CC7FA6A091AB)
    54 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    55 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcore.h (SHA_256: C8E8C98D785E50B4BBA92F1F9304D1474B340EA71DD37F96B1D719909FECABDB)
    56 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
    57 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)
    58 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stddef.h (SHA_256: 772C65A788A64C89634A4A798251E2D3AEB4395962669E8DC0E1634D651F6D9A)
    59 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcontrol.h (SHA_256: 7C9212B8008FBAB8A19B422855DB29AF6930CE04BE7760D0ED24633C9BA14E35)
    60 C:\Users\appveyor\projects\bthps3\BthPS3PSM\queue.h (SHA_256: 0D835CF43793FF71408C39C5C006284CE2CD8A822E64779157C166ACF686A994)
    61 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stdarg.h (SHA_256: D8E5D01F5B72C12286A3E8A1B7EC1DF0AF52C2991F87BDD2B9FAE71FD211E103)
    62 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdmsec.h (SHA_256: 126023E670B4ED013E1109ACA2AE0354F15D411981CBDADFA1F4B2343D6DF718)
    63 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\wmistr.h (SHA_256: A27CAE7659CC3081228D1E4987E4DED9E2D41411B443B09541F0677A6ED5CC9E)
    64 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h (SHA_256: 6ACAF563EF9DAA496901E3B718E7FB9027CA10107B4D2A8D085D3377F32C6234)
    65 C:\Users\appveyor\projects\bthps3\BthPS3PSM\trace.h (SHA_256: 2BA803C43FE5FA7B0CCF97F70438624B9511837587C92BC281EB855192F6BC85)
    66 C:\Users\appveyor\projects\bthps3\BthPS3PSM\UsbUtil.h (SHA_256: C9A8961C5F0B0BE50EE3728C4626D425EC576977358F2A086C5178268839A562)
    67 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h (SHA_256: C415B5F5C19FCDCD2AAE14D380F57561B7ED17BA2B9A3B7317A5BE01437D8405)
    68 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstatus.h (SHA_256: 99AA63969F9E7981A9FCC922559B5F317778E35CD780F678AF04101A7B8BD806)
    69 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.h (SHA_256: 94C7880A773B8A6162784B9587452A8FF716019478A2D102ED9E9B76CE5698ED)
    70 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfassert.h (SHA_256: 1B676A9947C665C1DC88DFE26D7B32F1088DD572B8E3A9204CFDABA4504D6A39)
    71 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfverifier.h (SHA_256: B82AD733CBE1C8381560E6C86DAEABE7B2C81860D25B46E6F88E390829EE69D0)
    72 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h (SHA_256: 1331B7F1476699AE071F2C1708AE30973B0D977F5832C1A610D9370DFD66A58A)
    73 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbspec.h (SHA_256: 28FF618EE96AE988E5A559C09BB81EB77210398F60B01F9FD38D9906E18B7B89)
    74 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdriver.h (SHA_256: B575DC21A09593F84CF425520F20F3C16D891439A8F736D0265AF5E8238C7BD4)
    75 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\device.tmh (SHA_256: 7547406A21F4F5AE0776C4A889285869DFE40A4DE5F0A823A119429AA4C981B2)
    76 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntrace.h (SHA_256: 40D80842618B587A45CA4E15B50E8DF718917727C2F154424E28E81E84300B5D)
    77 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfQueryInterface.h (SHA_256: 34D682CD7F5B92619F05614586C00A56EB5D5F930BAEC8E45693BF534CAFF35B)
    78 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h (SHA_256: 838D81A2194373FB8C67346151472ACC596942C8F440E2BDAEB153441D848469)
    79 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
    80 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
    81 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Filter.h (SHA_256: D021C8F5A5A9A594BA43D356DCDBDF110457DA68801F7AB0D873F09629360EFD)
    82 C:\Users\appveyor\projects\bthps3\BthPS3PSM\L2CAP.h (SHA_256: D3666DC747C835873DC5135F76F8E76CE6ED4A82D79FFFBE56718CE9D7866738)
    83 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfworkitem.h (SHA_256: D44B7221157519DA5786AD51DB73641F1D092BEAB6FC299B98B34AE2B07C286D)
    84 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfWMI.h (SHA_256: CA384FED557579F9AA36F81FAEAD8EF70641681919993BF046F1E87ED70CAC6E)
    85 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfbugcodes.h (SHA_256: 58BABB4D84E768BFCEF053F6026B5C04459E5997A2A0406BAD9C3252D66AD655)
    86 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpdo.h (SHA_256: BC5BC7339E32ECE3284786923F683300D33FDB5646BDB0200A092A6F53B88CB2)
    87 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdpc.h (SHA_256: 3FB15CD71F23B01A7E570EC33D56B08849739D10DAA44D607668D62A21E1EAEC)
    88 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbdi.h (SHA_256: 25FC4B154E4D115401D62BC0D2548A0AF0B46BA8B1794D9F938276760886A5E7)
    89 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
    90 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Device.c (SHA_256: 17DCCBC8F5D33680671431951FA5BDF6F9B66CBD041B7134B206243DAF66C890)
    91 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbioctl.h (SHA_256: C6A077BE7981F49BB506A496AD3DEFC2048FDAAA5574965847297E3C6B2998FB)
    92 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb200.h (SHA_256: F8A660EA15203A8B0C3B26CF2151AD77DB56A507A70BE1BF961F9728C03FD790)
    93 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpool.h (SHA_256: A6EC2A2019F63BD79BA5C093B06A78362312873727CCDB6E330C4ADFD55E2A74)
    94 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbiodef.h (SHA_256: 90F43B571BB325799AB1A95709DB908B8EDC01286BF628466A3D0DBCF9F171A4)
    95 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h (SHA_256: 24D80061477F4E7676183F160094090C52F2F0018DDCFA14554BA131BD783006)
    96 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
    97 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfsync.h (SHA_256: 859DF8680ABD3A76CD6FE2E497F2A5BBA2DDF060D666CA145A08C9A9F589F23D)

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"

     0 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
     1 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
     2 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\warning.h (SHA_256: 7AEC3700813495AE791996E0DD4845DC592D07D5F57B1EF480E08B63B4DFDFCB)
     3 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\suppress.h (SHA_256: C827CF61AE117FFD7B7CE07C543D7CFCEA30ED07673CE4EAFF4DC44456215688)
     4 C:\Users\appveyor\projects\bthps3\BthPS3PSM\driver.h (SHA_256: 53A28BADA034C193780B2E1C9D904EF2F3D5EED9AB077A81851BA94539CB0F4F)
     5 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h (SHA_256: BBA511C4393F870A17293244C329DDAFD91BB259434812502BB8D10A892054D7)
     6 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfresource.h (SHA_256: 3DC6E587B90360E8CD078884F28498CA4E0D1806AFBFEFF413A690A70A879518)
     7 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfglobals.h (SHA_256: 58DD0022F0A10AEA5648A56ECDF17833431CA251CD0A74D6CEF6096CE5C62F25)
     8 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
     9 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfmemory.h (SHA_256: E8F318E9D94464F7DD3639E083DB2697AFF93F002D7E9D0AA61F7A82C57733D4)
    10 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    11 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    12 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    13 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings.h (SHA_256: 3B83B1CD3B4F9BF46009BFDCCF01D5C3A6FA6EED3F823D1EF497ED6D1B9BCE0E)
    14 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sal.h (SHA_256: A2B3EE38BC3B998D7162A38D1AA1C8D19EB3F72EEA64EB5EE68FB6497B65E7F1)
    15 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    16 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    17 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    18 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    19 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffuncenum.h (SHA_256: 5E3B8CACFF893D2AAA99ECE776D881FD2129E58DA0219C85996ACC654124FC63)
    20 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    21 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    22 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    23 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    24 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    25 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    26 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdf.h (SHA_256: 5B4AFDB7D7A8347BB48BA644E6BE12471ABE2B2503752AA0B120328E6CCB8000)
    27 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaEnabler.h (SHA_256: DCD9987E6FD5DB1F8926DA0E55453F6A8BC594D9DFEFF12BD5AE11CBB3CEDF5B)
    28 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h (SHA_256: AEA98EEE25226092782EF1337362BF8A1DF91CD7D758AF9C9CA9464315643624)
    29 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffileobject.h (SHA_256: 68E2DC75733DE75F7D698916D0EDF594E664006617011092CC3631DC0F9367D1)
    30 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfroletypes.h (SHA_256: A7F0FB482229F46E50A0875326CE601E7E382537E3FB44C2C5E4D539281B3F29)
    31 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h (SHA_256: AD0CB5C783BDF29281FA05287234A1A704BB65BDFBB91F97CC7720E1A981D597)
    32 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfchildlist.h (SHA_256: 070017480E61E0C56D682FC7D7545538D800A0C6BE293B9E22148FA2C59A11E5)
    33 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfhwaccess.h (SHA_256: 7B73B6B106F2B9F432B5D08FA535117EE63145CA3DD2EB621EA937A4A7912BC7)
    34 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\initguid.h (SHA_256: 422EBCF50B8E8AD2F21A06E7281540F759237EABE37E445605FC45CC45D88314)
    35 C:\Users\appveyor\projects\bthps3\BthPS3PSM\device.h (SHA_256: 4F47E46A7EFF14E13C77EDB5F3004E3B546F79A0B5C288BDEB064EF23A39FD9A)
    36 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstring.h (SHA_256: 313107C1656E0D3BB0D4C62CB73B7DFB0917F1C5CE655A976C0303D09637A8FA)
    37 C:\Users\appveyor\projects\bthps3\common\include\BthPS3.h (SHA_256: 239292F3BDF315D52CCAB046148E8501B00604BB0CA08A4D644127B60ABACF60)
    38 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaTransaction.h (SHA_256: A227E5A01245FA6CF0F8FFD6A07D522CADED238F3DEAF67FF843678E042ACE42)
    39 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    40 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftimer.h (SHA_256: 3077550EFCD5967261E9507F8C8CE98EAD63EE9335E10B995E17B8386E11B9BA)
    41 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcollection.h (SHA_256: C069DBD65402DD409746C2D0A243D9B3A646A2B9066284F6D18E07A93A8245B8)
    42 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffdo.h (SHA_256: 0C5A357EA22F50003E41E909599904A3FE0B86633325425B9CAF8A52B50C87F9)
    43 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfiotarget.h (SHA_256: BA3C0C8B69CA043AA53FE42820A51D55D736EEEB1815409D56A564A9F2E5A8FD)
    44 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    45 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfCommonBuffer.h (SHA_256: 52CD5BB72418DDDF7A68FDEB55034A7B0B2F7C9924B9715685E6EEFECCD956A5)
    46 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    47 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    48 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    49 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    50 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h (SHA_256: 6AD0AD3C8D8C5EA57AE9C570D8293B4A30C9F135551A497A133488D732ECC235)
    51 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfregistry.h (SHA_256: 1302A06A70DB8C6FA813408E5621E18BC9FEAB80EF7F3DF32B53AB41D5E4D786)
    52 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    53 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcore.h (SHA_256: C8E8C98D785E50B4BBA92F1F9304D1474B340EA71DD37F96B1D719909FECABDB)
    54 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
    55 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)
    56 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stddef.h (SHA_256: 772C65A788A64C89634A4A798251E2D3AEB4395962669E8DC0E1634D651F6D9A)
    57 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31)
    58 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcontrol.h (SHA_256: 7C9212B8008FBAB8A19B422855DB29AF6930CE04BE7760D0ED24633C9BA14E35)
    59 C:\Users\appveyor\projects\bthps3\BthPS3PSM\queue.h (SHA_256: 0D835CF43793FF71408C39C5C006284CE2CD8A822E64779157C166ACF686A994)
    60 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stdarg.h (SHA_256: D8E5D01F5B72C12286A3E8A1B7EC1DF0AF52C2991F87BDD2B9FAE71FD211E103)
    61 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdmsec.h (SHA_256: 126023E670B4ED013E1109ACA2AE0354F15D411981CBDADFA1F4B2343D6DF718)
    62 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\wmistr.h (SHA_256: A27CAE7659CC3081228D1E4987E4DED9E2D41411B443B09541F0677A6ED5CC9E)
    63 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h (SHA_256: 6ACAF563EF9DAA496901E3B718E7FB9027CA10107B4D2A8D085D3377F32C6234)
    64 C:\Users\appveyor\projects\bthps3\BthPS3PSM\trace.h (SHA_256: 2BA803C43FE5FA7B0CCF97F70438624B9511837587C92BC281EB855192F6BC85)
    65 C:\Users\appveyor\projects\bthps3\BthPS3PSM\UsbUtil.h (SHA_256: C9A8961C5F0B0BE50EE3728C4626D425EC576977358F2A086C5178268839A562)
    66 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h (SHA_256: C415B5F5C19FCDCD2AAE14D380F57561B7ED17BA2B9A3B7317A5BE01437D8405)
    67 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstatus.h (SHA_256: 99AA63969F9E7981A9FCC922559B5F317778E35CD780F678AF04101A7B8BD806)
    68 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.h (SHA_256: 94C7880A773B8A6162784B9587452A8FF716019478A2D102ED9E9B76CE5698ED)
    69 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfassert.h (SHA_256: 1B676A9947C665C1DC88DFE26D7B32F1088DD572B8E3A9204CFDABA4504D6A39)
    70 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfverifier.h (SHA_256: B82AD733CBE1C8381560E6C86DAEABE7B2C81860D25B46E6F88E390829EE69D0)
    71 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h (SHA_256: 1331B7F1476699AE071F2C1708AE30973B0D977F5832C1A610D9370DFD66A58A)
    72 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbspec.h (SHA_256: 28FF618EE96AE988E5A559C09BB81EB77210398F60B01F9FD38D9906E18B7B89)
    73 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdriver.h (SHA_256: B575DC21A09593F84CF425520F20F3C16D891439A8F736D0265AF5E8238C7BD4)
    74 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\driver.tmh (SHA_256: 3DDD1C7F9544CC6B7FCB55BB2507253AB7EC6283CE6454583F7CDE205C767049)
    75 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntrace.h (SHA_256: 40D80842618B587A45CA4E15B50E8DF718917727C2F154424E28E81E84300B5D)
    76 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfQueryInterface.h (SHA_256: 34D682CD7F5B92619F05614586C00A56EB5D5F930BAEC8E45693BF534CAFF35B)
    77 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h (SHA_256: 838D81A2194373FB8C67346151472ACC596942C8F440E2BDAEB153441D848469)
    78 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
    79 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
    80 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Filter.h (SHA_256: D021C8F5A5A9A594BA43D356DCDBDF110457DA68801F7AB0D873F09629360EFD)
    81 C:\Users\appveyor\projects\bthps3\BthPS3PSM\L2CAP.h (SHA_256: D3666DC747C835873DC5135F76F8E76CE6ED4A82D79FFFBE56718CE9D7866738)
    82 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfworkitem.h (SHA_256: D44B7221157519DA5786AD51DB73641F1D092BEAB6FC299B98B34AE2B07C286D)
    83 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfWMI.h (SHA_256: CA384FED557579F9AA36F81FAEAD8EF70641681919993BF046F1E87ED70CAC6E)
    84 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfbugcodes.h (SHA_256: 58BABB4D84E768BFCEF053F6026B5C04459E5997A2A0406BAD9C3252D66AD655)
    85 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpdo.h (SHA_256: BC5BC7339E32ECE3284786923F683300D33FDB5646BDB0200A092A6F53B88CB2)
    86 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdpc.h (SHA_256: 3FB15CD71F23B01A7E570EC33D56B08849739D10DAA44D607668D62A21E1EAEC)
    87 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
    88 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Driver.c (SHA_256: 820747C06C8731204E89FFB497A5010B9D3C497CCC2F6DA8F32F1B84FFF5CE96)
    89 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpool.h (SHA_256: A6EC2A2019F63BD79BA5C093B06A78362312873727CCDB6E330C4ADFD55E2A74)
    90 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h (SHA_256: 24D80061477F4E7676183F160094090C52F2F0018DDCFA14554BA131BD783006)
    91 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
    92 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfsync.h (SHA_256: 859DF8680ABD3A76CD6FE2E497F2A5BBA2DDF060D666CA145A08C9A9F589F23D)

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"

     0 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
     1 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
     2 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\warning.h (SHA_256: 7AEC3700813495AE791996E0DD4845DC592D07D5F57B1EF480E08B63B4DFDFCB)
     3 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\suppress.h (SHA_256: C827CF61AE117FFD7B7CE07C543D7CFCEA30ED07673CE4EAFF4DC44456215688)
     4 C:\Users\appveyor\projects\bthps3\BthPS3PSM\driver.h (SHA_256: 53A28BADA034C193780B2E1C9D904EF2F3D5EED9AB077A81851BA94539CB0F4F)
     5 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h (SHA_256: BBA511C4393F870A17293244C329DDAFD91BB259434812502BB8D10A892054D7)
     6 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfresource.h (SHA_256: 3DC6E587B90360E8CD078884F28498CA4E0D1806AFBFEFF413A690A70A879518)
     7 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfglobals.h (SHA_256: 58DD0022F0A10AEA5648A56ECDF17833431CA251CD0A74D6CEF6096CE5C62F25)
     8 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
     9 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfmemory.h (SHA_256: E8F318E9D94464F7DD3639E083DB2697AFF93F002D7E9D0AA61F7A82C57733D4)
    10 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    11 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    12 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    13 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings.h (SHA_256: 3B83B1CD3B4F9BF46009BFDCCF01D5C3A6FA6EED3F823D1EF497ED6D1B9BCE0E)
    14 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sal.h (SHA_256: A2B3EE38BC3B998D7162A38D1AA1C8D19EB3F72EEA64EB5EE68FB6497B65E7F1)
    15 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    16 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    17 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    18 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    19 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffuncenum.h (SHA_256: 5E3B8CACFF893D2AAA99ECE776D881FD2129E58DA0219C85996ACC654124FC63)
    20 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    21 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    22 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    23 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    24 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    25 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    26 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdf.h (SHA_256: 5B4AFDB7D7A8347BB48BA644E6BE12471ABE2B2503752AA0B120328E6CCB8000)
    27 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaEnabler.h (SHA_256: DCD9987E6FD5DB1F8926DA0E55453F6A8BC594D9DFEFF12BD5AE11CBB3CEDF5B)
    28 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h (SHA_256: AEA98EEE25226092782EF1337362BF8A1DF91CD7D758AF9C9CA9464315643624)
    29 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffileobject.h (SHA_256: 68E2DC75733DE75F7D698916D0EDF594E664006617011092CC3631DC0F9367D1)
    30 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfroletypes.h (SHA_256: A7F0FB482229F46E50A0875326CE601E7E382537E3FB44C2C5E4D539281B3F29)
    31 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\bthdef.h (SHA_256: 81EF41415EB3157BD1B0FA56BF8612B00B44903F4DB2A4C5A6A8BF71BD34EC29)
    32 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\bthsdpdef.h (SHA_256: 1BD5E20B78B3C34CE7AC1FD89AF772AD36EEB6FBFE28E73F228F823BBA9B129B)
    33 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h (SHA_256: AD0CB5C783BDF29281FA05287234A1A704BB65BDFBB91F97CC7720E1A981D597)
    34 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfchildlist.h (SHA_256: 070017480E61E0C56D682FC7D7545538D800A0C6BE293B9E22148FA2C59A11E5)
    35 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfhwaccess.h (SHA_256: 7B73B6B106F2B9F432B5D08FA535117EE63145CA3DD2EB621EA937A4A7912BC7)
    36 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\initguid.h (SHA_256: 422EBCF50B8E8AD2F21A06E7281540F759237EABE37E445605FC45CC45D88314)
    37 C:\Users\appveyor\projects\bthps3\BthPS3PSM\device.h (SHA_256: 4F47E46A7EFF14E13C77EDB5F3004E3B546F79A0B5C288BDEB064EF23A39FD9A)
    38 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstring.h (SHA_256: 313107C1656E0D3BB0D4C62CB73B7DFB0917F1C5CE655A976C0303D09637A8FA)
    39 C:\Users\appveyor\projects\bthps3\common\include\BthPS3.h (SHA_256: 239292F3BDF315D52CCAB046148E8501B00604BB0CA08A4D644127B60ABACF60)
    40 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaTransaction.h (SHA_256: A227E5A01245FA6CF0F8FFD6A07D522CADED238F3DEAF67FF843678E042ACE42)
    41 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    42 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftimer.h (SHA_256: 3077550EFCD5967261E9507F8C8CE98EAD63EE9335E10B995E17B8386E11B9BA)
    43 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcollection.h (SHA_256: C069DBD65402DD409746C2D0A243D9B3A646A2B9066284F6D18E07A93A8245B8)
    44 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffdo.h (SHA_256: 0C5A357EA22F50003E41E909599904A3FE0B86633325425B9CAF8A52B50C87F9)
    45 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfiotarget.h (SHA_256: BA3C0C8B69CA043AA53FE42820A51D55D736EEEB1815409D56A564A9F2E5A8FD)
    46 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    47 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfCommonBuffer.h (SHA_256: 52CD5BB72418DDDF7A68FDEB55034A7B0B2F7C9924B9715685E6EEFECCD956A5)
    48 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    49 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    50 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    51 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    52 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h (SHA_256: 6AD0AD3C8D8C5EA57AE9C570D8293B4A30C9F135551A497A133488D732ECC235)
    53 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfregistry.h (SHA_256: 1302A06A70DB8C6FA813408E5621E18BC9FEAB80EF7F3DF32B53AB41D5E4D786)
    54 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    55 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31)
    56 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcore.h (SHA_256: C8E8C98D785E50B4BBA92F1F9304D1474B340EA71DD37F96B1D719909FECABDB)
    57 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
    58 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)
    59 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stddef.h (SHA_256: 772C65A788A64C89634A4A798251E2D3AEB4395962669E8DC0E1634D651F6D9A)
    60 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcontrol.h (SHA_256: 7C9212B8008FBAB8A19B422855DB29AF6930CE04BE7760D0ED24633C9BA14E35)
    61 C:\Users\appveyor\projects\bthps3\BthPS3PSM\queue.h (SHA_256: 0D835CF43793FF71408C39C5C006284CE2CD8A822E64779157C166ACF686A994)
    62 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stdarg.h (SHA_256: D8E5D01F5B72C12286A3E8A1B7EC1DF0AF52C2991F87BDD2B9FAE71FD211E103)
    63 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdmsec.h (SHA_256: 126023E670B4ED013E1109ACA2AE0354F15D411981CBDADFA1F4B2343D6DF718)
    64 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\wmistr.h (SHA_256: A27CAE7659CC3081228D1E4987E4DED9E2D41411B443B09541F0677A6ED5CC9E)
    65 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h (SHA_256: 6ACAF563EF9DAA496901E3B718E7FB9027CA10107B4D2A8D085D3377F32C6234)
    66 C:\Users\appveyor\projects\bthps3\BthPS3PSM\trace.h (SHA_256: 2BA803C43FE5FA7B0CCF97F70438624B9511837587C92BC281EB855192F6BC85)
    67 C:\Users\appveyor\projects\bthps3\BthPS3PSM\UsbUtil.h (SHA_256: C9A8961C5F0B0BE50EE3728C4626D425EC576977358F2A086C5178268839A562)
    68 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h (SHA_256: C415B5F5C19FCDCD2AAE14D380F57561B7ED17BA2B9A3B7317A5BE01437D8405)
    69 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstatus.h (SHA_256: 99AA63969F9E7981A9FCC922559B5F317778E35CD780F678AF04101A7B8BD806)
    70 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.h (SHA_256: 94C7880A773B8A6162784B9587452A8FF716019478A2D102ED9E9B76CE5698ED)
    71 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfassert.h (SHA_256: 1B676A9947C665C1DC88DFE26D7B32F1088DD572B8E3A9204CFDABA4504D6A39)
    72 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfverifier.h (SHA_256: B82AD733CBE1C8381560E6C86DAEABE7B2C81860D25B46E6F88E390829EE69D0)
    73 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h (SHA_256: 1331B7F1476699AE071F2C1708AE30973B0D977F5832C1A610D9370DFD66A58A)
    74 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbspec.h (SHA_256: 28FF618EE96AE988E5A559C09BB81EB77210398F60B01F9FD38D9906E18B7B89)
    75 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdriver.h (SHA_256: B575DC21A09593F84CF425520F20F3C16D891439A8F736D0265AF5E8238C7BD4)
    76 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\filter.tmh (SHA_256: 5C8D49EEA298866859337904F0D9C596AF2293ECA16EA8C12093CFEE45D04376)
    77 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntrace.h (SHA_256: 40D80842618B587A45CA4E15B50E8DF718917727C2F154424E28E81E84300B5D)
    78 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfQueryInterface.h (SHA_256: 34D682CD7F5B92619F05614586C00A56EB5D5F930BAEC8E45693BF534CAFF35B)
    79 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h (SHA_256: 838D81A2194373FB8C67346151472ACC596942C8F440E2BDAEB153441D848469)
    80 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
    81 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
    82 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Filter.h (SHA_256: D021C8F5A5A9A594BA43D356DCDBDF110457DA68801F7AB0D873F09629360EFD)
    83 C:\Users\appveyor\projects\bthps3\BthPS3PSM\L2CAP.h (SHA_256: D3666DC747C835873DC5135F76F8E76CE6ED4A82D79FFFBE56718CE9D7866738)
    84 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfworkitem.h (SHA_256: D44B7221157519DA5786AD51DB73641F1D092BEAB6FC299B98B34AE2B07C286D)
    85 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfWMI.h (SHA_256: CA384FED557579F9AA36F81FAEAD8EF70641681919993BF046F1E87ED70CAC6E)
    86 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfbugcodes.h (SHA_256: 58BABB4D84E768BFCEF053F6026B5C04459E5997A2A0406BAD9C3252D66AD655)
    87 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpdo.h (SHA_256: BC5BC7339E32ECE3284786923F683300D33FDB5646BDB0200A092A6F53B88CB2)
    88 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdpc.h (SHA_256: 3FB15CD71F23B01A7E570EC33D56B08849739D10DAA44D607668D62A21E1EAEC)
    89 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
    90 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Filter.c (SHA_256: FF3DE82F7AB50DDADA174F0C1DF352CB38C8D376F215ECECA598725D00B1243C)
    91 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpool.h (SHA_256: A6EC2A2019F63BD79BA5C093B06A78362312873727CCDB6E330C4ADFD55E2A74)
    92 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h (SHA_256: 24D80061477F4E7676183F160094090C52F2F0018DDCFA14554BA131BD783006)
    93 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
    94 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfsync.h (SHA_256: 859DF8680ABD3A76CD6FE2E497F2A5BBA2DDF060D666CA145A08C9A9F589F23D)
    95 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntintsafe.h (SHA_256: 94E2072377D61F425BD17F4B977957C3E4B6ED65A6EC8FDEBA758CAB070A1099)

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"

     0 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
     1 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
     2 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\warning.h (SHA_256: 7AEC3700813495AE791996E0DD4845DC592D07D5F57B1EF480E08B63B4DFDFCB)
     3 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\suppress.h (SHA_256: C827CF61AE117FFD7B7CE07C543D7CFCEA30ED07673CE4EAFF4DC44456215688)
     4 C:\Users\appveyor\projects\bthps3\BthPS3PSM\driver.h (SHA_256: 53A28BADA034C193780B2E1C9D904EF2F3D5EED9AB077A81851BA94539CB0F4F)
     5 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h (SHA_256: BBA511C4393F870A17293244C329DDAFD91BB259434812502BB8D10A892054D7)
     6 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfresource.h (SHA_256: 3DC6E587B90360E8CD078884F28498CA4E0D1806AFBFEFF413A690A70A879518)
     7 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfglobals.h (SHA_256: 58DD0022F0A10AEA5648A56ECDF17833431CA251CD0A74D6CEF6096CE5C62F25)
     8 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
     9 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfmemory.h (SHA_256: E8F318E9D94464F7DD3639E083DB2697AFF93F002D7E9D0AA61F7A82C57733D4)
    10 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    11 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    12 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    13 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings.h (SHA_256: 3B83B1CD3B4F9BF46009BFDCCF01D5C3A6FA6EED3F823D1EF497ED6D1B9BCE0E)
    14 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sal.h (SHA_256: A2B3EE38BC3B998D7162A38D1AA1C8D19EB3F72EEA64EB5EE68FB6497B65E7F1)
    15 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    16 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    17 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    18 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    19 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffuncenum.h (SHA_256: 5E3B8CACFF893D2AAA99ECE776D881FD2129E58DA0219C85996ACC654124FC63)
    20 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    21 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    22 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31)
    23 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    24 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    25 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    26 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    27 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdf.h (SHA_256: 5B4AFDB7D7A8347BB48BA644E6BE12471ABE2B2503752AA0B120328E6CCB8000)
    28 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaEnabler.h (SHA_256: DCD9987E6FD5DB1F8926DA0E55453F6A8BC594D9DFEFF12BD5AE11CBB3CEDF5B)
    29 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h (SHA_256: AEA98EEE25226092782EF1337362BF8A1DF91CD7D758AF9C9CA9464315643624)
    30 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffileobject.h (SHA_256: 68E2DC75733DE75F7D698916D0EDF594E664006617011092CC3631DC0F9367D1)
    31 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfroletypes.h (SHA_256: A7F0FB482229F46E50A0875326CE601E7E382537E3FB44C2C5E4D539281B3F29)
    32 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h (SHA_256: AD0CB5C783BDF29281FA05287234A1A704BB65BDFBB91F97CC7720E1A981D597)
    33 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfchildlist.h (SHA_256: 070017480E61E0C56D682FC7D7545538D800A0C6BE293B9E22148FA2C59A11E5)
    34 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfhwaccess.h (SHA_256: 7B73B6B106F2B9F432B5D08FA535117EE63145CA3DD2EB621EA937A4A7912BC7)
    35 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\initguid.h (SHA_256: 422EBCF50B8E8AD2F21A06E7281540F759237EABE37E445605FC45CC45D88314)
    36 C:\Users\appveyor\projects\bthps3\BthPS3PSM\device.h (SHA_256: 4F47E46A7EFF14E13C77EDB5F3004E3B546F79A0B5C288BDEB064EF23A39FD9A)
    37 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstring.h (SHA_256: 313107C1656E0D3BB0D4C62CB73B7DFB0917F1C5CE655A976C0303D09637A8FA)
    38 C:\Users\appveyor\projects\bthps3\common\include\BthPS3.h (SHA_256: 239292F3BDF315D52CCAB046148E8501B00604BB0CA08A4D644127B60ABACF60)
    39 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaTransaction.h (SHA_256: A227E5A01245FA6CF0F8FFD6A07D522CADED238F3DEAF67FF843678E042ACE42)
    40 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    41 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftimer.h (SHA_256: 3077550EFCD5967261E9507F8C8CE98EAD63EE9335E10B995E17B8386E11B9BA)
    42 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcollection.h (SHA_256: C069DBD65402DD409746C2D0A243D9B3A646A2B9066284F6D18E07A93A8245B8)
    43 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffdo.h (SHA_256: 0C5A357EA22F50003E41E909599904A3FE0B86633325425B9CAF8A52B50C87F9)
    44 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfiotarget.h (SHA_256: BA3C0C8B69CA043AA53FE42820A51D55D736EEEB1815409D56A564A9F2E5A8FD)
    45 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    46 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfCommonBuffer.h (SHA_256: 52CD5BB72418DDDF7A68FDEB55034A7B0B2F7C9924B9715685E6EEFECCD956A5)
    47 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    48 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    49 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    50 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    51 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h (SHA_256: 6AD0AD3C8D8C5EA57AE9C570D8293B4A30C9F135551A497A133488D732ECC235)
    52 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfregistry.h (SHA_256: 1302A06A70DB8C6FA813408E5621E18BC9FEAB80EF7F3DF32B53AB41D5E4D786)
    53 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    54 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcore.h (SHA_256: C8E8C98D785E50B4BBA92F1F9304D1474B340EA71DD37F96B1D719909FECABDB)
    55 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
    56 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)
    57 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stddef.h (SHA_256: 772C65A788A64C89634A4A798251E2D3AEB4395962669E8DC0E1634D651F6D9A)
    58 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcontrol.h (SHA_256: 7C9212B8008FBAB8A19B422855DB29AF6930CE04BE7760D0ED24633C9BA14E35)
    59 C:\Users\appveyor\projects\bthps3\BthPS3PSM\queue.h (SHA_256: 0D835CF43793FF71408C39C5C006284CE2CD8A822E64779157C166ACF686A994)
    60 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stdarg.h (SHA_256: D8E5D01F5B72C12286A3E8A1B7EC1DF0AF52C2991F87BDD2B9FAE71FD211E103)
    61 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdmsec.h (SHA_256: 126023E670B4ED013E1109ACA2AE0354F15D411981CBDADFA1F4B2343D6DF718)
    62 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\wmistr.h (SHA_256: A27CAE7659CC3081228D1E4987E4DED9E2D41411B443B09541F0677A6ED5CC9E)
    63 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h (SHA_256: 6ACAF563EF9DAA496901E3B718E7FB9027CA10107B4D2A8D085D3377F32C6234)
    64 C:\Users\appveyor\projects\bthps3\BthPS3PSM\trace.h (SHA_256: 2BA803C43FE5FA7B0CCF97F70438624B9511837587C92BC281EB855192F6BC85)
    65 C:\Users\appveyor\projects\bthps3\BthPS3PSM\UsbUtil.h (SHA_256: C9A8961C5F0B0BE50EE3728C4626D425EC576977358F2A086C5178268839A562)
    66 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h (SHA_256: C415B5F5C19FCDCD2AAE14D380F57561B7ED17BA2B9A3B7317A5BE01437D8405)
    67 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstatus.h (SHA_256: 99AA63969F9E7981A9FCC922559B5F317778E35CD780F678AF04101A7B8BD806)
    68 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.h (SHA_256: 94C7880A773B8A6162784B9587452A8FF716019478A2D102ED9E9B76CE5698ED)
    69 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfassert.h (SHA_256: 1B676A9947C665C1DC88DFE26D7B32F1088DD572B8E3A9204CFDABA4504D6A39)
    70 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfverifier.h (SHA_256: B82AD733CBE1C8381560E6C86DAEABE7B2C81860D25B46E6F88E390829EE69D0)
    71 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h (SHA_256: 1331B7F1476699AE071F2C1708AE30973B0D977F5832C1A610D9370DFD66A58A)
    72 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbspec.h (SHA_256: 28FF618EE96AE988E5A559C09BB81EB77210398F60B01F9FD38D9906E18B7B89)
    73 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdriver.h (SHA_256: B575DC21A09593F84CF425520F20F3C16D891439A8F736D0265AF5E8238C7BD4)
    74 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\queue.tmh (SHA_256: 5B1645F29801E2EC4D37E0074C7DF3167361BDCE323DCF14A1201B7EEB4BBD27)
    75 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntrace.h (SHA_256: 40D80842618B587A45CA4E15B50E8DF718917727C2F154424E28E81E84300B5D)
    76 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfQueryInterface.h (SHA_256: 34D682CD7F5B92619F05614586C00A56EB5D5F930BAEC8E45693BF534CAFF35B)
    77 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h (SHA_256: 838D81A2194373FB8C67346151472ACC596942C8F440E2BDAEB153441D848469)
    78 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
    79 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
    80 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Filter.h (SHA_256: D021C8F5A5A9A594BA43D356DCDBDF110457DA68801F7AB0D873F09629360EFD)
    81 C:\Users\appveyor\projects\bthps3\BthPS3PSM\L2CAP.h (SHA_256: D3666DC747C835873DC5135F76F8E76CE6ED4A82D79FFFBE56718CE9D7866738)
    82 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfworkitem.h (SHA_256: D44B7221157519DA5786AD51DB73641F1D092BEAB6FC299B98B34AE2B07C286D)
    83 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfWMI.h (SHA_256: CA384FED557579F9AA36F81FAEAD8EF70641681919993BF046F1E87ED70CAC6E)
    84 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfbugcodes.h (SHA_256: 58BABB4D84E768BFCEF053F6026B5C04459E5997A2A0406BAD9C3252D66AD655)
    85 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpdo.h (SHA_256: BC5BC7339E32ECE3284786923F683300D33FDB5646BDB0200A092A6F53B88CB2)
    86 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdpc.h (SHA_256: 3FB15CD71F23B01A7E570EC33D56B08849739D10DAA44D607668D62A21E1EAEC)
    87 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
    88 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Queue.c (SHA_256: DFC50382C471C97DE15C5852335889BE1033C2490560FF26A7868587052231FE)
    89 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpool.h (SHA_256: A6EC2A2019F63BD79BA5C093B06A78362312873727CCDB6E330C4ADFD55E2A74)
    90 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h (SHA_256: 24D80061477F4E7676183F160094090C52F2F0018DDCFA14554BA131BD783006)
    91 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
    92 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbioctl.h (SHA_256: C6A077BE7981F49BB506A496AD3DEFC2048FDAAA5574965847297E3C6B2998FB)
    93 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfsync.h (SHA_256: 859DF8680ABD3A76CD6FE2E497F2A5BBA2DDF060D666CA145A08C9A9F589F23D)
    94 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb200.h (SHA_256: F8A660EA15203A8B0C3B26CF2151AD77DB56A507A70BE1BF961F9728C03FD790)
    95 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbiodef.h (SHA_256: 90F43B571BB325799AB1A95709DB908B8EDC01286BF628466A3D0DBCF9F171A4)

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"

     0 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
     1 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
     2 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\warning.h (SHA_256: 7AEC3700813495AE791996E0DD4845DC592D07D5F57B1EF480E08B63B4DFDFCB)
     3 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\suppress.h (SHA_256: C827CF61AE117FFD7B7CE07C543D7CFCEA30ED07673CE4EAFF4DC44456215688)
     4 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Driver.h (SHA_256: 53A28BADA034C193780B2E1C9D904EF2F3D5EED9AB077A81851BA94539CB0F4F)
     5 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h (SHA_256: BBA511C4393F870A17293244C329DDAFD91BB259434812502BB8D10A892054D7)
     6 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfresource.h (SHA_256: 3DC6E587B90360E8CD078884F28498CA4E0D1806AFBFEFF413A690A70A879518)
     7 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfglobals.h (SHA_256: 58DD0022F0A10AEA5648A56ECDF17833431CA251CD0A74D6CEF6096CE5C62F25)
     8 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
     9 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfmemory.h (SHA_256: E8F318E9D94464F7DD3639E083DB2697AFF93F002D7E9D0AA61F7A82C57733D4)
    10 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    11 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    12 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    13 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings.h (SHA_256: 3B83B1CD3B4F9BF46009BFDCCF01D5C3A6FA6EED3F823D1EF497ED6D1B9BCE0E)
    14 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sal.h (SHA_256: A2B3EE38BC3B998D7162A38D1AA1C8D19EB3F72EEA64EB5EE68FB6497B65E7F1)
    15 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    16 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    17 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    18 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    19 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffuncenum.h (SHA_256: 5E3B8CACFF893D2AAA99ECE776D881FD2129E58DA0219C85996ACC654124FC63)
    20 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    21 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    22 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    23 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    24 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    25 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    26 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdf.h (SHA_256: 5B4AFDB7D7A8347BB48BA644E6BE12471ABE2B2503752AA0B120328E6CCB8000)
    27 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaEnabler.h (SHA_256: DCD9987E6FD5DB1F8926DA0E55453F6A8BC594D9DFEFF12BD5AE11CBB3CEDF5B)
    28 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h (SHA_256: AEA98EEE25226092782EF1337362BF8A1DF91CD7D758AF9C9CA9464315643624)
    29 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h (SHA_256: 9DD47DDBDECD7B4E09FFB47B286B960679F19EFE8F532D97475E7D93F0C0EC31)
    30 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffileobject.h (SHA_256: 68E2DC75733DE75F7D698916D0EDF594E664006617011092CC3631DC0F9367D1)
    31 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfroletypes.h (SHA_256: A7F0FB482229F46E50A0875326CE601E7E382537E3FB44C2C5E4D539281B3F29)
    32 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h (SHA_256: AD0CB5C783BDF29281FA05287234A1A704BB65BDFBB91F97CC7720E1A981D597)
    33 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfchildlist.h (SHA_256: 070017480E61E0C56D682FC7D7545538D800A0C6BE293B9E22148FA2C59A11E5)
    34 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfhwaccess.h (SHA_256: 7B73B6B106F2B9F432B5D08FA535117EE63145CA3DD2EB621EA937A4A7912BC7)
    35 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\initguid.h (SHA_256: 422EBCF50B8E8AD2F21A06E7281540F759237EABE37E445605FC45CC45D88314)
    36 C:\Users\appveyor\projects\bthps3\BthPS3PSM\device.h (SHA_256: 4F47E46A7EFF14E13C77EDB5F3004E3B546F79A0B5C288BDEB064EF23A39FD9A)
    37 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstring.h (SHA_256: 313107C1656E0D3BB0D4C62CB73B7DFB0917F1C5CE655A976C0303D09637A8FA)
    38 C:\Users\appveyor\projects\bthps3\common\include\BthPS3.h (SHA_256: 239292F3BDF315D52CCAB046148E8501B00604BB0CA08A4D644127B60ABACF60)
    39 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaTransaction.h (SHA_256: A227E5A01245FA6CF0F8FFD6A07D522CADED238F3DEAF67FF843678E042ACE42)
    40 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    41 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftimer.h (SHA_256: 3077550EFCD5967261E9507F8C8CE98EAD63EE9335E10B995E17B8386E11B9BA)
    42 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcollection.h (SHA_256: C069DBD65402DD409746C2D0A243D9B3A646A2B9066284F6D18E07A93A8245B8)
    43 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffdo.h (SHA_256: 0C5A357EA22F50003E41E909599904A3FE0B86633325425B9CAF8A52B50C87F9)
    44 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfiotarget.h (SHA_256: BA3C0C8B69CA043AA53FE42820A51D55D736EEEB1815409D56A564A9F2E5A8FD)
    45 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    46 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfCommonBuffer.h (SHA_256: 52CD5BB72418DDDF7A68FDEB55034A7B0B2F7C9924B9715685E6EEFECCD956A5)
    47 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    48 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    49 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    50 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    51 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h (SHA_256: 6AD0AD3C8D8C5EA57AE9C570D8293B4A30C9F135551A497A133488D732ECC235)
    52 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfregistry.h (SHA_256: 1302A06A70DB8C6FA813408E5621E18BC9FEAB80EF7F3DF32B53AB41D5E4D786)
    53 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    54 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcore.h (SHA_256: C8E8C98D785E50B4BBA92F1F9304D1474B340EA71DD37F96B1D719909FECABDB)
    55 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
    56 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)
    57 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stddef.h (SHA_256: 772C65A788A64C89634A4A798251E2D3AEB4395962669E8DC0E1634D651F6D9A)
    58 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcontrol.h (SHA_256: 7C9212B8008FBAB8A19B422855DB29AF6930CE04BE7760D0ED24633C9BA14E35)
    59 C:\Users\appveyor\projects\bthps3\BthPS3PSM\queue.h (SHA_256: 0D835CF43793FF71408C39C5C006284CE2CD8A822E64779157C166ACF686A994)
    60 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stdarg.h (SHA_256: D8E5D01F5B72C12286A3E8A1B7EC1DF0AF52C2991F87BDD2B9FAE71FD211E103)
    61 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdmsec.h (SHA_256: 126023E670B4ED013E1109ACA2AE0354F15D411981CBDADFA1F4B2343D6DF718)
    62 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\wmistr.h (SHA_256: A27CAE7659CC3081228D1E4987E4DED9E2D41411B443B09541F0677A6ED5CC9E)
    63 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h (SHA_256: 6ACAF563EF9DAA496901E3B718E7FB9027CA10107B4D2A8D085D3377F32C6234)
    64 C:\Users\appveyor\projects\bthps3\BthPS3PSM\trace.h (SHA_256: 2BA803C43FE5FA7B0CCF97F70438624B9511837587C92BC281EB855192F6BC85)
    65 C:\Users\appveyor\projects\bthps3\BthPS3PSM\UsbUtil.h (SHA_256: C9A8961C5F0B0BE50EE3728C4626D425EC576977358F2A086C5178268839A562)
    66 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h (SHA_256: C415B5F5C19FCDCD2AAE14D380F57561B7ED17BA2B9A3B7317A5BE01437D8405)
    67 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstatus.h (SHA_256: 99AA63969F9E7981A9FCC922559B5F317778E35CD780F678AF04101A7B8BD806)
    68 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.h (SHA_256: 94C7880A773B8A6162784B9587452A8FF716019478A2D102ED9E9B76CE5698ED)
    69 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfassert.h (SHA_256: 1B676A9947C665C1DC88DFE26D7B32F1088DD572B8E3A9204CFDABA4504D6A39)
    70 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfverifier.h (SHA_256: B82AD733CBE1C8381560E6C86DAEABE7B2C81860D25B46E6F88E390829EE69D0)
    71 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h (SHA_256: 1331B7F1476699AE071F2C1708AE30973B0D977F5832C1A610D9370DFD66A58A)
    72 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbspec.h (SHA_256: 28FF618EE96AE988E5A559C09BB81EB77210398F60B01F9FD38D9906E18B7B89)
    73 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdriver.h (SHA_256: B575DC21A09593F84CF425520F20F3C16D891439A8F736D0265AF5E8238C7BD4)
    74 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh (SHA_256: 4F23B4F334EE40898C8C08DE335AC01B14746F1B58F320D5097808837878F14D)
    75 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntrace.h (SHA_256: 40D80842618B587A45CA4E15B50E8DF718917727C2F154424E28E81E84300B5D)
    76 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfQueryInterface.h (SHA_256: 34D682CD7F5B92619F05614586C00A56EB5D5F930BAEC8E45693BF534CAFF35B)
    77 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h (SHA_256: 838D81A2194373FB8C67346151472ACC596942C8F440E2BDAEB153441D848469)
    78 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
    79 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
    80 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Filter.h (SHA_256: D021C8F5A5A9A594BA43D356DCDBDF110457DA68801F7AB0D873F09629360EFD)
    81 C:\Users\appveyor\projects\bthps3\BthPS3PSM\L2CAP.h (SHA_256: D3666DC747C835873DC5135F76F8E76CE6ED4A82D79FFFBE56718CE9D7866738)
    82 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfworkitem.h (SHA_256: D44B7221157519DA5786AD51DB73641F1D092BEAB6FC299B98B34AE2B07C286D)
    83 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfWMI.h (SHA_256: CA384FED557579F9AA36F81FAEAD8EF70641681919993BF046F1E87ED70CAC6E)
    84 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfbugcodes.h (SHA_256: 58BABB4D84E768BFCEF053F6026B5C04459E5997A2A0406BAD9C3252D66AD655)
    85 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpdo.h (SHA_256: BC5BC7339E32ECE3284786923F683300D33FDB5646BDB0200A092A6F53B88CB2)
    86 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdpc.h (SHA_256: 3FB15CD71F23B01A7E570EC33D56B08849739D10DAA44D607668D62A21E1EAEC)
    87 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
    88 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.c (SHA_256: C70CB8AEA45844B9024D38AFCD4E6AD08CB59B2B88CA6712C2835C5C97FB09F2)
    89 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpool.h (SHA_256: A6EC2A2019F63BD79BA5C093B06A78362312873727CCDB6E330C4ADFD55E2A74)
    90 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h (SHA_256: 24D80061477F4E7676183F160094090C52F2F0018DDCFA14554BA131BD783006)
    91 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
    92 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfsync.h (SHA_256: 859DF8680ABD3A76CD6FE2E497F2A5BBA2DDF060D666CA145A08C9A9F589F23D)

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

     0 OneCore\Internal\MinWin\Priv_Sdk\Inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
     1 onecore\internal\sdk\inc\nxamd64.h (SHA_256: 1CBD7CDFC32FFF7D7708EE4AF63981F6F164EA8001DA153C7474C6AFEE3817F4)
     2 onecore\internal\sdk\inc\ntldr.h (SHA_256: 87CB2674414DD7C27D8416E649630BC316DFC17814D7549C9980BE6E44B66940)
     3 onecore\internal\sdk\inc\ntexapi.h (SHA_256: C7181971401CADD9D9C27C007D407988700BC41D080D5243BC7C6411D07C4C54)
     4 onecore\internal\sdk\inc\ntexapi_x.h (SHA_256: 6B4536D31F71140195CEDC73A311B50D6F3456EAA7D94D7E69B236713BD0EADF)
     5 OneCore\Internal\MinWin\Priv_Sdk\Inc\ntnls.h (SHA_256: AFC17037EE0A4E6B067F2AF6BFF1BBCF5DB96DA53B2BE379785EF7D30DC59E65)
     6 onecore\internal\sdk\inc\ntconfig.h (SHA_256: ABAECD7BB22484864E9115B40CA5EF7E70FDC26F37828D54B3312AA8F0DF2E18)
     7 onecore\external\shared\inc\pshpck16.h (SHA_256: 346FBB98672D2B0B32DCAADC9A6F736DAB45AA8AFF8661B3E05E05D852C53DF3)
     8 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
     9 onecore\internal\sdk\inc\nttpapi.h (SHA_256: E9F2EF7086476B55B1C5561138AE926EFD7E3BC2C2D61505C1FF596F6CAEB813)
    10 minkernel\crts\crtw32\h\string.h (SHA_256: 3CCF1B07C82224B8A8B757F4CD3FD57C9941945052EAF80BE904E8904EE2A652)
    11 minkernel\crts\crtw32\misc\amd64\gshandler.c (SHA_256: BD218F84340BC13FEA540D3FAD15F98883F8B3535599903849B5B7E347665A44)
    12 onecore\internal\sdk\inc\rtlfeatureconfigtypes.h (SHA_256: 91092543EA803CF6AB4DBB15500CC515F6C0FA6D49186833DA1ED61BF0315129)
    13 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    14 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    15 onecore\internal\sdk\inc\MinWin\ntdef_p.h (SHA_256: 83175589DB51C47522DDCE77CA21A71C87664222DFCCE2600872755E9AB7A139)
    16 onecore\internal\sdk\inc\volatile_accessors.h (SHA_256: 1B24D3DF094C2D23908A3F2D3ABEF228CBAD14B3E2AA1D40E33D56EDBF5A0FD5)
    17 onecore\internal\sdk\inc\pebteb.h (SHA_256: 99E4F6F236B42429FF9B11357432126A6E38535AC6467AAD8E5CE86779238D66)
    18 onecore\internal\sdk\inc\MinWin\ntpnpapi.h (SHA_256: 97369FC74D3F993132FC94E6A700D5BE1512B20AD22490B69C5DB696A5D5C1A3)
    19 onecore\internal\sdk\inc\ntamd64.h (SHA_256: 32FB1A6B74140C982ADD55F0C9E209C8818F8BD6CDF07DBB170C02E695131308)
    20 OneCore\Internal\MinWin\Priv_Sdk\Inc\cfg.h (SHA_256: 6E2AA35C540EC4754D8E13666B0B17F83CB174C4DFD34CF9076565F72361F5E3)
    21 onecore\internal\sdk\inc\ntamd64_x.h (SHA_256: 293401BB4231BF4D131BF88221F1953C8227830E7A5FB3B6AD5136DB1025FDB8)
    22 onecore\external\ddk\inc\ntimage.h (SHA_256: 7773FEDE6F8B57D6880523DDF0192D8DCD4738F5A28C9D5A98AADB7A64CAEA02)
    23 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    24 onecore\external\shared\inc\pshpack2.h (SHA_256: 971D19074639CB36134BB40776CB2F817C53CBD05D748B52468F571932BBCC49)
    25 minkernel\crts\crtw32\h\stdarg.h (SHA_256: 3678A0ED176C75965A58C391F6E659DA42454B83E3F3F21438513731165962FA)
    26 onecore\external\shared\inc\MinWin\ntdef.h (SHA_256: A20A36D90D90F6167B9BF6B24409AE3CD4559970FDE95B5E8852C0B6E7B484FE)
    27 minkernel\crts\crtw32\h\ctype.h (SHA_256: E690BD5A03B64B2B219C4A2A7758D03BB27DD981C3EDB3ABA9DE6A2C3C203409)
    28 minkernel\crts\crtw32\h\process.h (SHA_256: 915C81787342AA8A1633D5FD0B787D37810075709F2AA0455B9FD01664187FEB)
    29 onecore\external\shared\inc\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    30 onecore\internal\sdk\inc\ntobapi.h (SHA_256: 3A92FC18E78487D33DB3B3B3BE4601B500D7002438DFAF3450CCEFD029DC4855)
    31 onecore\internal\sdk\inc\ntkeapi.h (SHA_256: DDA26DCF61D5237F3B2E5CB332830E991365F71AB4A3F8A259A5856CC241DD03)
    32 onecore\internal\sdk\inc\ntobapi_x.h (SHA_256: 5D4DE67FB3CFA610CF9E3E50FC2B3645E0570E890428D90002C0FE4835D23950)
    33 onecore\internal\sdk\inc\ntkeapi_x.h (SHA_256: DB6282C1C289B72B0CCD44E5D8E36B7CAE7F5E14070FE71E40CCF3258B04C40C)
    34 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
    35 OneCore\Internal\MinWin\Priv_Sdk\Inc\affinity.h (SHA_256: 5F9A31BF75F92D42F807ECADF3C93201F1AC7BD06DE3619BF0B6E7D66EB1BCFF)
    36 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    37 OneCore\Internal\MinWin\Priv_Sdk\Inc\nt.h (SHA_256: 9B2DCFBB24F98A8045C56D303279149552D023D24FCA178FB624E151454181A0)
    38 minkernel\crts\crtw32\h\excpt.h (SHA_256: 0C9127D8A2783860C193DE8942FAC10185D697B7F716940F68E93895C9F22976)
    39 minkernel\crts\crtw32\h\crtdefs.h (SHA_256: 3845D81E3C76A057D38446F7C6B4F8ADA11492BAA806692A15FF06647F009678)
    40 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    41 OneCore\Internal\MinWin\Priv_Sdk\Inc\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
    42 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    43 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    44 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    45 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    46 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    47 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    48 minkernel\crts\crtw32\h\vadefs.h (SHA_256: E7439E484D20A8B0349E41CC3E7F490CD014D4F2DA86FE9C1C2D5517D153B791)
    49 onecore\internal\sdk\inc\ntxcapi.h (SHA_256: 43A2CFE5DCA2DD4D6A49FCA678E6C7F0283F7107B93E39EB328ED2001FD02F6D)
    50 minkernel\crts\crtw32\h\cruntime.h (SHA_256: BDF3A8FE949F90A75747F0C40300EF591B3158324BB479ABCFFA386725C2736F)
    51 onecore\internal\sdk\inc\ntxcapi_x.h (SHA_256: 39AD34DC814D901D297E1330B93757BCBC19EA034913579BBC33E35A2CE4E246)
    52 onecore\internal\sdk\inc\ntpsapi.h (SHA_256: E82CCE86364069BE26F1AA97372B828C52BB4331B4B8BECF7DE0DD4B2CA26693)
    53 onecore\internal\sdk\inc\ntpsapi_x.h (SHA_256: 572C554894696F8F3892E7F4849DE1D49F0A0A1E8CBEFFD1318F2E0793597D0E)
    54 onecore\internal\sdk\inc\MinWin\ntregapi.h (SHA_256: 6E449D8D656844235289851CCB79A48A416E6981CFACCC66012D9E801CA1FE1E)
    55 onecore\internal\sdk\inc\ntregapi_x.h (SHA_256: 38C71DA4C5CABC52DF3FA08DE858435D5BB5ABE4EB9308A508F8F311CA1CE548)
    56 onecore\internal\sdk\inc\ntiolog.h (SHA_256: B63EC91C6A0FAB741A91267E385EDB42FEEE4A1B1932EA2F5207180E7508C07E)
    57 onecore\internal\sdk\inc\MinWin\umstls.h (SHA_256: 54C640860D1E32EDF25583CD70F47C989A890BB8DF6BE6F4171491DA5B702A26)
    58 onecore\internal\sdk\inc\nttmapi.h (SHA_256: FE705B46F8B4C6C6146C6CFA3C7F8D8341963DE082D9036C7D914BADA1DE5290)
    59 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    60 onecore\internal\sdk\inc\ntseapi.h (SHA_256: 1D930540B895032AB4CC486074D5942F1CDB35578024C15A9A0F545747D6E42F)
    61 onecore\internal\sdk\inc\ntseapi_x.h (SHA_256: 15119AB4CBDDD39A0F4999EA59C2878DAFE3C424A3B34968C09845FB130A0115)
    62 onecore\internal\sdk\inc\ntelfapi.h (SHA_256: 4247EC2EF0C16A892CB618D3A31BA1137F2D2DE52A1DC0ABF832AA8A3DB88303)
    63 onecore\internal\sdk\inc\ntwow64.h (SHA_256: D737C8D0C20A082E6B4E11628F453A970CA9220B758112773C518915ED049315)
    64 onecore\internal\sdk\inc\ntwow64_x.h (SHA_256: 0298D2DCCDCCAB8B07FA3272C25751A3E2834BE8F45449D65570A8EE8A2FEB7A)
    65 onecore\internal\sdk\inc\ntlpcapi.h (SHA_256: 1A74DB287D59347BF35DEA096A12070CC704C89D5FDF3C6CF7D4272884951685)
    66 onecore\external\sdk\inc\MinWin\rtlsupportapi.h (SHA_256: BF6A6901DAD9B28A5BA516EB35AC181DB2F19BD34308EBD5121919C8D7E127BD)
    67 onecore\internal\sdk\inc\ntmmapi.h (SHA_256: F2CB6D00DA6CECA40A72682D207CC132B7CE92F2B750C7FAEDE6F9FCE91FDBA6)
    68 onecore\internal\sdk\inc\MinWin\ntioapi.h (SHA_256: 7828FD97FC011A29CF02AFF6FFE16415E46773AAD1794B0A8C9EC4C6EB2334E4)
    69 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
    70 onecore\internal\sdk\inc\ntarm64.h (SHA_256: 0E2F7BCE61DC54AE1ABA8129A588E71217551BBF3A6220695222F35F877ECB45)
    71 onecore\internal\sdk\inc\ntmmapi_x.h (SHA_256: 85A46DF5DAA23B0836E9D08A4802CFF8A54BE0273ADA3730146735D92C6AF457)
    72 onecore\external\shared\inc\devioctl.h (SHA_256: 53517C9E0E43807F3E638C7D8DB6179EE4EBB04BD860F3F0D16A8DD4585C27F8)
    73 onecore\external\shared\inc\MinWin\apisetcconv.h (SHA_256: 1093683104F97C8C9725BB2E7539DCA22722DC8C5618CD846287E9458698ABFE)
    74 onecore\internal\sdk\inc\ntarm64_x.h (SHA_256: AB864D685E2768D90DF37FBB10AF56839AB808349FF3B8F9DEFCE98AE29812A9)
    75 onecore\external\ddk\inc\ntpoapi.h (SHA_256: F360C4EAA70B570173D5519F8ECE8906537C3A0EC89011BA0342E020DD6BA64A)
    76 onecore\internal\sdk\inc\MinWin\ntioapi_x.h (SHA_256: 3AB60A31F8803D37E5D1580322F8456C2AB4D5826F4E84777B5C7D5D6731AAED)
    77 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    78 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    79 onecore\external\shared\inc\pshpack8.h (SHA_256: 47F3972A1211E3A5AC32B18FAE1A824DB087DC7DC562D152E9CCAB9B297FAEF0)
    80 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    81 OneCore\Internal\MinWin\Priv_Sdk\Inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

     0 onecore\external\sdk\inc\MinWin\heapapi.h (SHA_256: 22B606B0A4096295272BCAE6FC353C4F159F0CDFC90B5F1A9A712B2FFF50B53F)
     1 onecore\external\sdk\inc\MinCore\systemtopologyapi.h (SHA_256: 8BFD1A78CC30B6D33C88E3F61AE2AC6468CEE0607352EE8D096BA5375B4D401C)
     2 onecore\external\sdk\inc\winsvc.h (SHA_256: 8108FE3F099960014F36D1B2DA425A8382E9D839DE3477EB06F181289A0685C8)
     3 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
     4 onecore\external\sdk\inc\MinCore\processtopologyapi.h (SHA_256: 4507A5E0C4F41D19A80D1543833F1A9D90277BC376441B277884BB043BE24BA5)
     5 onecore\external\sdk\inc\MinWin\jobapi.h (SHA_256: 08DDFF85EC80F12B156837BBCE4F969480FEA0E32A08DADE7CC16ACECB0892D1)
     6 OneCore\Internal\MinWin\Priv_Sdk\Inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
     7 onecore\external\sdk\inc\MinCore\jobapi2.h (SHA_256: 398EF4F8277A1EDB58E41C5E8233E8DCE7744522BA8E989D904E93991A254C71)
     8 onecore\external\sdk\inc\MinWin\threadpoolapiset.h (SHA_256: E91D7DEE4D22CA848E3110A4C55F32E1918DC865479343896AEC9AB653EE5110)
     9 onecore\external\sdk\inc\MinWin\securityappcontainer.h (SHA_256: 85CC13ED7028960BD7F97C91F98B96825B46F4B8BC386AED2F2A6A9BCCBE4083)
    10 onecore\external\sdk\inc\mcx.h (SHA_256: 4EE416B2D24E45CFC5D35CE5B34833B64B34FD9A39957C66D75509F6D3B8F972)
    11 onecore\external\shared\inc\winerror.h (SHA_256: 758571A8A5338EEF7119F1771CDE0D568CF6AC5449EFF6EAD5290F93A9A89DBB)
    12 minkernel\crts\crtw32\misc\guard_support.c (SHA_256: 6FF89D6CCA0D034AF9E745F3A29A8B606DE77C7739A4E1B26CBF65D79A2ABDFA)
    13 OneCore\Internal\MinWin\Priv_Sdk\Inc\winnls.h (SHA_256: E47861762A4B51A2689C8A99798A1A7E68335573E03C857E545172B095C5C829)
    14 onecore\external\sdk\inc\MinWin\realtimeapiset.h (SHA_256: 00C874B981A1242EE4EBC21E6AE96A69D7AA70662D820CEFFBABCFEA859B03E4)
    15 onecore\external\sdk\inc\MinWin\datetimeapi.h (SHA_256: 9B6EBD7FB7B32FE7EA6B3CE76F7C26ED9466821C2461FB71707AC2E2946C075C)
    16 minkernel\crts\crtw32\h\string.h (SHA_256: 3CCF1B07C82224B8A8B757F4CD3FD57C9941945052EAF80BE904E8904EE2A652)
    17 onecore\external\sdk\inc\MinWin\fibersapi.h (SHA_256: F8EEADC28F8E3E4C7BFD1217D55315EB31D63F3D86C66A3948D74CEB8E7A00D0)
    18 onecore\external\shared\inc\pshpack8.h (SHA_256: 47F3972A1211E3A5AC32B18FAE1A824DB087DC7DC562D152E9CCAB9B297FAEF0)
    19 onecore\external\sdk\inc\MinWin\timezoneapi.h (SHA_256: 621C0252A8A831813592C4A95E183A2E7AE55EFBBD7B8AD886AF7D8871FC4D50)
    20 onecore\external\sdk\inc\MinCore\consoleapi2.h (SHA_256: 4507BF49A004370CE01767CC9FD3FC85CEE32F79CD8890B06CD5AB8D05B94408)
    21 onecore\external\sdk\inc\MinWin\stringapiset.h (SHA_256: 08BD9C295CE9FFDACA185512A2B318B47027B02157B492104230EFC821FBA23B)
    22 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    23 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    24 OneCore\Internal\MinWin\Priv_Sdk\Inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    25 onecore\external\sdk\inc\MinWin\debugapi.h (SHA_256: 36FD04BA37AACF404CB82EFFB9A38634B502996F079A0121AEEA5191F5F424FB)
    26 onecore\external\sdk\inc\MinWin\securitybaseapi.h (SHA_256: 81971187B82B27DF42477761E562D883D24B2E81F50F2A8CEF4EC067C348F8A5)
    27 onecore\external\sdk\inc\MinWin\memoryapi.h (SHA_256: 58EDCC2090C411A1821E04A6A2954C258FD59DED44440BDD671984027E0A852F)
    28 onecore\external\sdk\inc\MinWin\namedpipeapi.h (SHA_256: E0F99E5F4319426325DDBF4A6D4E23298EED9B0806EF49ED6C95AD9DECE70D82)
    29 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    30 onecore\external\sdk\inc\fileapifromapp.h (SHA_256: D07110E7F7989AEEF7EED77D5F584F3EE60FF2CE58BC1A374D70151A18B4A664)
    31 onecore\external\sdk\inc\MinWin\fileapi.h (SHA_256: 8318076677FBA276E494EDC39AAAC11FBD9BC61CA2D36BB68BDCCCD260ECE977)
    32 minkernel\crts\crtw32\h\stdarg.h (SHA_256: 3678A0ED176C75965A58C391F6E659DA42454B83E3F3F21438513731165962FA)
    33 onecore\external\shared\inc\windef.h (SHA_256: 040535B19A60264E5FE6971F7CB13CBF24BE17ABEEAA8ACD21E44F5D7DFE8D22)
    34 onecore\external\sdk\inc\MinWin\consoleapi.h (SHA_256: 6021076F89DF0ACBDD1E38F4588342C2E2E164B7521A99D75AFDFE434E7AEBA3)
    35 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    36 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    37 onecore\external\shared\inc\MinWin\minwindef.h (SHA_256: A9CF08BE8407A196104124D5ADE2308E204E47D3252BCD2AD20D0F2137843D62)
    38 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    39 onecore\external\sdk\inc\MinWin\wow64apiset.h (SHA_256: 5DE0DA90CA805C29B82636D0C10D2A7E109D7FD1A7265981CBB6AD11B8CEE926)
    40 onecore\external\sdk\inc\MinWin\ioapiset.h (SHA_256: 7C3F659F98B3F1748A314BD64106583D01649333E0419B66232B4F64B3F85B0C)
    41 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
    42 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    43 minkernel\crts\crtw32\h\castguard.h (SHA_256: AD3470CAA9C2EE7C6C05D9AF6B3ED791278269C6DF94C80A30C1040BB948B537)
    44 OneCore\Internal\minwin\inc\windowscore.h (SHA_256: 56C3E930B51494F59B2464CDAE73C9C0CE7F19D7FDA187497F7E588FFD0C5BAC)
    45 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    46 minkernel\crts\crtw32\h\excpt.h (SHA_256: 0C9127D8A2783860C193DE8942FAC10185D697B7F716940F68E93895C9F22976)
    47 minkernel\crts\crtw32\h\crtdefs.h (SHA_256: 3845D81E3C76A057D38446F7C6B4F8ADA11492BAA806692A15FF06647F009678)
    48 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    49 onecore\external\sdk\inc\MinWin\utilapiset.h (SHA_256: A8E0F6001C784B3AD9FEB44C61D96B58C57366C473832CA8B2EA5DE05877B470)
    50 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    51 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    52 onecore\external\sdk\inc\MinWin\enclaveapi.h (SHA_256: 8D76135FF40140C6D64A09D173E1276FEFB96A2DB9073B5AB26F250C4733F999)
    53 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    54 onecore\external\sdk\inc\MinWin\verrsrc.h (SHA_256: FF9BEE8EE5B7AA81EAF79A1EAB0E93BD307601E87D3B80A73F24984E9C951C61)
    55 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    56 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    57 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    58 minkernel\crts\crtw32\h\vadefs.h (SHA_256: E7439E484D20A8B0349E41CC3E7F490CD014D4F2DA86FE9C1C2D5517D153B791)
    59 minkernel\crts\crtw32\h\cruntime.h (SHA_256: BDF3A8FE949F90A75747F0C40300EF591B3158324BB479ABCFFA386725C2736F)
    60 onecore\external\sdk\inc\winnt.h (SHA_256: 1F65487B3AE70B3BC43BB239FCA75177AA34740FC96220D64BC65E6068EC7FED)
    61 minkernel\crts\crtw32\h\ctype.h (SHA_256: E690BD5A03B64B2B219C4A2A7758D03BB27DD981C3EDB3ABA9DE6A2C3C203409)
    62 onecore\external\sdk\inc\MinWin\winreg.h (SHA_256: 8249EEBFAA3FCA0CBA35E00877BC38A369DB87738043DC4BBA0975352A03323D)
    63 onecore\external\sdk\inc\MinWin\handleapi.h (SHA_256: 72D7104C848446047353E765A541E1802B4510C7A74985E7D9973004F4602FAC)
    64 onecore\external\sdk\inc\reason.h (SHA_256: 30540EB35DAA79C7A5CB98059430DF480E86B549B7980247288DA8A2801ADD1D)
    65 onecore\external\sdk\inc\MinWin\interlockedapi.h (SHA_256: 4B0D3BC138EAAB8DC9DD40BFB109F5FEA4CBD2CAAF92D63A4CF60A8EDCFB0E3A)
    66 onecore\external\sdk\inc\MinCore\consoleapi3.h (SHA_256: 1E734C1D2625E719A4547A6E4F647A888D804D2CFEF5EE3A85C83119421D9CF1)
    67 onecore\external\shared\inc\pshpack2.h (SHA_256: 971D19074639CB36134BB40776CB2F817C53CBD05D748B52468F571932BBCC49)
    68 onecore\external\sdk\inc\winbase.h (SHA_256: F725E17B28EEA1EE66FF75DD2FB95F7AA48B67772171E35026F1FD9F861D6856)
    69 onecore\external\shared\inc\MinWin\apisetcconv.h (SHA_256: 1093683104F97C8C9725BB2E7539DCA22722DC8C5618CD846287E9458698ABFE)
    70 onecore\external\sdk\inc\MinWin\apiquery2.h (SHA_256: 8AC6D7AABAFE5B3A5E58F3A3707240D9B6DA8DA40778BC9157CA8CA0CF08C104)
    71 onecore\external\sdk\inc\MinWin\minwinbase.h (SHA_256: 7D1408F4B8EEBA96AE45892209132258CDE80CAB6DAB192B4CCEEA591972C78B)
    72 onecore\external\sdk\inc\MinWin\libloaderapi.h (SHA_256: 8F48062AA6D707BF8C63D8FB3E6956F331217BE7309D38AC523951AF51CB3224)
    73 onecore\external\sdk\inc\MinWin\processenv.h (SHA_256: 1F1E38CF7AABEE42BBF203BEEE0B9CDE392243006444BDD2ED47566D355442F8)
    74 onecore\external\sdk\inc\MinCore\namespaceapi.h (SHA_256: 3257AD8AF53C5809BE4D5D17ED0FFD8B49451D3F27C1FD747FFDE3E0A7A81583)
    75 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
    76 onecore\external\sdk\inc\wincon.h (SHA_256: 98E33720F9EC8FDED808AB94F111B8335D0BA2FD2246A5ADAB3AAB2CE05503D9)
    77 onecore\external\sdk\inc\MinWin\errhandlingapi.h (SHA_256: 7D71B7E051C9C52ECE96C1E78FE799BBFC03E7B220CB89E8887B7CA10EF1A404)
    78 onecore\external\sdk\inc\wincontypes.h (SHA_256: 209E79FDBBB30971740E59B2DA2D6C86E27C0E9DD02BEE9CBC21736FBD2426AD)
    79 onecore\external\sdk\inc\MinWin\processthreadsapi.h (SHA_256: 3036B32F97A10EFFB762E773CFFC79D2DD7AFA156A591C6243D36491063C6250)
    80 onecore\external\sdk\inc\MinWin\synchapi.h (SHA_256: E7EAD3C223D942A5B8F35336CA01D37B754DAC8F3B05AFE97C9C01A4B9C5F8BA)
    81 onecore\external\sdk\inc\MinWin\threadpoollegacyapiset.h (SHA_256: 87C1630ABF7DC4ED7978F2C4DBACF418F6BCF94CB946E277CB7250770BD44200)
    82 onecore\external\sdk\inc\MinWin\profileapi.h (SHA_256: CFA8E3626DBA11689997D8FCD65B5DFBF4BCEF8DE09DD7E4E881769D48D165A2)
    83 onecore\external\sdk\inc\MinWin\sysinfoapi.h (SHA_256: B0C389DD0128467F14BB02B4B4EA8C6DB6561F1647205C633625AD8265E143CC)

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

     0 minkernel\crts\crtw32\string\amd64\memcpy.asm (SHA_256: C35C66FAF897CBA6790B15E255A7174C330D39ADC3CB2D759449FD89C612E180)
     1 OneCore\Internal\MinWin\Priv_Sdk\Inc\ksamd64.inc (SHA_256: 9055A4B95E26733495A071C9C3963CBD5B1AD1DE573C196725B5BC997B1699B3)
     2 OneCore\Internal\MinWin\Priv_Sdk\Inc\kxamd64.inc (SHA_256: F3DF58BE58A7295E855E8835C44BBC2289179C8C500F7D4F92F1778FDA2363A4)
     3 onecore\external\sdk\inc\macamd64.inc (SHA_256: 020D2680B8B0660A8911F89D30EECC8B438576814457A382690702EAC3740F68)

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

     0 minkernel\crts\crtw32\string\amd64\memset.asm (SHA_256: 758065F7780E7CAD6EFFF82D265156CF6EA7BC44873C02D30B29908C429F33C3)
     1 OneCore\Internal\MinWin\Priv_Sdk\Inc\ksamd64.inc (SHA_256: 9055A4B95E26733495A071C9C3963CBD5B1AD1DE573C196725B5BC997B1699B3)
     2 OneCore\Internal\MinWin\Priv_Sdk\Inc\kxamd64.inc (SHA_256: F3DF58BE58A7295E855E8835C44BBC2289179C8C500F7D4F92F1778FDA2363A4)
     3 onecore\external\sdk\inc\macamd64.inc (SHA_256: 020D2680B8B0660A8911F89D30EECC8B438576814457A382690702EAC3740F68)

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

     0 onecore\external\shared\inc\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
     1 onecore\external\shared\inc\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)
     2 minkernel\wdmlib\wdmsec\Cm\CmRegUtil.h (SHA_256: 039A814D57F5DB45C2D640FAC16E57D10C0094F6F1CE6ACE1FE61128449545F0)
     3 minkernel\wdmlib\wdmsec\io\iosddl.c (SHA_256: 1A9EFEFC93008938FE969F320E1D0F1156BED3DDA617EED447D6EFC93D376A80)
     4 onecore\external\shared\inc\MinWin\ntdef.h (SHA_256: A20A36D90D90F6167B9BF6B24409AE3CD4559970FDE95B5E8852C0B6E7B484FE)
     5 onecore\external\ddk\inc\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
     6 onecore\external\sdk\inc\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
     7 onecore\external\sdk\inc\crt\wtime.inl (SHA_256: 8E6BD8E4F24A771D914B08AB700B7C7F7C284CAD992713890785DC1CDA24282A)
     8 onecore\external\sdk\inc\regstr.h (SHA_256: 65D3AEF381BE3FD3B1FE5901949241E604D084C20808FED85B01206F0A9D75ED)
     9 onecore\external\shared\inc\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
    10 onecore\external\shared\inc\MinWin\sddl.h (SHA_256: 370B5C1ECE173628EB683046BDF30B387B53D2FC4DA39BB899D0DBDFFB65A11D)
    11 onecore\external\shared\inc\MinWin\apisetcconv.h (SHA_256: 1093683104F97C8C9725BB2E7539DCA22722DC8C5618CD846287E9458698ABFE)
    12 onecore\external\ddk\inc\wdmsec.h (SHA_256: 126023E670B4ED013E1109ACA2AE0354F15D411981CBDADFA1F4B2343D6DF718)
    13 onecore\external\shared\inc\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
    14 onecore\external\shared\inc\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
    15 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
    16 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
    17 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    18 minkernel\wdmlib\wdmsec\inc\WlDef.h (SHA_256: 6B7B4E72F65AC8E944AAB2B44559D7889587E85E1B1C4E30EDC3C6D63F186215)
    19 minkernel\wdmlib\wdmsec\inc\WlMacro.h (SHA_256: C9AE2B3D6E4945CFE1ABF335C3D50A6D512647E681535594FF07983BC651CAC1)
    20 onecore\external\ifskit\inc\ntifs.h (SHA_256: 99714A6573A1AEB80B5F1861D67EEB9D5765D39FD8576F5C04AF3C96CADE1D5D)
    21 onecore\external\ifskit\inc\ntddk.h (SHA_256: BBA511C4393F870A17293244C329DDAFD91BB259434812502BB8D10A892054D7)
    22 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    23 onecore\external\ifskit\inc\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
    24 onecore\external\sdk\inc\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    25 onecore\external\sdk\inc\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    26 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    27 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    28 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    29 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    30 minkernel\wdmlib\wdmsec\Wl\wlprivate.h (SHA_256: C1585B74E60BE36747557273D751F50210747943892E0AC49491B4E1BC8CC2C8)
    31 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    32 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    33 minkernel\wdmlib\wdmsec\Se\SeSddl.h (SHA_256: 272830058BA299A2104A80B7C1F6FE760D0A41277B7FEC81D167EDCA7D097E68)
    34 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    35 onecore\external\sdk\inc\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    36 onecore\external\sdk\inc\crt\wchar.h (SHA_256: 0CB5BCE26F71727E6C0565834AED10B0EB8721C4EC734874AEBDE6F473C01C88)
    37 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    38 minkernel\wdmlib\wdmsec\Se\SeUtil.h (SHA_256: D8A7154478772F2022D7BBBFCC9198A45E0675D991110C7AB300C5DE95D6D7FF)
    39 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    40 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    41 onecore\external\ddk\inc\ntnls.h (SHA_256: AFC17037EE0A4E6B067F2AF6BFF1BBCF5DB96DA53B2BE379785EF7D30DC59E65)
    42 onecore\external\shared\inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    43 onecore\external\shared\inc\dontuse.h (SHA_256: 32F810E18BBF1AB64E2C71D99E18E6C2255BC4C885ED34B51905C75C5D39E7C3)
    44 minkernel\wdmlib\wdmsec\Io\IoDevobj.h (SHA_256: 3A379B36A1F4C6C831CD773949CB752B705031EAC02CA91B1EAD112A8E37749A)
    45 onecore\external\sdk\inc\crt\swprintf.inl (SHA_256: 9E9FA8ED25E0285E5C315B594B8EFB39B48062198598605E5DC48D6D34635365)
    46 onecore\external\shared\inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    47 minkernel\wdmlib\wdmsec\Pp\PpRegState.h (SHA_256: 49D2B07F45A5AE1EDC4A6AC7E7E947048990EAC89D18491A6FFBBB68739D5FBF)
    48 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    49 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    50 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    51 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    52 onecore\external\sdk\inc\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    53 onecore\external\shared\inc\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

     0 minkernel\crts\crtw32\misc\amd64\guard_dispatch.asm (SHA_256: 151F30DC57AAB00F184F1E1300F545F1C9DEC176980C3548078A45FC7E0A37BC)
     1 OneCore\Internal\MinWin\Priv_Sdk\Inc\ksamd64.inc (SHA_256: 9055A4B95E26733495A071C9C3963CBD5B1AD1DE573C196725B5BC997B1699B3)
     2 OneCore\Internal\MinWin\Priv_Sdk\Inc\kxamd64.inc (SHA_256: F3DF58BE58A7295E855E8835C44BBC2289179C8C500F7D4F92F1778FDA2363A4)
     3 onecore\external\sdk\inc\macamd64.inc (SHA_256: 020D2680B8B0660A8911F89D30EECC8B438576814457A382690702EAC3740F68)

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

     0 onecore\external\sdk\inc\MinCore\systemtopologyapi.h (SHA_256: 8BFD1A78CC30B6D33C88E3F61AE2AC6468CEE0607352EE8D096BA5375B4D401C)
     1 onecore\external\sdk\inc\winsvc.h (SHA_256: 8108FE3F099960014F36D1B2DA425A8382E9D839DE3477EB06F181289A0685C8)
     2 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
     3 onecore\external\sdk\inc\MinCore\processtopologyapi.h (SHA_256: 4507A5E0C4F41D19A80D1543833F1A9D90277BC376441B277884BB043BE24BA5)
     4 onecore\external\sdk\inc\MinWin\jobapi.h (SHA_256: 08DDFF85EC80F12B156837BBCE4F969480FEA0E32A08DADE7CC16ACECB0892D1)
     5 OneCore\Internal\MinWin\Priv_Sdk\Inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
     6 onecore\external\sdk\inc\MinCore\jobapi2.h (SHA_256: 398EF4F8277A1EDB58E41C5E8233E8DCE7744522BA8E989D904E93991A254C71)
     7 onecore\external\sdk\inc\MinWin\threadpoolapiset.h (SHA_256: E91D7DEE4D22CA848E3110A4C55F32E1918DC865479343896AEC9AB653EE5110)
     8 onecore\external\sdk\inc\MinWin\securityappcontainer.h (SHA_256: 85CC13ED7028960BD7F97C91F98B96825B46F4B8BC386AED2F2A6A9BCCBE4083)
     9 onecore\external\sdk\inc\mcx.h (SHA_256: 4EE416B2D24E45CFC5D35CE5B34833B64B34FD9A39957C66D75509F6D3B8F972)
    10 onecore\external\shared\inc\winerror.h (SHA_256: 758571A8A5338EEF7119F1771CDE0D568CF6AC5449EFF6EAD5290F93A9A89DBB)
    11 minkernel\crts\crtw32\misc\guard_check.c (SHA_256: 6B22C5F8312F22ADE46748A0AA4B715654DCCA2C6AADA8EA9FEFCA5FA3562E99)
    12 OneCore\Internal\MinWin\Priv_Sdk\Inc\winnls.h (SHA_256: E47861762A4B51A2689C8A99798A1A7E68335573E03C857E545172B095C5C829)
    13 onecore\external\sdk\inc\MinWin\realtimeapiset.h (SHA_256: 00C874B981A1242EE4EBC21E6AE96A69D7AA70662D820CEFFBABCFEA859B03E4)
    14 onecore\external\sdk\inc\MinWin\datetimeapi.h (SHA_256: 9B6EBD7FB7B32FE7EA6B3CE76F7C26ED9466821C2461FB71707AC2E2946C075C)
    15 minkernel\crts\crtw32\h\string.h (SHA_256: 3CCF1B07C82224B8A8B757F4CD3FD57C9941945052EAF80BE904E8904EE2A652)
    16 onecore\external\sdk\inc\MinWin\fibersapi.h (SHA_256: F8EEADC28F8E3E4C7BFD1217D55315EB31D63F3D86C66A3948D74CEB8E7A00D0)
    17 onecore\external\shared\inc\pshpack8.h (SHA_256: 47F3972A1211E3A5AC32B18FAE1A824DB087DC7DC562D152E9CCAB9B297FAEF0)
    18 onecore\external\sdk\inc\MinWin\timezoneapi.h (SHA_256: 621C0252A8A831813592C4A95E183A2E7AE55EFBBD7B8AD886AF7D8871FC4D50)
    19 onecore\external\sdk\inc\MinCore\consoleapi2.h (SHA_256: 4507BF49A004370CE01767CC9FD3FC85CEE32F79CD8890B06CD5AB8D05B94408)
    20 onecore\external\sdk\inc\MinWin\stringapiset.h (SHA_256: 08BD9C295CE9FFDACA185512A2B318B47027B02157B492104230EFC821FBA23B)
    21 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    22 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    23 OneCore\Internal\MinWin\Priv_Sdk\Inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    24 onecore\external\sdk\inc\MinWin\debugapi.h (SHA_256: 36FD04BA37AACF404CB82EFFB9A38634B502996F079A0121AEEA5191F5F424FB)
    25 onecore\external\sdk\inc\MinWin\securitybaseapi.h (SHA_256: 81971187B82B27DF42477761E562D883D24B2E81F50F2A8CEF4EC067C348F8A5)
    26 onecore\external\sdk\inc\MinWin\memoryapi.h (SHA_256: 58EDCC2090C411A1821E04A6A2954C258FD59DED44440BDD671984027E0A852F)
    27 onecore\external\sdk\inc\MinWin\namedpipeapi.h (SHA_256: E0F99E5F4319426325DDBF4A6D4E23298EED9B0806EF49ED6C95AD9DECE70D82)
    28 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    29 onecore\external\sdk\inc\fileapifromapp.h (SHA_256: D07110E7F7989AEEF7EED77D5F584F3EE60FF2CE58BC1A374D70151A18B4A664)
    30 onecore\external\sdk\inc\MinWin\fileapi.h (SHA_256: 8318076677FBA276E494EDC39AAAC11FBD9BC61CA2D36BB68BDCCCD260ECE977)
    31 minkernel\crts\crtw32\h\stdarg.h (SHA_256: 3678A0ED176C75965A58C391F6E659DA42454B83E3F3F21438513731165962FA)
    32 onecore\external\shared\inc\windef.h (SHA_256: 040535B19A60264E5FE6971F7CB13CBF24BE17ABEEAA8ACD21E44F5D7DFE8D22)
    33 onecore\external\sdk\inc\MinWin\consoleapi.h (SHA_256: 6021076F89DF0ACBDD1E38F4588342C2E2E164B7521A99D75AFDFE434E7AEBA3)
    34 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    35 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    36 onecore\external\shared\inc\MinWin\minwindef.h (SHA_256: A9CF08BE8407A196104124D5ADE2308E204E47D3252BCD2AD20D0F2137843D62)
    37 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    38 onecore\external\sdk\inc\MinWin\wow64apiset.h (SHA_256: 5DE0DA90CA805C29B82636D0C10D2A7E109D7FD1A7265981CBB6AD11B8CEE926)
    39 onecore\external\sdk\inc\MinWin\ioapiset.h (SHA_256: 7C3F659F98B3F1748A314BD64106583D01649333E0419B66232B4F64B3F85B0C)
    40 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
    41 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    42 OneCore\Internal\minwin\inc\windowscore.h (SHA_256: 56C3E930B51494F59B2464CDAE73C9C0CE7F19D7FDA187497F7E588FFD0C5BAC)
    43 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    44 minkernel\crts\crtw32\h\excpt.h (SHA_256: 0C9127D8A2783860C193DE8942FAC10185D697B7F716940F68E93895C9F22976)
    45 minkernel\crts\crtw32\h\crtdefs.h (SHA_256: 3845D81E3C76A057D38446F7C6B4F8ADA11492BAA806692A15FF06647F009678)
    46 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    47 onecore\external\sdk\inc\MinWin\utilapiset.h (SHA_256: A8E0F6001C784B3AD9FEB44C61D96B58C57366C473832CA8B2EA5DE05877B470)
    48 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    49 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    50 onecore\external\sdk\inc\MinWin\enclaveapi.h (SHA_256: 8D76135FF40140C6D64A09D173E1276FEFB96A2DB9073B5AB26F250C4733F999)
    51 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    52 onecore\external\sdk\inc\MinWin\verrsrc.h (SHA_256: FF9BEE8EE5B7AA81EAF79A1EAB0E93BD307601E87D3B80A73F24984E9C951C61)
    53 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    54 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    55 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    56 minkernel\crts\crtw32\h\vadefs.h (SHA_256: E7439E484D20A8B0349E41CC3E7F490CD014D4F2DA86FE9C1C2D5517D153B791)
    57 minkernel\crts\crtw32\h\cruntime.h (SHA_256: BDF3A8FE949F90A75747F0C40300EF591B3158324BB479ABCFFA386725C2736F)
    58 onecore\external\sdk\inc\winnt.h (SHA_256: 1F65487B3AE70B3BC43BB239FCA75177AA34740FC96220D64BC65E6068EC7FED)
    59 minkernel\crts\crtw32\h\ctype.h (SHA_256: E690BD5A03B64B2B219C4A2A7758D03BB27DD981C3EDB3ABA9DE6A2C3C203409)
    60 onecore\external\sdk\inc\MinWin\winreg.h (SHA_256: 8249EEBFAA3FCA0CBA35E00877BC38A369DB87738043DC4BBA0975352A03323D)
    61 onecore\external\sdk\inc\MinWin\handleapi.h (SHA_256: 72D7104C848446047353E765A541E1802B4510C7A74985E7D9973004F4602FAC)
    62 onecore\external\sdk\inc\reason.h (SHA_256: 30540EB35DAA79C7A5CB98059430DF480E86B549B7980247288DA8A2801ADD1D)
    63 onecore\external\sdk\inc\MinWin\interlockedapi.h (SHA_256: 4B0D3BC138EAAB8DC9DD40BFB109F5FEA4CBD2CAAF92D63A4CF60A8EDCFB0E3A)
    64 onecore\external\sdk\inc\MinCore\consoleapi3.h (SHA_256: 1E734C1D2625E719A4547A6E4F647A888D804D2CFEF5EE3A85C83119421D9CF1)
    65 onecore\external\shared\inc\pshpack2.h (SHA_256: 971D19074639CB36134BB40776CB2F817C53CBD05D748B52468F571932BBCC49)
    66 onecore\external\sdk\inc\winbase.h (SHA_256: F725E17B28EEA1EE66FF75DD2FB95F7AA48B67772171E35026F1FD9F861D6856)
    67 onecore\external\shared\inc\MinWin\apisetcconv.h (SHA_256: 1093683104F97C8C9725BB2E7539DCA22722DC8C5618CD846287E9458698ABFE)
    68 onecore\external\sdk\inc\MinWin\apiquery2.h (SHA_256: 8AC6D7AABAFE5B3A5E58F3A3707240D9B6DA8DA40778BC9157CA8CA0CF08C104)
    69 onecore\external\sdk\inc\MinWin\minwinbase.h (SHA_256: 7D1408F4B8EEBA96AE45892209132258CDE80CAB6DAB192B4CCEEA591972C78B)
    70 onecore\external\sdk\inc\MinWin\libloaderapi.h (SHA_256: 8F48062AA6D707BF8C63D8FB3E6956F331217BE7309D38AC523951AF51CB3224)
    71 onecore\external\sdk\inc\MinWin\processenv.h (SHA_256: 1F1E38CF7AABEE42BBF203BEEE0B9CDE392243006444BDD2ED47566D355442F8)
    72 onecore\external\sdk\inc\MinCore\namespaceapi.h (SHA_256: 3257AD8AF53C5809BE4D5D17ED0FFD8B49451D3F27C1FD747FFDE3E0A7A81583)
    73 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
    74 onecore\external\sdk\inc\wincon.h (SHA_256: 98E33720F9EC8FDED808AB94F111B8335D0BA2FD2246A5ADAB3AAB2CE05503D9)
    75 onecore\external\sdk\inc\MinWin\errhandlingapi.h (SHA_256: 7D71B7E051C9C52ECE96C1E78FE799BBFC03E7B220CB89E8887B7CA10EF1A404)
    76 onecore\external\sdk\inc\wincontypes.h (SHA_256: 209E79FDBBB30971740E59B2DA2D6C86E27C0E9DD02BEE9CBC21736FBD2426AD)
    77 onecore\external\sdk\inc\MinWin\processthreadsapi.h (SHA_256: 3036B32F97A10EFFB762E773CFFC79D2DD7AFA156A591C6243D36491063C6250)
    78 onecore\external\sdk\inc\MinWin\synchapi.h (SHA_256: E7EAD3C223D942A5B8F35336CA01D37B754DAC8F3B05AFE97C9C01A4B9C5F8BA)
    79 onecore\external\sdk\inc\MinWin\threadpoollegacyapiset.h (SHA_256: 87C1630ABF7DC4ED7978F2C4DBACF418F6BCF94CB946E277CB7250770BD44200)
    80 onecore\external\sdk\inc\MinWin\profileapi.h (SHA_256: CFA8E3626DBA11689997D8FCD65B5DFBF4BCEF8DE09DD7E4E881769D48D165A2)
    81 onecore\external\sdk\inc\MinWin\sysinfoapi.h (SHA_256: B0C389DD0128467F14BB02B4B4EA8C6DB6561F1647205C633625AD8265E143CC)
    82 onecore\external\sdk\inc\MinWin\heapapi.h (SHA_256: 22B606B0A4096295272BCAE6FC353C4F159F0CDFC90B5F1A9A712B2FFF50B53F)

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

     0 minkernel\crts\crtw32\misc\amd64\guard_xfg_dispatch.asm (SHA_256: 0815D25F2170A854DA3BD66FADE52AC7F32CAA4DA68BDFD313C3146AC469BB65)
     1 OneCore\Internal\MinWin\Priv_Sdk\Inc\ksamd64.inc (SHA_256: 9055A4B95E26733495A071C9C3963CBD5B1AD1DE573C196725B5BC997B1699B3)
     2 OneCore\Internal\MinWin\Priv_Sdk\Inc\kxamd64.inc (SHA_256: F3DF58BE58A7295E855E8835C44BBC2289179C8C500F7D4F92F1778FDA2363A4)
     3 onecore\external\sdk\inc\macamd64.inc (SHA_256: 020D2680B8B0660A8911F89D30EECC8B438576814457A382690702EAC3740F68)

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

     0 onecore\external\sdk\inc\winnt.h (SHA_256: 1F65487B3AE70B3BC43BB239FCA75177AA34740FC96220D64BC65E6068EC7FED)
     1 minkernel\crts\crtw32\h\errno.h (SHA_256: 540912FD9C174CF0B25B3291B2F5278269561599D9901DC96C8F866253B7B1A0)
     2 minkernel\crts\crtw32\h\ctype.h (SHA_256: E690BD5A03B64B2B219C4A2A7758D03BB27DD981C3EDB3ABA9DE6A2C3C203409)
     3 onecore\external\sdk\inc\MinWin\winreg.h (SHA_256: 8249EEBFAA3FCA0CBA35E00877BC38A369DB87738043DC4BBA0975352A03323D)
     4 onecore\external\sdk\inc\MinWin\handleapi.h (SHA_256: 72D7104C848446047353E765A541E1802B4510C7A74985E7D9973004F4602FAC)
     5 onecore\external\sdk\inc\reason.h (SHA_256: 30540EB35DAA79C7A5CB98059430DF480E86B549B7980247288DA8A2801ADD1D)
     6 onecore\external\sdk\inc\MinWin\interlockedapi.h (SHA_256: 4B0D3BC138EAAB8DC9DD40BFB109F5FEA4CBD2CAAF92D63A4CF60A8EDCFB0E3A)
     7 onecore\external\sdk\inc\MinCore\consoleapi3.h (SHA_256: 1E734C1D2625E719A4547A6E4F647A888D804D2CFEF5EE3A85C83119421D9CF1)
     8 onecore\external\shared\inc\pshpack2.h (SHA_256: 971D19074639CB36134BB40776CB2F817C53CBD05D748B52468F571932BBCC49)
     9 onecore\external\sdk\inc\winbase.h (SHA_256: F725E17B28EEA1EE66FF75DD2FB95F7AA48B67772171E35026F1FD9F861D6856)
    10 onecore\external\shared\inc\MinWin\apisetcconv.h (SHA_256: 1093683104F97C8C9725BB2E7539DCA22722DC8C5618CD846287E9458698ABFE)
    11 onecore\external\sdk\inc\MinWin\apiquery2.h (SHA_256: 8AC6D7AABAFE5B3A5E58F3A3707240D9B6DA8DA40778BC9157CA8CA0CF08C104)
    12 onecore\external\sdk\inc\MinWin\minwinbase.h (SHA_256: 7D1408F4B8EEBA96AE45892209132258CDE80CAB6DAB192B4CCEEA591972C78B)
    13 onecore\external\sdk\inc\MinWin\libloaderapi.h (SHA_256: 8F48062AA6D707BF8C63D8FB3E6956F331217BE7309D38AC523951AF51CB3224)
    14 onecore\external\sdk\inc\MinWin\processenv.h (SHA_256: 1F1E38CF7AABEE42BBF203BEEE0B9CDE392243006444BDD2ED47566D355442F8)
    15 onecore\external\sdk\inc\MinCore\namespaceapi.h (SHA_256: 3257AD8AF53C5809BE4D5D17ED0FFD8B49451D3F27C1FD747FFDE3E0A7A81583)
    16 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
    17 onecore\external\sdk\inc\wincon.h (SHA_256: 98E33720F9EC8FDED808AB94F111B8335D0BA2FD2246A5ADAB3AAB2CE05503D9)
    18 onecore\external\sdk\inc\MinWin\errhandlingapi.h (SHA_256: 7D71B7E051C9C52ECE96C1E78FE799BBFC03E7B220CB89E8887B7CA10EF1A404)
    19 onecore\external\sdk\inc\wincontypes.h (SHA_256: 209E79FDBBB30971740E59B2DA2D6C86E27C0E9DD02BEE9CBC21736FBD2426AD)
    20 onecore\external\sdk\inc\MinWin\processthreadsapi.h (SHA_256: 3036B32F97A10EFFB762E773CFFC79D2DD7AFA156A591C6243D36491063C6250)
    21 onecore\external\sdk\inc\MinWin\synchapi.h (SHA_256: E7EAD3C223D942A5B8F35336CA01D37B754DAC8F3B05AFE97C9C01A4B9C5F8BA)
    22 onecore\external\sdk\inc\MinWin\threadpoollegacyapiset.h (SHA_256: 87C1630ABF7DC4ED7978F2C4DBACF418F6BCF94CB946E277CB7250770BD44200)
    23 minkernel\crts\crtw32\misc\amd64\cpuinfo.c (SHA_256: 7C7D57EFC0B47F0F24A5394017546C2CD432675C465E87E640B28417F08FC361)
    24 onecore\external\sdk\inc\MinWin\profileapi.h (SHA_256: CFA8E3626DBA11689997D8FCD65B5DFBF4BCEF8DE09DD7E4E881769D48D165A2)
    25 onecore\external\sdk\inc\MinWin\sysinfoapi.h (SHA_256: B0C389DD0128467F14BB02B4B4EA8C6DB6561F1647205C633625AD8265E143CC)
    26 onecore\external\sdk\inc\MinWin\heapapi.h (SHA_256: 22B606B0A4096295272BCAE6FC353C4F159F0CDFC90B5F1A9A712B2FFF50B53F)
    27 onecore\external\sdk\inc\MinCore\systemtopologyapi.h (SHA_256: 8BFD1A78CC30B6D33C88E3F61AE2AC6468CEE0607352EE8D096BA5375B4D401C)
    28 onecore\external\sdk\inc\winsvc.h (SHA_256: 8108FE3F099960014F36D1B2DA425A8382E9D839DE3477EB06F181289A0685C8)
    29 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    30 onecore\external\sdk\inc\MinCore\processtopologyapi.h (SHA_256: 4507A5E0C4F41D19A80D1543833F1A9D90277BC376441B277884BB043BE24BA5)
    31 onecore\external\sdk\inc\MinWin\jobapi.h (SHA_256: 08DDFF85EC80F12B156837BBCE4F969480FEA0E32A08DADE7CC16ACECB0892D1)
    32 OneCore\Internal\MinWin\Priv_Sdk\Inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    33 onecore\external\sdk\inc\MinCore\jobapi2.h (SHA_256: 398EF4F8277A1EDB58E41C5E8233E8DCE7744522BA8E989D904E93991A254C71)
    34 onecore\external\sdk\inc\MinWin\threadpoolapiset.h (SHA_256: E91D7DEE4D22CA848E3110A4C55F32E1918DC865479343896AEC9AB653EE5110)
    35 onecore\external\sdk\inc\MinWin\securityappcontainer.h (SHA_256: 85CC13ED7028960BD7F97C91F98B96825B46F4B8BC386AED2F2A6A9BCCBE4083)
    36 onecore\external\sdk\inc\mcx.h (SHA_256: 4EE416B2D24E45CFC5D35CE5B34833B64B34FD9A39957C66D75509F6D3B8F972)
    37 onecore\external\shared\inc\winerror.h (SHA_256: 758571A8A5338EEF7119F1771CDE0D568CF6AC5449EFF6EAD5290F93A9A89DBB)
    38 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
    39 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    40 minkernel\crts\crtw32\h\sect_attribs.h (SHA_256: A57392249791716EBE969A70F1CD2573E1A2BF393B5BCE1E8AC80FB8FE73F0C6)
    41 OneCore\Internal\MinWin\Priv_Sdk\Inc\winnls.h (SHA_256: E47861762A4B51A2689C8A99798A1A7E68335573E03C857E545172B095C5C829)
    42 onecore\external\sdk\inc\MinWin\realtimeapiset.h (SHA_256: 00C874B981A1242EE4EBC21E6AE96A69D7AA70662D820CEFFBABCFEA859B03E4)
    43 onecore\external\sdk\inc\MinWin\datetimeapi.h (SHA_256: 9B6EBD7FB7B32FE7EA6B3CE76F7C26ED9466821C2461FB71707AC2E2946C075C)
    44 minkernel\crts\crtw32\h\string.h (SHA_256: 3CCF1B07C82224B8A8B757F4CD3FD57C9941945052EAF80BE904E8904EE2A652)
    45 onecore\external\sdk\inc\MinWin\fibersapi.h (SHA_256: F8EEADC28F8E3E4C7BFD1217D55315EB31D63F3D86C66A3948D74CEB8E7A00D0)
    46 onecore\external\shared\inc\pshpack8.h (SHA_256: 47F3972A1211E3A5AC32B18FAE1A824DB087DC7DC562D152E9CCAB9B297FAEF0)
    47 onecore\external\sdk\inc\MinWin\timezoneapi.h (SHA_256: 621C0252A8A831813592C4A95E183A2E7AE55EFBBD7B8AD886AF7D8871FC4D50)
    48 onecore\external\sdk\inc\MinCore\consoleapi2.h (SHA_256: 4507BF49A004370CE01767CC9FD3FC85CEE32F79CD8890B06CD5AB8D05B94408)
    49 onecore\external\sdk\inc\MinWin\stringapiset.h (SHA_256: 08BD9C295CE9FFDACA185512A2B318B47027B02157B492104230EFC821FBA23B)
    50 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    51 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    52 OneCore\Internal\MinWin\Priv_Sdk\Inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    53 onecore\external\sdk\inc\MinWin\debugapi.h (SHA_256: 36FD04BA37AACF404CB82EFFB9A38634B502996F079A0121AEEA5191F5F424FB)
    54 onecore\external\sdk\inc\MinWin\securitybaseapi.h (SHA_256: 81971187B82B27DF42477761E562D883D24B2E81F50F2A8CEF4EC067C348F8A5)
    55 onecore\external\sdk\inc\MinWin\memoryapi.h (SHA_256: 58EDCC2090C411A1821E04A6A2954C258FD59DED44440BDD671984027E0A852F)
    56 onecore\external\sdk\inc\MinWin\namedpipeapi.h (SHA_256: E0F99E5F4319426325DDBF4A6D4E23298EED9B0806EF49ED6C95AD9DECE70D82)
    57 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    58 onecore\external\sdk\inc\fileapifromapp.h (SHA_256: D07110E7F7989AEEF7EED77D5F584F3EE60FF2CE58BC1A374D70151A18B4A664)
    59 onecore\external\sdk\inc\MinWin\fileapi.h (SHA_256: 8318076677FBA276E494EDC39AAAC11FBD9BC61CA2D36BB68BDCCCD260ECE977)
    60 minkernel\crts\crtw32\h\stdarg.h (SHA_256: 3678A0ED176C75965A58C391F6E659DA42454B83E3F3F21438513731165962FA)
    61 onecore\external\shared\inc\windef.h (SHA_256: 040535B19A60264E5FE6971F7CB13CBF24BE17ABEEAA8ACD21E44F5D7DFE8D22)
    62 onecore\external\sdk\inc\MinWin\consoleapi.h (SHA_256: 6021076F89DF0ACBDD1E38F4588342C2E2E164B7521A99D75AFDFE434E7AEBA3)
    63 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    64 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    65 onecore\external\shared\inc\MinWin\minwindef.h (SHA_256: A9CF08BE8407A196104124D5ADE2308E204E47D3252BCD2AD20D0F2137843D62)
    66 minkernel\crts\crtw32\h\crtdbg.h (SHA_256: E6B39E12C5B137FBAA425C8B3191CCC86696D90FE577364ABE064009B2FD17A4)
    67 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    68 onecore\external\sdk\inc\MinWin\wow64apiset.h (SHA_256: 5DE0DA90CA805C29B82636D0C10D2A7E109D7FD1A7265981CBB6AD11B8CEE926)
    69 onecore\external\sdk\inc\MinWin\ioapiset.h (SHA_256: 7C3F659F98B3F1748A314BD64106583D01649333E0419B66232B4F64B3F85B0C)
    70 minkernel\crts\crtw32\h\internal.h (SHA_256: E6EB9FC31692E727E95832411D244635CA95BCE1F0585C424E5118641A9D22B1)
    71 OneCore\Internal\minwin\inc\windowscore.h (SHA_256: 56C3E930B51494F59B2464CDAE73C9C0CE7F19D7FDA187497F7E588FFD0C5BAC)
    72 minkernel\crts\crtw32\h\limits.h (SHA_256: 31A8AFC3D6995B443ADAA4EA54B7F058BDF1100F0229FF33957CA3AFBDED8B4C)
    73 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    74 minkernel\crts\crtw32\h\excpt.h (SHA_256: 0C9127D8A2783860C193DE8942FAC10185D697B7F716940F68E93895C9F22976)
    75 minkernel\crts\crtw32\h\crtdefs.h (SHA_256: 3845D81E3C76A057D38446F7C6B4F8ADA11492BAA806692A15FF06647F009678)
    76 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    77 onecore\external\sdk\inc\MinWin\utilapiset.h (SHA_256: A8E0F6001C784B3AD9FEB44C61D96B58C57366C473832CA8B2EA5DE05877B470)
    78 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    79 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    80 onecore\external\sdk\inc\MinWin\enclaveapi.h (SHA_256: 8D76135FF40140C6D64A09D173E1276FEFB96A2DB9073B5AB26F250C4733F999)
    81 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    82 onecore\external\sdk\inc\MinWin\verrsrc.h (SHA_256: FF9BEE8EE5B7AA81EAF79A1EAB0E93BD307601E87D3B80A73F24984E9C951C61)
    83 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    84 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    85 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    86 minkernel\crts\crtw32\h\vadefs.h (SHA_256: E7439E484D20A8B0349E41CC3E7F490CD014D4F2DA86FE9C1C2D5517D153B791)
    87 minkernel\crts\crtw32\h\cruntime.h (SHA_256: BDF3A8FE949F90A75747F0C40300EF591B3158324BB479ABCFFA386725C2736F)

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

     0 minkernel\tools\gs_support\kmodefastfail\amd64\amdsecgs.asm (SHA_256: ED0C3D0F826AA20B652BBDACAA1339E37DD3134D9F097130AA4D2A855CF4A89B)
     1 OneCore\Private\MinWin\Priv_Sdk\Inc\gs\crt_amdsecgs.asm (SHA_256: 0BD9A240AD1D933E6141DABDDF672C5C18A8698DC3A2FC01CECEDDFCAFC9EECF)
     2 onecore\external\shared\inc\ksamd64.inc (SHA_256: 832F26C59686CF6864DA83681F97FC6FEE3A7006399C48EFA777D4330A499EFB)
     3 onecore\external\shared\inc\kxamd64.inc (SHA_256: 387C8E7172F5F4E828C793BBCB3F6E0336556A91E3F3CEDC9E1AB0A1DA57CDC9)
     4 onecore\external\sdk\inc\macamd64.inc (SHA_256: 020D2680B8B0660A8911F89D30EECC8B438576814457A382690702EAC3740F68)

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

     0 minkernel\tools\gs_support\kmodefastfail\gs_support.c (SHA_256: ED352DE838E47375FA29E29D6C5FD8F693DC3AD5BB434C75CAA329B89473B7F8)
     1 onecore\external\shared\inc\MinWin\ntdef.h (SHA_256: A20A36D90D90F6167B9BF6B24409AE3CD4559970FDE95B5E8852C0B6E7B484FE)
     2 onecore\external\sdk\inc\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
     3 onecore\external\ddk\inc\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
     4 onecore\external\shared\inc\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
     5 onecore\external\shared\inc\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
     6 onecore\external\shared\inc\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
     7 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
     8 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
     9 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    10 onecore\external\ddk\inc\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
    11 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    12 onecore\external\sdk\inc\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    13 onecore\external\sdk\inc\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    14 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    15 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    16 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    17 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    18 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    19 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    20 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    21 onecore\external\sdk\inc\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    22 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    23 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    24 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    25 onecore\external\shared\inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    26 onecore\external\sdk\inc\crt\process.h (SHA_256: 27BC3D270F7293D6EE3DCD68C8711F2A5C3CC358DF4DC7B011F939C59A48C763)
    27 onecore\external\shared\inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    28 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    29 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    30 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    31 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    32 onecore\external\sdk\inc\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    33 onecore\external\shared\inc\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    34 onecore\external\shared\inc\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
    35 onecore\external\shared\inc\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

     0 minkernel\tools\gs_support\kmodefastfail\gs_report.c (SHA_256: 85C5A14BE0D3B1991A2EFBA3900237947E9CBB8F627B0F10DB788CDBBDE6A496)
     1 onecore\external\shared\inc\MinWin\ntdef.h (SHA_256: A20A36D90D90F6167B9BF6B24409AE3CD4559970FDE95B5E8852C0B6E7B484FE)
     2 onecore\external\sdk\inc\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
     3 onecore\external\ddk\inc\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
     4 onecore\external\shared\inc\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
     5 onecore\external\shared\inc\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
     6 onecore\external\shared\inc\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
     7 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
     8 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
     9 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    10 onecore\external\ddk\inc\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
    11 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    12 onecore\external\sdk\inc\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    13 onecore\external\sdk\inc\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    14 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    15 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    16 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    17 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    18 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    19 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    20 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    21 onecore\external\sdk\inc\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    22 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    23 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    24 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    25 onecore\external\shared\inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    26 onecore\external\shared\inc\dontuse.h (SHA_256: 32F810E18BBF1AB64E2C71D99E18E6C2255BC4C885ED34B51905C75C5D39E7C3)
    27 onecore\external\sdk\inc\crt\process.h (SHA_256: 27BC3D270F7293D6EE3DCD68C8711F2A5C3CC358DF4DC7B011F939C59A48C763)
    28 onecore\external\shared\inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    29 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    30 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    31 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    32 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    33 onecore\external\sdk\inc\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    34 onecore\external\shared\inc\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    35 onecore\external\shared\inc\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
    36 onecore\external\shared\inc\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

     0 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
     1 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
     2 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
     3 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfrequest.h (SHA_256: C415B5F5C19FCDCD2AAE14D380F57561B7ED17BA2B9A3B7317A5BE01437D8405)
     4 onecore\external\shared\inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
     5 OneCore\Internal\MinWin\Priv_Sdk\Inc\kmdf\private\FxIFR.h (SHA_256: 0854667CCFDB69CE9DBB6B2FC94527DF549C8B5D9D6C208EC8FC81236839DA78)
     6 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfstatus.h (SHA_256: 99AA63969F9E7981A9FCC922559B5F317778E35CD780F678AF04101A7B8BD806)
     7 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfassert.h (SHA_256: 1B676A9947C665C1DC88DFE26D7B32F1088DD572B8E3A9204CFDABA4504D6A39)
     8 onecore\external\shared\inc\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
     9 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcore.h (SHA_256: C8E8C98D785E50B4BBA92F1F9304D1474B340EA71DD37F96B1D719909FECABDB)
    10 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfverifier.h (SHA_256: B82AD733CBE1C8381560E6C86DAEABE7B2C81860D25B46E6F88E390829EE69D0)
    11 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffdo.h (SHA_256: 0C5A357EA22F50003E41E909599904A3FE0B86633325425B9CAF8A52B50C87F9)
    12 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdevice.h (SHA_256: 6AD0AD3C8D8C5EA57AE9C570D8293B4A30C9F135551A497A133488D732ECC235)
    13 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    14 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfbugcodes.h (SHA_256: 58BABB4D84E768BFCEF053F6026B5C04459E5997A2A0406BAD9C3252D66AD655)
    15 minkernel\wdf\framework\kmdf\src\dynamic\stub\stub.cpp (SHA_256: CFBACD16EAF74383D747C563DF1127D31E30F81FBDE63561180340C85D602E6A)
    16 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcollection.h (SHA_256: C069DBD65402DD409746C2D0A243D9B3A646A2B9066284F6D18E07A93A8245B8)
    17 sdk\inc\ntverp.h (SHA_256: 171079E5B9979132423D346310D471DE2FB60A7C6BDD3423F9E6E00EDD08622E)
    18 sdk\inc\ntverp.ver (SHA_256: 4C2B736BD7FA40DACE4FCAA4B64A8A8999295AA9D16A1B3D4080DB27BBE5E936)
    19 onecore\external\ddk\inc\wdf\kmdf\1.15\wdf.h (SHA_256: 5B4AFDB7D7A8347BB48BA644E6BE12471ABE2B2503752AA0B120328E6CCB8000)
    20 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
    21 onecore\external\ddk\inc\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
    22 onecore\external\ddk\inc\wdf\kmdf\1.15\wdftimer.h (SHA_256: 3077550EFCD5967261E9507F8C8CE98EAD63EE9335E10B995E17B8386E11B9BA)
    23 onecore\external\ddk\inc\wdf\kmdf\1.15\wdftypes.h (SHA_256: AD0CB5C783BDF29281FA05287234A1A704BB65BDFBB91F97CC7720E1A981D597)
    24 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    25 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfDmaEnabler.h (SHA_256: DCD9987E6FD5DB1F8926DA0E55453F6A8BC594D9DFEFF12BD5AE11CBB3CEDF5B)
    26 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfinterrupt.h (SHA_256: AEA98EEE25226092782EF1337362BF8A1DF91CD7D758AF9C9CA9464315643624)
    27 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfpool.h (SHA_256: A6EC2A2019F63BD79BA5C093B06A78362312873727CCDB6E330C4ADFD55E2A74)
    28 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfobject.h (SHA_256: 24D80061477F4E7676183F160094090C52F2F0018DDCFA14554BA131BD783006)
    29 onecore\external\ddk\inc\wdmsec.h (SHA_256: 126023E670B4ED013E1109ACA2AE0354F15D411981CBDADFA1F4B2343D6DF718)
    30 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdriver.h (SHA_256: B575DC21A09593F84CF425520F20F3C16D891439A8F736D0265AF5E8238C7BD4)
    31 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfglobals.h (SHA_256: 58DD0022F0A10AEA5648A56ECDF17833431CA251CD0A74D6CEF6096CE5C62F25)
    32 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfstring.h (SHA_256: 313107C1656E0D3BB0D4C62CB73B7DFB0917F1C5CE655A976C0303D09637A8FA)
    33 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    34 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfresource.h (SHA_256: 3DC6E587B90360E8CD078884F28498CA4E0D1806AFBFEFF413A690A70A879518)
    35 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    36 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcontrol.h (SHA_256: 7C9212B8008FBAB8A19B422855DB29AF6930CE04BE7760D0ED24633C9BA14E35)
    37 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
    38 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfiotarget.h (SHA_256: BA3C0C8B69CA043AA53FE42820A51D55D736EEEB1815409D56A564A9F2E5A8FD)
    39 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    40 onecore\external\ddk\inc\ntddk.h (SHA_256: BBA511C4393F870A17293244C329DDAFD91BB259434812502BB8D10A892054D7)
    41 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffuncenum.h (SHA_256: 5E3B8CACFF893D2AAA99ECE776D881FD2129E58DA0219C85996ACC654124FC63)
    42 onecore\external\ddk\inc\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
    43 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    44 onecore\external\shared\inc\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
    45 onecore\external\sdk\inc\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    46 onecore\external\sdk\inc\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    47 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfregistry.h (SHA_256: 1302A06A70DB8C6FA813408E5621E18BC9FEAB80EF7F3DF32B53AB41D5E4D786)
    48 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    49 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfDmaTransaction.h (SHA_256: A227E5A01245FA6CF0F8FFD6A07D522CADED238F3DEAF67FF843678E042ACE42)
    50 onecore\external\ddk\inc\wdf\kmdf\1.15\WdfQueryInterface.h (SHA_256: 34D682CD7F5B92619F05614586C00A56EB5D5F930BAEC8E45693BF534CAFF35B)
    51 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    52 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    53 onecore\external\shared\inc\MinWin\ntdef.h (SHA_256: A20A36D90D90F6167B9BF6B24409AE3CD4559970FDE95B5E8852C0B6E7B484FE)
    54 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    55 onecore\external\sdk\inc\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
    56 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    57 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    58 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfchildlist.h (SHA_256: 070017480E61E0C56D682FC7D7545538D800A0C6BE293B9E22148FA2C59A11E5)
    59 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    60 onecore\external\sdk\inc\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    61 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfsync.h (SHA_256: 859DF8680ABD3A76CD6FE2E497F2A5BBA2DDF060D666CA145A08C9A9F589F23D)
    62 minkernel\wdf\framework\shared\inc\private\common\fxldr.h (SHA_256: 7FE18F854BFA095662DDB9D365C5CD823C728B5054B4AAD89F83F2124A7CD3CA)
    63 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfCommonBuffer.h (SHA_256: 52CD5BB72418DDDF7A68FDEB55034A7B0B2F7C9924B9715685E6EEFECCD956A5)
    64 onecore\external\shared\inc\initguid.h (SHA_256: 422EBCF50B8E8AD2F21A06E7281540F759237EABE37E445605FC45CC45D88314)
    65 OneCore\Private\MinWin\Priv_Sdk\Inc\kmdf\private\wdfldr.h (SHA_256: 18DBD3893FB101E73D303F64E4D29FB2D20054DBA364E24B909622DD6A59C5C0)
    66 onecore\external\shared\inc\MinWin\minwindef.h (SHA_256: A9CF08BE8407A196104124D5ADE2308E204E47D3252BCD2AD20D0F2137843D62)
    67 onecore\external\shared\inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    68 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfpdo.h (SHA_256: BC5BC7339E32ECE3284786923F683300D33FDB5646BDB0200A092A6F53B88CB2)
    69 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdpc.h (SHA_256: 3FB15CD71F23B01A7E570EC33D56B08849739D10DAA44D607668D62A21E1EAEC)
    70 onecore\external\ddk\inc\wdf\kmdf\1.15\WdfWMI.h (SHA_256: CA384FED557579F9AA36F81FAEAD8EF70641681919993BF046F1E87ED70CAC6E)
    71 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfroletypes.h (SHA_256: A7F0FB482229F46E50A0875326CE601E7E382537E3FB44C2C5E4D539281B3F29)
    72 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfminiport.h (SHA_256: 424FBE026854D71EAF25F5F5AF8F9381D716D6BFF18BACD38FF76F045922DA79)
    73 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfworkitem.h (SHA_256: D44B7221157519DA5786AD51DB73641F1D092BEAB6FC299B98B34AE2B07C286D)
    74 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfhwaccess.h (SHA_256: 7B73B6B106F2B9F432B5D08FA535117EE63145CA3DD2EB621EA937A4A7912BC7)
    75 onecore\internal\ddk\inc\wdf\kmdf\1.15\wdfcx.h (SHA_256: 8C9D617E5EE11BE1D5295FF450D7800F7F0B0FA8E89AD16290566C7DA4A10711)
    76 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfio.h (SHA_256: 6ACAF563EF9DAA496901E3B718E7FB9027CA10107B4D2A8D085D3377F32C6234)
    77 onecore\internal\ddk\inc\wdf\kmdf\1.15\wdfcxbase.h (SHA_256: 5AFFE36DB587DADA6F0A7649D9FA76F2691957D19A2D55EEB8A6C846EAB6A1FC)
    78 onecore\external\sdk\inc\crt\process.h (SHA_256: 27BC3D270F7293D6EE3DCD68C8711F2A5C3CC358DF4DC7B011F939C59A48C763)
    79 onecore\external\sdk\inc\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    80 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfmemory.h (SHA_256: E8F318E9D94464F7DD3639E083DB2697AFF93F002D7E9D0AA61F7A82C57733D4)
    81 onecore\external\shared\inc\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    82 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffileobject.h (SHA_256: 68E2DC75733DE75F7D698916D0EDF594E664006617011092CC3631DC0F9367D1)
    83 onecore\external\shared\inc\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
    84 onecore\external\shared\inc\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
    85 onecore\external\shared\inc\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

     0 onecore\external\ddk\inc\wdf\kmdf\1.15\WdfWMI.h (SHA_256: CA384FED557579F9AA36F81FAEAD8EF70641681919993BF046F1E87ED70CAC6E)
     1 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
     2 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfroletypes.h (SHA_256: A7F0FB482229F46E50A0875326CE601E7E382537E3FB44C2C5E4D539281B3F29)
     3 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
     4 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
     5 onecore\external\shared\inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
     6 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfworkitem.h (SHA_256: D44B7221157519DA5786AD51DB73641F1D092BEAB6FC299B98B34AE2B07C286D)
     7 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfhwaccess.h (SHA_256: 7B73B6B106F2B9F432B5D08FA535117EE63145CA3DD2EB621EA937A4A7912BC7)
     8 onecore\internal\ddk\inc\wdf\kmdf\1.15\wdfcx.h (SHA_256: 8C9D617E5EE11BE1D5295FF450D7800F7F0B0FA8E89AD16290566C7DA4A10711)
     9 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfio.h (SHA_256: 6ACAF563EF9DAA496901E3B718E7FB9027CA10107B4D2A8D085D3377F32C6234)
    10 onecore\internal\ddk\inc\wdf\kmdf\1.15\wdfcxbase.h (SHA_256: 5AFFE36DB587DADA6F0A7649D9FA76F2691957D19A2D55EEB8A6C846EAB6A1FC)
    11 onecore\external\shared\inc\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
    12 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfmemory.h (SHA_256: E8F318E9D94464F7DD3639E083DB2697AFF93F002D7E9D0AA61F7A82C57733D4)
    13 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffileobject.h (SHA_256: 68E2DC75733DE75F7D698916D0EDF594E664006617011092CC3631DC0F9367D1)
    14 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfrequest.h (SHA_256: C415B5F5C19FCDCD2AAE14D380F57561B7ED17BA2B9A3B7317A5BE01437D8405)
    15 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    16 minkernel\wdf\framework\kmdf\src\dynamic\stub\inittypes.cpp (SHA_256: CAD0F058188ABB6EA3CF38BCE9128EDF46847449B4CDE04D827D9B43B267BB30)
    17 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
    18 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfstatus.h (SHA_256: 99AA63969F9E7981A9FCC922559B5F317778E35CD780F678AF04101A7B8BD806)
    19 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfassert.h (SHA_256: 1B676A9947C665C1DC88DFE26D7B32F1088DD572B8E3A9204CFDABA4504D6A39)
    20 onecore\external\ddk\inc\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
    21 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    22 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcore.h (SHA_256: C8E8C98D785E50B4BBA92F1F9304D1474B340EA71DD37F96B1D719909FECABDB)
    23 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfverifier.h (SHA_256: B82AD733CBE1C8381560E6C86DAEABE7B2C81860D25B46E6F88E390829EE69D0)
    24 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffdo.h (SHA_256: 0C5A357EA22F50003E41E909599904A3FE0B86633325425B9CAF8A52B50C87F9)
    25 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdevice.h (SHA_256: 6AD0AD3C8D8C5EA57AE9C570D8293B4A30C9F135551A497A133488D732ECC235)
    26 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfbugcodes.h (SHA_256: 58BABB4D84E768BFCEF053F6026B5C04459E5997A2A0406BAD9C3252D66AD655)
    27 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    28 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcollection.h (SHA_256: C069DBD65402DD409746C2D0A243D9B3A646A2B9066284F6D18E07A93A8245B8)
    29 onecore\external\ddk\inc\wdf\kmdf\1.15\wdf.h (SHA_256: 5B4AFDB7D7A8347BB48BA644E6BE12471ABE2B2503752AA0B120328E6CCB8000)
    30 onecore\external\ddk\inc\wdf\kmdf\1.15\wdftimer.h (SHA_256: 3077550EFCD5967261E9507F8C8CE98EAD63EE9335E10B995E17B8386E11B9BA)
    31 onecore\external\ddk\inc\wdf\kmdf\1.15\wdftypes.h (SHA_256: AD0CB5C783BDF29281FA05287234A1A704BB65BDFBB91F97CC7720E1A981D597)
    32 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfDmaEnabler.h (SHA_256: DCD9987E6FD5DB1F8926DA0E55453F6A8BC594D9DFEFF12BD5AE11CBB3CEDF5B)
    33 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfinterrupt.h (SHA_256: AEA98EEE25226092782EF1337362BF8A1DF91CD7D758AF9C9CA9464315643624)
    34 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    35 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
    36 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfpool.h (SHA_256: A6EC2A2019F63BD79BA5C093B06A78362312873727CCDB6E330C4ADFD55E2A74)
    37 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    38 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfobject.h (SHA_256: 24D80061477F4E7676183F160094090C52F2F0018DDCFA14554BA131BD783006)
    39 onecore\external\ddk\inc\ntddk.h (SHA_256: BBA511C4393F870A17293244C329DDAFD91BB259434812502BB8D10A892054D7)
    40 onecore\external\ddk\inc\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
    41 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    42 onecore\external\shared\inc\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
    43 onecore\external\sdk\inc\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    44 onecore\external\ddk\inc\wdmsec.h (SHA_256: 126023E670B4ED013E1109ACA2AE0354F15D411981CBDADFA1F4B2343D6DF718)
    45 onecore\external\sdk\inc\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    46 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    47 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    48 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdriver.h (SHA_256: B575DC21A09593F84CF425520F20F3C16D891439A8F736D0265AF5E8238C7BD4)
    49 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfglobals.h (SHA_256: 58DD0022F0A10AEA5648A56ECDF17833431CA251CD0A74D6CEF6096CE5C62F25)
    50 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    51 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfstring.h (SHA_256: 313107C1656E0D3BB0D4C62CB73B7DFB0917F1C5CE655A976C0303D09637A8FA)
    52 onecore\external\shared\inc\MinWin\ntdef.h (SHA_256: A20A36D90D90F6167B9BF6B24409AE3CD4559970FDE95B5E8852C0B6E7B484FE)
    53 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    54 onecore\external\sdk\inc\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
    55 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    56 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfresource.h (SHA_256: 3DC6E587B90360E8CD078884F28498CA4E0D1806AFBFEFF413A690A70A879518)
    57 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    58 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    59 onecore\external\sdk\inc\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    60 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcontrol.h (SHA_256: 7C9212B8008FBAB8A19B422855DB29AF6930CE04BE7760D0ED24633C9BA14E35)
    61 onecore\external\shared\inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    62 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfiotarget.h (SHA_256: BA3C0C8B69CA043AA53FE42820A51D55D736EEEB1815409D56A564A9F2E5A8FD)
    63 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffuncenum.h (SHA_256: 5E3B8CACFF893D2AAA99ECE776D881FD2129E58DA0219C85996ACC654124FC63)
    64 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfregistry.h (SHA_256: 1302A06A70DB8C6FA813408E5621E18BC9FEAB80EF7F3DF32B53AB41D5E4D786)
    65 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfDmaTransaction.h (SHA_256: A227E5A01245FA6CF0F8FFD6A07D522CADED238F3DEAF67FF843678E042ACE42)
    66 onecore\external\ddk\inc\wdf\kmdf\1.15\WdfQueryInterface.h (SHA_256: 34D682CD7F5B92619F05614586C00A56EB5D5F930BAEC8E45693BF534CAFF35B)
    67 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfchildlist.h (SHA_256: 070017480E61E0C56D682FC7D7545538D800A0C6BE293B9E22148FA2C59A11E5)
    68 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfsync.h (SHA_256: 859DF8680ABD3A76CD6FE2E497F2A5BBA2DDF060D666CA145A08C9A9F589F23D)
    69 minkernel\wdf\framework\shared\inc\private\common\fxldr.h (SHA_256: 7FE18F854BFA095662DDB9D365C5CD823C728B5054B4AAD89F83F2124A7CD3CA)
    70 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfCommonBuffer.h (SHA_256: 52CD5BB72418DDDF7A68FDEB55034A7B0B2F7C9924B9715685E6EEFECCD956A5)
    71 onecore\external\shared\inc\initguid.h (SHA_256: 422EBCF50B8E8AD2F21A06E7281540F759237EABE37E445605FC45CC45D88314)
    72 OneCore\Private\MinWin\Priv_Sdk\Inc\kmdf\private\wdfldr.h (SHA_256: 18DBD3893FB101E73D303F64E4D29FB2D20054DBA364E24B909622DD6A59C5C0)
    73 onecore\external\shared\inc\MinWin\minwindef.h (SHA_256: A9CF08BE8407A196104124D5ADE2308E204E47D3252BCD2AD20D0F2137843D62)
    74 onecore\external\sdk\inc\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    75 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfpdo.h (SHA_256: BC5BC7339E32ECE3284786923F683300D33FDB5646BDB0200A092A6F53B88CB2)
    76 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdpc.h (SHA_256: 3FB15CD71F23B01A7E570EC33D56B08849739D10DAA44D607668D62A21E1EAEC)
    77 onecore\external\shared\inc\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    78 onecore\external\shared\inc\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
    79 onecore\external\shared\inc\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
    80 onecore\external\shared\inc\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

     0 onecore\external\ddk\inc\wdf\kmdf\1.15\WdfWMI.h (SHA_256: CA384FED557579F9AA36F81FAEAD8EF70641681919993BF046F1E87ED70CAC6E)
     1 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
     2 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfroletypes.h (SHA_256: A7F0FB482229F46E50A0875326CE601E7E382537E3FB44C2C5E4D539281B3F29)
     3 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
     4 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
     5 onecore\external\shared\inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
     6 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfworkitem.h (SHA_256: D44B7221157519DA5786AD51DB73641F1D092BEAB6FC299B98B34AE2B07C286D)
     7 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfhwaccess.h (SHA_256: 7B73B6B106F2B9F432B5D08FA535117EE63145CA3DD2EB621EA937A4A7912BC7)
     8 onecore\internal\ddk\inc\wdf\kmdf\1.15\wdfcx.h (SHA_256: 8C9D617E5EE11BE1D5295FF450D7800F7F0B0FA8E89AD16290566C7DA4A10711)
     9 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfio.h (SHA_256: 6ACAF563EF9DAA496901E3B718E7FB9027CA10107B4D2A8D085D3377F32C6234)
    10 onecore\internal\ddk\inc\wdf\kmdf\1.15\wdfcxbase.h (SHA_256: 5AFFE36DB587DADA6F0A7649D9FA76F2691957D19A2D55EEB8A6C846EAB6A1FC)
    11 onecore\external\shared\inc\devpropdef.h (SHA_256: 79E4631E9E0CFDA0975270F71C9970D731352AD8D198D6706AC13A3970CEAA98)
    12 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfmemory.h (SHA_256: E8F318E9D94464F7DD3639E083DB2697AFF93F002D7E9D0AA61F7A82C57733D4)
    13 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffileobject.h (SHA_256: 68E2DC75733DE75F7D698916D0EDF594E664006617011092CC3631DC0F9367D1)
    14 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfrequest.h (SHA_256: C415B5F5C19FCDCD2AAE14D380F57561B7ED17BA2B9A3B7317A5BE01437D8405)
    15 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    16 minkernel\wdf\framework\kmdf\src\dynamic\stub\classbind.cpp (SHA_256: F23F36158E615F31896F6EB540DA55FAA139E870170F4F391120A6BDCC6B5827)
    17 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
    18 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfstatus.h (SHA_256: 99AA63969F9E7981A9FCC922559B5F317778E35CD780F678AF04101A7B8BD806)
    19 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfassert.h (SHA_256: 1B676A9947C665C1DC88DFE26D7B32F1088DD572B8E3A9204CFDABA4504D6A39)
    20 onecore\external\ddk\inc\mce.h (SHA_256: 179741D7543A10E6550933CD515AC1141F1B6A2D72373679BC17637EF9BBA1D5)
    21 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    22 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcore.h (SHA_256: C8E8C98D785E50B4BBA92F1F9304D1474B340EA71DD37F96B1D719909FECABDB)
    23 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfverifier.h (SHA_256: B82AD733CBE1C8381560E6C86DAEABE7B2C81860D25B46E6F88E390829EE69D0)
    24 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffdo.h (SHA_256: 0C5A357EA22F50003E41E909599904A3FE0B86633325425B9CAF8A52B50C87F9)
    25 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdevice.h (SHA_256: 6AD0AD3C8D8C5EA57AE9C570D8293B4A30C9F135551A497A133488D732ECC235)
    26 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfbugcodes.h (SHA_256: 58BABB4D84E768BFCEF053F6026B5C04459E5997A2A0406BAD9C3252D66AD655)
    27 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
    28 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcollection.h (SHA_256: C069DBD65402DD409746C2D0A243D9B3A646A2B9066284F6D18E07A93A8245B8)
    29 onecore\external\ddk\inc\wdf\kmdf\1.15\wdf.h (SHA_256: 5B4AFDB7D7A8347BB48BA644E6BE12471ABE2B2503752AA0B120328E6CCB8000)
    30 onecore\external\ddk\inc\wdf\kmdf\1.15\wdftimer.h (SHA_256: 3077550EFCD5967261E9507F8C8CE98EAD63EE9335E10B995E17B8386E11B9BA)
    31 onecore\external\ddk\inc\wdf\kmdf\1.15\wdftypes.h (SHA_256: AD0CB5C783BDF29281FA05287234A1A704BB65BDFBB91F97CC7720E1A981D597)
    32 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfDmaEnabler.h (SHA_256: DCD9987E6FD5DB1F8926DA0E55453F6A8BC594D9DFEFF12BD5AE11CBB3CEDF5B)
    33 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfinterrupt.h (SHA_256: AEA98EEE25226092782EF1337362BF8A1DF91CD7D758AF9C9CA9464315643624)
    34 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    35 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
    36 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfpool.h (SHA_256: A6EC2A2019F63BD79BA5C093B06A78362312873727CCDB6E330C4ADFD55E2A74)
    37 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    38 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfobject.h (SHA_256: 24D80061477F4E7676183F160094090C52F2F0018DDCFA14554BA131BD783006)
    39 onecore\external\ddk\inc\ntddk.h (SHA_256: BBA511C4393F870A17293244C329DDAFD91BB259434812502BB8D10A892054D7)
    40 onecore\external\ddk\inc\wdm.h (SHA_256: 0FFF2D41AA741CEA336E6F41B54EF27E4D67821450BFB507B0CC8AF8A9606A86)
    41 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    42 onecore\external\shared\inc\evntprov.h (SHA_256: C5CF9EE283402BD506EADA2830FEE50BCCFEFCB07439C29BE1D3181A6DE81833)
    43 onecore\external\sdk\inc\crt\excpt.h (SHA_256: 015D650C195A1CAC8301DA42B95A9FCD37D232F5EAEF3C0F3C2769DEF2B871B2)
    44 onecore\external\ddk\inc\wdmsec.h (SHA_256: 126023E670B4ED013E1109ACA2AE0354F15D411981CBDADFA1F4B2343D6DF718)
    45 onecore\external\sdk\inc\crt\crtdefs.h (SHA_256: 1BC368BCD7A3906652F93EC5CB0D6E281C3C6039A1984D7EDE62028E5C11D82B)
    46 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    47 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    48 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdriver.h (SHA_256: B575DC21A09593F84CF425520F20F3C16D891439A8F736D0265AF5E8238C7BD4)
    49 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfglobals.h (SHA_256: 58DD0022F0A10AEA5648A56ECDF17833431CA251CD0A74D6CEF6096CE5C62F25)
    50 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    51 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfstring.h (SHA_256: 313107C1656E0D3BB0D4C62CB73B7DFB0917F1C5CE655A976C0303D09637A8FA)
    52 onecore\external\shared\inc\MinWin\ntdef.h (SHA_256: A20A36D90D90F6167B9BF6B24409AE3CD4559970FDE95B5E8852C0B6E7B484FE)
    53 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    54 onecore\external\sdk\inc\crt\ctype.h (SHA_256: 01905BC0D83D05F90D5414C79CEBA60D5D929EF4D8063E64C0BF57C6ABAEE0E5)
    55 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    56 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfresource.h (SHA_256: 3DC6E587B90360E8CD078884F28498CA4E0D1806AFBFEFF413A690A70A879518)
    57 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    58 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    59 onecore\external\sdk\inc\crt\vadefs.h (SHA_256: C75583F1CC608D7D8AA33B564484AF6973CA963B65F7A06C45836C7013F2711C)
    60 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcontrol.h (SHA_256: 7C9212B8008FBAB8A19B422855DB29AF6930CE04BE7760D0ED24633C9BA14E35)
    61 onecore\external\shared\inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
    62 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfiotarget.h (SHA_256: BA3C0C8B69CA043AA53FE42820A51D55D736EEEB1815409D56A564A9F2E5A8FD)
    63 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffuncenum.h (SHA_256: 5E3B8CACFF893D2AAA99ECE776D881FD2129E58DA0219C85996ACC654124FC63)
    64 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfregistry.h (SHA_256: 1302A06A70DB8C6FA813408E5621E18BC9FEAB80EF7F3DF32B53AB41D5E4D786)
    65 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfDmaTransaction.h (SHA_256: A227E5A01245FA6CF0F8FFD6A07D522CADED238F3DEAF67FF843678E042ACE42)
    66 onecore\external\ddk\inc\wdf\kmdf\1.15\WdfQueryInterface.h (SHA_256: 34D682CD7F5B92619F05614586C00A56EB5D5F930BAEC8E45693BF534CAFF35B)
    67 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfchildlist.h (SHA_256: 070017480E61E0C56D682FC7D7545538D800A0C6BE293B9E22148FA2C59A11E5)
    68 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfsync.h (SHA_256: 859DF8680ABD3A76CD6FE2E497F2A5BBA2DDF060D666CA145A08C9A9F589F23D)
    69 minkernel\wdf\framework\shared\inc\private\common\fxldr.h (SHA_256: 7FE18F854BFA095662DDB9D365C5CD823C728B5054B4AAD89F83F2124A7CD3CA)
    70 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfCommonBuffer.h (SHA_256: 52CD5BB72418DDDF7A68FDEB55034A7B0B2F7C9924B9715685E6EEFECCD956A5)
    71 onecore\external\shared\inc\initguid.h (SHA_256: 422EBCF50B8E8AD2F21A06E7281540F759237EABE37E445605FC45CC45D88314)
    72 OneCore\Private\MinWin\Priv_Sdk\Inc\kmdf\private\wdfldr.h (SHA_256: 18DBD3893FB101E73D303F64E4D29FB2D20054DBA364E24B909622DD6A59C5C0)
    73 onecore\external\shared\inc\MinWin\minwindef.h (SHA_256: A9CF08BE8407A196104124D5ADE2308E204E47D3252BCD2AD20D0F2137843D62)
    74 onecore\external\sdk\inc\crt\string.h (SHA_256: A8F83EDF09296EBA4AC1A97BE89AB83E60F7140180153FD196F5AB31FDEAC6F7)
    75 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfpdo.h (SHA_256: BC5BC7339E32ECE3284786923F683300D33FDB5646BDB0200A092A6F53B88CB2)
    76 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdpc.h (SHA_256: 3FB15CD71F23B01A7E570EC33D56B08849739D10DAA44D607668D62A21E1EAEC)
    77 onecore\external\shared\inc\ntstatus.h (SHA_256: 3CB4147FB380B1E7200F8740D07A76188306D6FB964F7798CF3DA3E3C601A5BE)
    78 onecore\external\shared\inc\dpfilter.h (SHA_256: 577C410A77DB4FCF3FD070550E5D7E2DE6A732B621BC5C4FEDF9ACA0A8B735C5)
    79 onecore\external\shared\inc\bugcodes.h (SHA_256: 14F60B6F0E267D023C71A8A4596D5AFDEBCCB11083F73E2711D2769BCECBF879)
    80 onecore\external\shared\inc\ntiologc.h (SHA_256: 2FC1A6AF02A01B2F8903F1AE07CE9F17D53CC1EB0C1621AB5876C74594CBDFD6)

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

     0 minkernel\crts\crtw32\misc\amd64\dispatchcfg.asm (SHA_256: 9FE59E1CFA107166C1147701EECC9083CC1B2368C0BCF8A983AA4C1BA32DFD3F)
     1 OneCore\Internal\MinWin\Priv_Sdk\Inc\ksamd64.inc (SHA_256: 9055A4B95E26733495A071C9C3963CBD5B1AD1DE573C196725B5BC997B1699B3)
     2 OneCore\Internal\MinWin\Priv_Sdk\Inc\kxamd64.inc (SHA_256: F3DF58BE58A7295E855E8835C44BBC2289179C8C500F7D4F92F1778FDA2363A4)
     3 onecore\external\sdk\inc\macamd64.inc (SHA_256: 020D2680B8B0660A8911F89D30EECC8B438576814457A382690702EAC3740F68)

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

     0 onecore\external\sdk\inc\MinCore\systemtopologyapi.h (SHA_256: 8BFD1A78CC30B6D33C88E3F61AE2AC6468CEE0607352EE8D096BA5375B4D401C)
     1 onecore\external\sdk\inc\winsvc.h (SHA_256: 8108FE3F099960014F36D1B2DA425A8382E9D839DE3477EB06F181289A0685C8)
     2 onecore\external\shared\inc\pshpack4.h (SHA_256: 1CB4D07A218EC43C7935B431B16146FC0F3D29D43BD192F12959051D62C48D57)
     3 onecore\external\sdk\inc\MinCore\processtopologyapi.h (SHA_256: 4507A5E0C4F41D19A80D1543833F1A9D90277BC376441B277884BB043BE24BA5)
     4 onecore\external\sdk\inc\MinWin\jobapi.h (SHA_256: 08DDFF85EC80F12B156837BBCE4F969480FEA0E32A08DADE7CC16ACECB0892D1)
     5 OneCore\Internal\MinWin\Priv_Sdk\Inc\guiddef.h (SHA_256: 0C08463FBC5A23A8862E57699E2F30DD14CD3DB4A40903E4FCA9392A57942DAE)
     6 onecore\external\sdk\inc\MinCore\jobapi2.h (SHA_256: 398EF4F8277A1EDB58E41C5E8233E8DCE7744522BA8E989D904E93991A254C71)
     7 onecore\external\sdk\inc\MinWin\threadpoolapiset.h (SHA_256: E91D7DEE4D22CA848E3110A4C55F32E1918DC865479343896AEC9AB653EE5110)
     8 onecore\external\sdk\inc\MinWin\securityappcontainer.h (SHA_256: 85CC13ED7028960BD7F97C91F98B96825B46F4B8BC386AED2F2A6A9BCCBE4083)
     9 onecore\external\sdk\inc\mcx.h (SHA_256: 4EE416B2D24E45CFC5D35CE5B34833B64B34FD9A39957C66D75509F6D3B8F972)
    10 onecore\external\shared\inc\winerror.h (SHA_256: 758571A8A5338EEF7119F1771CDE0D568CF6AC5449EFF6EAD5290F93A9A89DBB)
    11 minkernel\crts\crtw32\misc\loadcfg.c (SHA_256: 81C16FB0EC23AE3391BDE9DAAB0FCD2683C696397AC028E398549283A1815042)
    12 OneCore\Internal\MinWin\Priv_Sdk\Inc\winnls.h (SHA_256: E47861762A4B51A2689C8A99798A1A7E68335573E03C857E545172B095C5C829)
    13 onecore\external\sdk\inc\MinWin\realtimeapiset.h (SHA_256: 00C874B981A1242EE4EBC21E6AE96A69D7AA70662D820CEFFBABCFEA859B03E4)
    14 onecore\external\sdk\inc\MinWin\datetimeapi.h (SHA_256: 9B6EBD7FB7B32FE7EA6B3CE76F7C26ED9466821C2461FB71707AC2E2946C075C)
    15 minkernel\crts\crtw32\h\string.h (SHA_256: 3CCF1B07C82224B8A8B757F4CD3FD57C9941945052EAF80BE904E8904EE2A652)
    16 onecore\external\sdk\inc\MinWin\fibersapi.h (SHA_256: F8EEADC28F8E3E4C7BFD1217D55315EB31D63F3D86C66A3948D74CEB8E7A00D0)
    17 onecore\external\shared\inc\pshpack8.h (SHA_256: 47F3972A1211E3A5AC32B18FAE1A824DB087DC7DC562D152E9CCAB9B297FAEF0)
    18 onecore\external\sdk\inc\MinWin\timezoneapi.h (SHA_256: 621C0252A8A831813592C4A95E183A2E7AE55EFBBD7B8AD886AF7D8871FC4D50)
    19 onecore\external\sdk\inc\MinCore\consoleapi2.h (SHA_256: 4507BF49A004370CE01767CC9FD3FC85CEE32F79CD8890B06CD5AB8D05B94408)
    20 onecore\external\sdk\inc\MinWin\stringapiset.h (SHA_256: 08BD9C295CE9FFDACA185512A2B318B47027B02157B492104230EFC821FBA23B)
    21 onecore\external\shared\inc\poppack.h (SHA_256: A50D0EF5CFE96D634A41EE9A97749C147165F8656CDFED5DF53BC24C8ADB1210)
    22 onecore\external\shared\inc\kernelspecs.h (SHA_256: E844C7726C42736DF74445B36351DC01E29BCCEE7D57EA208F77F61AA4C2B191)
    23 OneCore\Internal\MinWin\Priv_Sdk\Inc\basetsd.h (SHA_256: D35B73F885D7EF7DFD27FCE3762C190C1C952A21E10A3945BCB3D1860C673B12)
    24 onecore\external\sdk\inc\MinWin\debugapi.h (SHA_256: 36FD04BA37AACF404CB82EFFB9A38634B502996F079A0121AEEA5191F5F424FB)
    25 onecore\external\sdk\inc\MinWin\securitybaseapi.h (SHA_256: 81971187B82B27DF42477761E562D883D24B2E81F50F2A8CEF4EC067C348F8A5)
    26 onecore\external\sdk\inc\MinWin\memoryapi.h (SHA_256: 58EDCC2090C411A1821E04A6A2954C258FD59DED44440BDD671984027E0A852F)
    27 onecore\external\sdk\inc\MinWin\namedpipeapi.h (SHA_256: E0F99E5F4319426325DDBF4A6D4E23298EED9B0806EF49ED6C95AD9DECE70D82)
    28 onecore\external\shared\inc\ktmtypes.h (SHA_256: 68D2848D00AE33282FB265880F8166F2B5DC60CD7A26DB652450A5B44D44EE11)
    29 onecore\external\sdk\inc\fileapifromapp.h (SHA_256: D07110E7F7989AEEF7EED77D5F584F3EE60FF2CE58BC1A374D70151A18B4A664)
    30 onecore\external\sdk\inc\MinWin\fileapi.h (SHA_256: 8318076677FBA276E494EDC39AAAC11FBD9BC61CA2D36BB68BDCCCD260ECE977)
    31 minkernel\crts\crtw32\h\stdarg.h (SHA_256: 3678A0ED176C75965A58C391F6E659DA42454B83E3F3F21438513731165962FA)
    32 onecore\external\shared\inc\windef.h (SHA_256: 040535B19A60264E5FE6971F7CB13CBF24BE17ABEEAA8ACD21E44F5D7DFE8D22)
    33 onecore\external\sdk\inc\MinWin\consoleapi.h (SHA_256: 6021076F89DF0ACBDD1E38F4588342C2E2E164B7521A99D75AFDFE434E7AEBA3)
    34 shared\inc\winapifamily.h (SHA_256: BDA507D14F2E40023D344CB943CBD98AF26DE8A47F3B0F5FAC694D2025711AF1)
    35 shared\inc\winpackagefamily.h (SHA_256: 8F74E254896094A3884E6975FD24B3493846514065F47D2666DF53CDEA45B8EA)
    36 onecore\external\shared\inc\MinWin\minwindef.h (SHA_256: A9CF08BE8407A196104124D5ADE2308E204E47D3252BCD2AD20D0F2137843D62)
    37 onecore\external\shared\inc\pshpack1.h (SHA_256: DEE27F2712B9E72CA78A404834735303D16BDB21C8AA3ADDACA7DBCA22664529)
    38 onecore\external\sdk\inc\MinWin\wow64apiset.h (SHA_256: 5DE0DA90CA805C29B82636D0C10D2A7E109D7FD1A7265981CBB6AD11B8CEE926)
    39 onecore\external\sdk\inc\MinWin\ioapiset.h (SHA_256: 7C3F659F98B3F1748A314BD64106583D01649333E0419B66232B4F64B3F85B0C)
    40 onecore\internal\sdk\inc\warning.h (SHA_256: DBB8AC5B615173E430E6DB4FC99F4E18629B4444F6583317DB623E67ADEE6426)
    41 onecore\internal\sdk\inc\suppress_x.h (SHA_256: 41BAA9A9F49167CDE31C9828B341730634609EBA6D0426B6C0B06EB0E4FC3CBB)
    42 OneCore\Internal\minwin\inc\windowscore.h (SHA_256: 56C3E930B51494F59B2464CDAE73C9C0CE7F19D7FDA187497F7E588FFD0C5BAC)
    43 onecore\external\shared\inc\sdkddkver.h (SHA_256: 2472140E0A4D56595743BB74002A51AEE9B58667BD178FC43742E19DEBFEB774)
    44 minkernel\crts\crtw32\h\excpt.h (SHA_256: 0C9127D8A2783860C193DE8942FAC10185D697B7F716940F68E93895C9F22976)
    45 minkernel\crts\crtw32\h\crtdefs.h (SHA_256: 3845D81E3C76A057D38446F7C6B4F8ADA11492BAA806692A15FF06647F009678)
    46 onecore\external\shared\inc\specstrings.h (SHA_256: D34BE02CDF05B290B4E5659EF591D1386BB9101B493AF23D851079F18877225E)
    47 onecore\external\sdk\inc\MinWin\utilapiset.h (SHA_256: A8E0F6001C784B3AD9FEB44C61D96B58C57366C473832CA8B2EA5DE05877B470)
    48 onecore\external\shared\inc\sal.h (SHA_256: 5445D4C2ABC3FF640134E7D7285CFB2E4FE4575ACC7B4DE5DB91990EB3376FA1)
    49 onecore\external\shared\inc\concurrencysal.h (SHA_256: 1EA9A2E32A6FF298AD7904610CC71028CAA9B172399A579CA90A120D1B1AEC12)
    50 onecore\external\sdk\inc\MinWin\enclaveapi.h (SHA_256: 8D76135FF40140C6D64A09D173E1276FEFB96A2DB9073B5AB26F250C4733F999)
    51 onecore\external\shared\inc\specstrings_strict.h (SHA_256: 49B12898B42BCF53E5F8FB75E6DB1A5D3FFB7A9F394E50DF3351E0824D4A8B42)
    52 onecore\external\sdk\inc\MinWin\verrsrc.h (SHA_256: FF9BEE8EE5B7AA81EAF79A1EAB0E93BD307601E87D3B80A73F24984E9C951C61)
    53 onecore\external\shared\inc\specstrings_undef.h (SHA_256: 6ABA76EABBEC627EDADBA5AB29304D9E2FF4EB9DA165FD81A9095C851F405A01)
    54 onecore\external\shared\inc\driverspecs.h (SHA_256: 9CF7E9E1C9B55C7C351E87FF5A98E362B6FFDB511C3309AB9CF46B62B0DACE42)
    55 onecore\external\shared\inc\sdv_driverspecs.h (SHA_256: 99FD81F9464150F56963C3BBAFAA95F93B837C221C4237E6E399A85E00EA9F39)
    56 minkernel\crts\crtw32\h\vadefs.h (SHA_256: E7439E484D20A8B0349E41CC3E7F490CD014D4F2DA86FE9C1C2D5517D153B791)
    57 minkernel\crts\crtw32\h\cruntime.h (SHA_256: BDF3A8FE949F90A75747F0C40300EF591B3158324BB479ABCFFA386725C2736F)
    58 onecore\external\sdk\inc\winnt.h (SHA_256: 1F65487B3AE70B3BC43BB239FCA75177AA34740FC96220D64BC65E6068EC7FED)
    59 minkernel\crts\crtw32\h\ctype.h (SHA_256: E690BD5A03B64B2B219C4A2A7758D03BB27DD981C3EDB3ABA9DE6A2C3C203409)
    60 onecore\external\sdk\inc\MinWin\winreg.h (SHA_256: 8249EEBFAA3FCA0CBA35E00877BC38A369DB87738043DC4BBA0975352A03323D)
    61 onecore\external\sdk\inc\MinWin\handleapi.h (SHA_256: 72D7104C848446047353E765A541E1802B4510C7A74985E7D9973004F4602FAC)
    62 onecore\external\sdk\inc\reason.h (SHA_256: 30540EB35DAA79C7A5CB98059430DF480E86B549B7980247288DA8A2801ADD1D)
    63 onecore\external\sdk\inc\MinWin\interlockedapi.h (SHA_256: 4B0D3BC138EAAB8DC9DD40BFB109F5FEA4CBD2CAAF92D63A4CF60A8EDCFB0E3A)
    64 onecore\external\sdk\inc\MinCore\consoleapi3.h (SHA_256: 1E734C1D2625E719A4547A6E4F647A888D804D2CFEF5EE3A85C83119421D9CF1)
    65 onecore\external\shared\inc\pshpack2.h (SHA_256: 971D19074639CB36134BB40776CB2F817C53CBD05D748B52468F571932BBCC49)
    66 onecore\external\sdk\inc\winbase.h (SHA_256: F725E17B28EEA1EE66FF75DD2FB95F7AA48B67772171E35026F1FD9F861D6856)
    67 onecore\external\shared\inc\MinWin\apisetcconv.h (SHA_256: 1093683104F97C8C9725BB2E7539DCA22722DC8C5618CD846287E9458698ABFE)
    68 onecore\external\sdk\inc\MinWin\apiquery2.h (SHA_256: 8AC6D7AABAFE5B3A5E58F3A3707240D9B6DA8DA40778BC9157CA8CA0CF08C104)
    69 onecore\external\sdk\inc\MinWin\minwinbase.h (SHA_256: 7D1408F4B8EEBA96AE45892209132258CDE80CAB6DAB192B4CCEEA591972C78B)
    70 onecore\external\sdk\inc\MinWin\libloaderapi.h (SHA_256: 8F48062AA6D707BF8C63D8FB3E6956F331217BE7309D38AC523951AF51CB3224)
    71 onecore\external\sdk\inc\MinWin\processenv.h (SHA_256: 1F1E38CF7AABEE42BBF203BEEE0B9CDE392243006444BDD2ED47566D355442F8)
    72 onecore\external\sdk\inc\MinCore\namespaceapi.h (SHA_256: 3257AD8AF53C5809BE4D5D17ED0FFD8B49451D3F27C1FD747FFDE3E0A7A81583)
    73 onecore\external\shared\inc\MinWin\apiset.h (SHA_256: E984E20681FD3DE73CE14AB09D759D5B4FAF03F7D66A78602DA2AC9234B24DF4)
    74 onecore\external\sdk\inc\wincon.h (SHA_256: 98E33720F9EC8FDED808AB94F111B8335D0BA2FD2246A5ADAB3AAB2CE05503D9)
    75 onecore\external\sdk\inc\MinWin\errhandlingapi.h (SHA_256: 7D71B7E051C9C52ECE96C1E78FE799BBFC03E7B220CB89E8887B7CA10EF1A404)
    76 onecore\external\sdk\inc\wincontypes.h (SHA_256: 209E79FDBBB30971740E59B2DA2D6C86E27C0E9DD02BEE9CBC21736FBD2426AD)
    77 onecore\external\sdk\inc\MinWin\processthreadsapi.h (SHA_256: 3036B32F97A10EFFB762E773CFFC79D2DD7AFA156A591C6243D36491063C6250)
    78 onecore\external\sdk\inc\MinWin\synchapi.h (SHA_256: E7EAD3C223D942A5B8F35336CA01D37B754DAC8F3B05AFE97C9C01A4B9C5F8BA)
    79 onecore\external\sdk\inc\MinWin\threadpoollegacyapiset.h (SHA_256: 87C1630ABF7DC4ED7978F2C4DBACF418F6BCF94CB946E277CB7250770BD44200)
    80 onecore\external\sdk\inc\MinWin\profileapi.h (SHA_256: CFA8E3626DBA11689997D8FCD65B5DFBF4BCEF8DE09DD7E4E881769D48D165A2)
    81 onecore\external\sdk\inc\MinWin\sysinfoapi.h (SHA_256: B0C389DD0128467F14BB02B4B4EA8C6DB6561F1647205C633625AD8265E143CC)
    82 onecore\external\sdk\inc\MinWin\heapapi.h (SHA_256: 22B606B0A4096295272BCAE6FC353C4F159F0CDFC90B5F1A9A712B2FFF50B53F)

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

     0 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res (SHA_256: B3EF6E1F58F46D64475BA86E43C0FC31FD02E67F49D917D3A78A0E57EF535EEC)
     1 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.res (SHA_256: DBBA31352EE8C1EB5242379E2166804BE276FDBAA4F547314F312574F671F3B8)

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "* Linker *" from ""


*** SECTION CONTRIBUTIONS

  Imod  Address        Size      Characteristics
  0001  0001:00000000  00000096  60303020
  0001  0001:00000098  00000160  60303020
  0001  0001:000001F8  00000050  60303020
  0001  0001:00000248  000000A9  60303020
  0001  0001:000002F4  000000DC  60303020
  0001  0001:000003D0  00000028  60303020
  0001  0001:000003F8  0000003E  60303020
  0002  0001:00000440  00000108  60503020
  0002  0001:00000548  00000016  60303020
  0002  0001:00000560  00000028  60303020
  0002  0001:00000588  0000004F  60303020
  0002  0001:000005D8  0000005F  60303020
  0002  0001:00000640  0000002D  60503020
  0003  0001:00000670  0000003A  60303020
  0003  0001:000006B0  000002ED  60503020
  0003  0001:000009A0  0000025B  60503020
  0003  0001:00000BFC  00000067  60303020
  0003  0001:00000C64  0000004E  60303020
  0004  0001:00000CC0  000004CA  60503020
  0004  0001:0000118C  0000003E  60303020
  0005  0001:000011D0  00000287  60503020
  0005  0001:00001460  00000809  60503020
  0005  0001:00001C6C  00000096  60303020
  0005  0001:00001D04  0000003E  60303020
  0006  0001:00001D44  0000001E  60303020
  0006  0001:00001D64  00000060  60303020
  000D  0001:00001DD0  00000004  60503020
  000F  0001:00001DE0  000000B5  60503020
  0012  0001:00001EA0  00000007  60503020
  0013  0001:00001EA8  00000058  60303020
  0013  0001:00001F00  00000030  60303020
  0013  0001:00001F30  0000002C  60503020
  0013  0001:00001F5C  00000150  60303020
  0013  0001:000020B0  0000000F  60503020
  0013  0001:000020C0  0000002C  60503020
  0014  0001:000020EC  000000C1  60303020
  0015  0001:000021B0  0000017A  60303020
  0015  0001:0000232C  00000013  60303020
  0015  0001:00002340  000000D1  60303020
  001B  0001:00002420  00000006  60103020
  001B  0001:00002426  00000006  60103020
  001B  0001:0000242C  00000006  60103020
  001B  0001:00002440  00000006  60503020
  001B  0001:00002450  00000006  60503020
  000C  0001:00002460  00000010  60502020
  000C  0001:00002470  00000005  60503020
  000E  0001:00002480  00000010  60502020
  000E  0001:00002490  00000006  60503020
  0010  0001:000024A0  0000002E  60502020
  0016  0001:000024D0  00000010  60502020
  0016  0001:000024E0  00000006  60503020
  0008  0001:00002500  000002AA  60703020
  0009  0001:000027C0  00000107  60703020
  0009  0001:00002900  00000043  60703020
  0009  0001:00002980  00000026  60703020
  0001  0001:000029B0  0000000A  60503020
  0001  0001:000029C0  00000005  60503020
  0001  0001:000029D0  00000008  60503020
  0001  0001:000029E0  00000014  60503020
  0004  0001:00002A00  00000028  60503020
  0004  0001:00002A30  00000024  60503020
  0005  0001:00002A60  00000004  60503020
  0005  0001:00002A70  0000003C  60503020
  0005  0001:00002AB0  00000022  60503020
  0005  0001:00002AE0  00000024  60503020
  0005  0001:00002B10  0000003E  60503020
  0005  0001:00002B50  0000002C  60503020
  0005  0001:00002B80  0000002E  60503020
  0005  0001:00002BB0  00000022  60503020
  001B  0002:00000000  00000008  C0403040
  001B  0002:00000008  00000008  C0403040
  001B  0002:00000010  00000008  C0403040
  001B  0002:00000018  00000008  C0403040
  001B  0002:00000020  00000008  C0403040
  0017  0002:00000028  00000008  C0402040
  001A  0002:00000030  00000008  C0403040
  001A  0002:00000038  00000008  C0403040
  001A  0002:00000040  00000008  C0403040
  001A  0002:00000048  00000008  C0403040
  001A  0002:00000050  00000008  C0403040
  001A  0002:00000058  00000008  C0403040
  001A  0002:00000060  00000008  C0403040
  001A  0002:00000068  00000008  C0403040
  001A  0002:00000070  00000008  C0403040
  001A  0002:00000078  00000008  C0403040
  001A  0002:00000080  00000008  C0403040
  000B  0002:00000088  00000008  C0402040
  0007  0002:00000090  00000008  40403040
  0007  0002:00000098  00000008  40403040
  0007  0002:000000A0  00000008  40403040
  0007  0002:000000A8  00000008  40403040
  0007  0002:000000B0  00000008  40403040
  0007  0002:000000B8  00000008  40403040
  001C  0002:000000C0  00000054  40302040
  0001  0002:00000120  00000010  40403040
  0001  0002:00000130  00000010  40403040
  0001  0002:00000140  00000010  40403040
  0001  0002:00000150  00000010  40403040
  0001  0002:00000160  00000010  40403040
  0001  0002:00000170  00000010  40403040
  0001  0002:00000180  00000010  40403040
  0001  0002:00000190  00000010  40403040
  0001  0002:000001A0  00000010  40403040
  0001  0002:000001B0  00000010  40403040
  0001  0002:000001C0  00000002  40303040
  0001  0002:000001C8  00000014  40403040
  0001  0002:000001E0  0000000F  40403040
  0002  0002:000001F0  00000010  40403040
  0003  0002:00000200  00000010  40403040
  0004  0002:00000210  00000010  40403040
  0005  0002:00000220  00000010  40403040
  000A  0002:00000230  00000038  40403040
  000A  0002:00000268  00000010  40403040
  0013  0002:00000278  00000018  40403040
  0013  0002:00000290  00000028  40403040
  0013  0002:000002B8  00000010  40403040
  0014  0002:000002D0  000000A7  40503040
  0014  0002:00000378  00000027  40403040
  0015  0002:000003A0  000000AB  40503040
  0015  0002:00000450  0000001F  40403040
  0015  0002:00000470  00000061  40503040
  0015  0002:000004E0  0000005E  40503040
  0018  0002:00000540  00000140  40503040
  001C  0002:00000680  00000038  40302040
  001C  0002:00000700  00000050  40302040
  001C  0002:00000750  00000250  40302040
  0001  0002:000009A0  00000028  40303040
  0001  0002:000009C8  0000001C  40303040
  0001  0002:000009E4  00000020  40303040
  0001  0002:00000A04  00000010  40303040
  0001  0002:00000A14  0000000C  40303040
  0001  0002:00000A20  0000000C  40303040
  0001  0002:00000A2C  0000000C  40303040
  0001  0002:00000A38  00000014  40303040
  0001  0002:00000A4C  00000014  40303040
  0002  0002:00000A60  00000024  40303040
  0002  0002:00000A84  00000010  40303040
  0002  0002:00000A94  0000000C  40303040
  0002  0002:00000AA0  0000000C  40303040
  0002  0002:00000AAC  00000020  40303040
  0002  0002:00000ACC  00000010  40303040
  0002  0002:00000ADC  0000000C  40303040
  0002  0002:00000AE8  0000000C  40303040
  0002  0002:00000AF4  0000000C  40303040
  0002  0002:00000B00  0000000C  40303040
  0002  0002:00000B0C  00000014  40303040
  0002  0002:00000B20  00000014  40303040
  0003  0002:00000B34  00000020  40303040
  0003  0002:00000B54  00000020  40303040
  0003  0002:00000B74  0000000C  40303040
  0003  0002:00000B80  0000000C  40303040
  0003  0002:00000B8C  00000014  40303040
  0004  0002:00000BA0  00000010  40303040
  0004  0002:00000BB0  00000020  40303040
  0005  0002:00000BD0  00000024  40303040
  0005  0002:00000BF4  00000024  40303040
  0005  0002:00000C18  00000020  40303040
  0005  0002:00000C38  00000010  40303040
  0006  0002:00000C48  0000000C  40303040
  0008  0002:00000C58  00000004  40403040
  0009  0002:00000C60  0000000C  40403040
  0009  0002:00000C70  00000014  40403040
  000F  0002:00000C88  0000000C  40303040
  0010  0002:00000C98  00000004  40402040
  0013  0002:00000C9C  0000000C  40303040
  0013  0002:00000CA8  0000001C  40303040
  0013  0002:00000CC4  00000010  40303040
  0014  0002:00000CD4  00000010  40303040
  0015  0002:00000CE4  00000014  40303040
  0015  0002:00000CF8  00000018  40303040
  0001  0003:00000000  00000008  C0403040
  0001  0003:00000010  00000048  C0503040
  0001  0003:00000058  00000028  C0403040
  000F  0003:00000080  00000040  C0703040
  0011  0003:000000C0  00000008  C0403040
  0011  0003:000000C8  00000008  C0403040
  0013  0003:000000D0  00000030  C0403040
  0015  0003:00000100  00000010  C0502040
  0015  0003:00000110  00000008  C0402040
  0015  0003:00000118  00000008  C0402040
  0014  0003:00000120  00000010  C0502040
  0014  0003:00000130  00000008  C0402040
  0001  0003:00000140  00000008  C0403080
  0001  0003:00000148  00000008  C0403080
  0001  0003:00000150  00000008  C0403080
  0001  0003:00000158  00000008  C0403080
  0001  0003:00000160  00000008  C0403080
  0001  0003:00000168  00000004  C0303080
  0005  0003:00000170  00000008  C0402080
  0013  0003:00000180  00000208  C0503080
  0013  0003:00000388  00000008  C0403080
  0013  0003:00000390  00000018  C0402080
  0013  0003:000003A8  00000008  C0403080
  0013  0003:000003B0  00000008  C0403080
  0013  0003:000003B8  00000008  C0403080
  0013  0003:000003C0  00000008  C0403080
  001C  0003:000003C8  00000008  C0403080
  001C  0003:000003D0  00000008  C0403080
  001C  0003:000003E0  00000040  C0603080
  001C  0003:00000420  00000004  C0303080
  0001  0005:00000000  000008BA  60303020
  0001  0005:000008C0  0000022E  60503020
  0002  0005:00000AF0  0000008B  60503020
  0002  0005:00000B80  00000097  60503020
  0002  0005:00000C18  00000076  60303020
  0002  0005:00000C90  0000008B  60303020
  0002  0005:00000D1C  000000FD  60303020
  0002  0005:00000E20  00000278  60503020
  0004  0005:00001098  0000010B  60303020
  0005  0005:000011A4  00000560  60303020
  0005  0005:00001704  00000070  60303020
  0001  0005:00001780  0000002C  60503020
  0001  0005:000017B0  00000022  60503020
  0001  0005:000017E0  00000040  60503020
  0001  0005:00001820  00000017  60503020
  0001  0005:00001840  00000020  60503020
  0001  0005:00001860  00000026  60503020
  0001  0005:00001890  00000022  60503020
  0001  0005:000018C0  00000032  60503020
  0001  0005:00001900  0000002C  60503020
  0001  0005:00001930  00000020  60503020
  0001  0005:00001950  0000002E  60503020
  0001  0005:00001980  0000003C  60503020
  0001  0005:000019C0  00000022  60503020
  0002  0005:000019F0  0000001A  60503020
  0002  0005:00001A10  00000020  60503020
  0002  0005:00001A30  00000032  60503020
  0002  0005:00001A70  00000036  60503020
  0002  0005:00001AB0  0000001C  60503020
  0004  0005:00001AD0  0000001A  60503020
  0005  0005:00001AF0  00000032  60503020
  0005  0005:00001B30  0000003A  60503020
  0005  0005:00001B70  0000003A  60503020
  0005  0005:00001BB0  0000001E  60503020
  0005  0005:00001BD0  00000038  60503020
  0005  0005:00001C10  00000022  60503020
  0002  0006:00000000  0000031C  60303020
  0011  0006:0000031C  0000002E  60303020
  0002  0006:00000350  00000020  60503020
  0002  0006:00000370  0000000C  60503020
  0002  0006:00000380  00000028  60503020
  0002  0006:000003B0  00000024  60503020
  000B  0006:000003D4  00000014  C0302040
  0017  0006:000003E8  00000014  C0302040
  000B  0006:000003FC  00000014  C0302040
  001B  0006:00000410  00000008  C0403040
  001B  0006:00000418  00000008  C0403040
  001B  0006:00000420  00000008  C0403040
  001B  0006:00000428  00000008  C0403040
  001B  0006:00000430  00000008  C0403040
  0017  0006:00000438  00000008  C0402040
  001A  0006:00000440  00000008  C0403040
  001A  0006:00000448  00000008  C0403040
  001A  0006:00000450  00000008  C0403040
  001A  0006:00000458  00000008  C0403040
  001A  0006:00000460  00000008  C0403040
  001A  0006:00000468  00000008  C0403040
  001A  0006:00000470  00000008  C0403040
  001A  0006:00000478  00000008  C0403040
  001A  0006:00000480  00000008  C0403040
  001A  0006:00000488  00000008  C0403040
  001A  0006:00000490  00000008  C0403040
  000B  0006:00000498  00000008  C0402040
  001A  0006:000004A0  00000018  C0203040
  001A  0006:000004B8  0000001A  C0203040
  001A  0006:000004D2  00000014  C0203040
  001A  0006:000004E6  0000001C  C0203040
  001A  0006:00000502  0000001C  C0203040
  001A  0006:0000051E  0000000E  C0203040
  001A  0006:0000052C  00000010  C0203040
  001A  0006:0000053C  00000020  C0203040
  001A  0006:0000055C  00000014  C0203040
  000B  0006:00000570  0000000E  C0202040
  001A  0006:0000057E  00000018  C0203040
  001A  0006:00000596  0000000E  C0203040
  001B  0006:000005A4  00000012  C0203040
  001B  0006:000005B6  00000018  C0203040
  001B  0006:000005CE  00000014  C0203040
  001B  0006:000005E2  00000016  C0203040
  001B  0006:000005F8  00000018  C0203040
  0017  0006:00000610  0000000C  C0202040
  0019  0007:00000000  00000104  40002040
  0019  0007:00000110  00001000  40002040

*** SEGMENT MAP

Sec  flags  ovl   grp   frm sname cname    offset    cbSeg
 01  010d  0000  0000  0001  ffff  ffff  00000000 00002bd2
 02  0109  0000  0000  0002  ffff  ffff  00000000 00000d10
 03  010b  0000  0000  0003  ffff  ffff  00000000 00000424
 04  0109  0000  0000  0004  ffff  ffff  00000000 00000294
 05  010d  0000  0000  0005  ffff  ffff  00000000 00001c32
 06  010d  0000  0000  0006  ffff  ffff  00000000 0000061c
 07  0109  0000  0000  0007  ffff  ffff  00000000 00001110
 08  0109  0000  0000  0008  ffff  ffff  00000000 00000040
 09  0208  0000  0000  0000  ffff  ffff  00000000 ffffffff

*** FPO

DBIOpenDbg(, dbgtypeFPO,) failed.
DBIOpenDbg(, dbgtypeNewFPO,) failed.

*** TokenMap

DBIOpenDbg(, dbgtypeTokenRidMap,) failed.

*** FIXUPS


Fixup Data (1158):

    Type        Rva        RvaTarget
    ----  ----  --------   --------
    0003  0000  0000A0D8   0000A110
    0003  0000  0000A0C8   0000A5F0
    0003  0000  0000A0B8   0000A8F0
    0004  0000  000081C2   000050C0
    0004  0000  000081D0   00008AF0
    0004  0000  000081D7   00008AF0
    0004  0000  000081E1   00008AF0
    0004  0000  000081F9   00008AF0
    0004  0000  00008200   00008B30
    0004  0000  00008213   00008B30
    0004  0000  0000822F   00008B30
    0004  0000  0000824B   00008B30
    0004  0000  00008257   00008B30
    0004  0000  00008263   00005000
    0004  0000  0000826A   00005000
    0004  0000  00008271   00004220
    0004  8000  00008294   000013D0
    0004  0000  0000829B   000053A8
    0004  0000  000082A5   000053C8
    0004  0000  000082AC   000053B0
    0004  0000  000082B9   00004098
    0004  0000  000082C0   000053A8
    0004  0000  000082C7   000053D0
    0004  0000  000082CE   000053B0
    0004  0000  000082D8   00004098
    0004  0000  000082DF   000053A8
    0004  0000  000082E8   000053C8
    0004  0000  000082F6   000053B0
    0004  0000  000082FC   00004098
    0004  0000  0000830F   00005000
    0004  8000  00008332   000013D0
    0004  0000  00008339   000053A8
    0004  0000  00008343   000053B0
    0004  0000  00008350   00004098
    0004  0000  00008357   000053A8
    0004  0000  0000835E   00004268
    0004  0000  0000836F   000053B0
    0004  0000  00008378   00004098
    0004  0000  0000838E   00005000
    0004  8000  000083B4   000013F8
    0005  0000  000083BA   00005420
    0004  0000  000083D0   00008B70
    0004  0000  000083D7   00008BB0
    0004  0000  000083E6   00004170
    0004  0000  000083ED   00005010
    0004  8000  000083F2   000012F4
    0004  0000  000083FE   000053A8
    0004  0000  0000840D   000053B0
    0004  0000  0000841A   00004098
    0004  0000  00008421   000053A8
    0004  0000  00008432   000053B0
    0004  0000  0000843F   00004098
    0004  0000  0000844C   00005000
    0004  0000  00008469   00005000
    0004  8000  0000847D   000013F8
    0005  0000  00008483   00005420
    0004  0000  0000849D   000053A8
    0004  0000  000084A9   000053B0
    0004  0000  000084BE   00004098
    0005  0000  000084CA   00005420
    0004  0000  000084DF   00008840
    0004  0000  000084EB   000053A8
    0004  0000  000084FC   000053B0
    0004  0000  00008509   00004098
    0004  0000  00008516   00005000
    0004  0000  00008532   00005000
    0004  8000  00008546   000013F8
    0005  0000  0000854C   00005420
    0004  0000  00008561   00008BD0
    0004  8000  0000857A   000037C0
    0004  8000  00008586   00002460
    0004  0000  00008596   000053A8
    0004  0000  000085CA   000053B0
    0004  0000  000085D0   00004098
    0004  0000  000085DD   00005000
    0004  0000  000085F9   00005000
    0004  8000  0000860D   000013F8
    0005  0000  00008613   00005420
    0004  0000  00008624   00008C10
    0004  0000  00008630   000053A8
    0004  0000  0000863C   000053B0
    0004  0000  00008649   00004098
    0004  0000  00008655   00005170
    0004  0000  00008666   000053A8
    0004  0000  0000866D   000053B0
    0004  0000  0000867A   00004098
    0004  0000  0000868F   000053A8
    0004  0000  00008696   000053B0
    0004  0000  000086A3   00004098
    0004  0000  000086B3   00005000
    0004  8000  000086D9   000013F8
    0004  8000  000086E7   000034B0
    0004  0000  0000870B   00005000
    0004  0000  00008712   00005000
    0004  0000  0000872F   00004220
    0004  8000  00008739   000013D0
    0004  0000  00008740   00005170
    0004  0000  0000874C   000053A8
    0004  0000  00008753   000053B0
    0004  0000  00008760   00004098
    0008  0000  00008767   00005170
    0004  0000  000021EB   000050C0
    0004  0000  000021FA   000053A8
    0004  0000  00002207   000053B0
    0004  0000  00002214   00004098
    0004  0000  0000221B   000053A8
    0004  0000  00002225   00005058
    0004  0000  00002233   000053B0
    0004  0000  00002239   00004098
    0004  0000  00002240   00003B50
    0004  0000  00002246   00003B50
    0004  0000  00002250   00003B50
    0004  0000  0000226E   00003B50
    0004  0000  00002285   00005000
    0004  0000  0000228C   00005000
    0004  0000  000022A8   00004080
    0004  0000  000022B4   00004220
    0004  8000  000022BF   00002D04
    0004  0000  000022C6   000053A8
    0004  0000  000022DA   000053B0
    0004  0000  000022E7   00004098
    0004  0000  000022F4   00005000
    0004  0000  00002311   00005000
    0004  0000  00002318   00004220
    0004  8000  00002329   000013F8
    0005  0000  0000232F   00005420
    0004  0000  00002340   00003B80
    0004  0000  0000234B   00003BB0
    0004  0000  0000235A   00004170
    0004  0000  00002361   00005010
    0004  8000  00002366   000012F4
    0004  0000  0000236F   00005000
    0004  0000  0000238C   00004220
    0004  8000  00002396   000013D0
    0004  0000  0000239D   000053A8
    0004  0000  000023AB   000053B0
    0004  0000  000023B8   00004098
    0005  0000  000023BE   00005420
    0004  0000  000023CC   00004190
    0004  0000  000023DB   00005010
    0004  8000  000023E0   00001248
    0004  0000  000023E7   000053A8
    0004  0000  000023F1   000053B0
    0004  0000  000023FE   00004098
    0004  0000  00002405   00005000
    0004  0000  00002422   00004220
    0004  8000  0000242C   000013D0
    0004  8000  00002439   000034B0
    0004  0000  000024A5   00005000
    0004  0000  000024AC   00005000
    0004  0000  000024B3   00004220
    0004  8000  000024D9   000013D0
    0004  0000  00002502   00005000
    0004  8000  00002532   000013F8
    0004  0000  0000253E   000053A8
    0004  0000  00002552   000053B0
    0004  0000  00002568   00004098
    0004  0000  00002584   000053A8
    0004  0000  0000258E   000053C8
    0004  0000  00002595   000053B0
    0004  0000  000025A2   00004098
    0004  0000  000025AD   000053D0
    0004  0000  000025B4   000053B0
    0004  0000  000025BE   000053A8
    0004  0000  000025CB   00004098
    0004  0000  000025DE   000053A8
    0004  0000  000025E8   00005058
    0004  0000  000025EF   000053B0
    0004  0000  000025FC   00004098
    0004  0000  00002607   00005000
    0004  8000  00002632   000013F8
    0004  0000  00002639   000053B0
    0004  8000  00002655   000021D0
    0004  0000  0000267A   000053A8
    0004  0000  000026A3   00004098
    0004  0000  000026B4   00005000
    0004  0000  000026E4   00005000
    0004  0000  00002714   000053A8
    0004  0000  00002728   000053B0
    0004  0000  0000273E   00004098
    0004  0000  0000275A   000053A8
    0004  0000  00002764   000053C8
    0004  0000  0000276B   000053B0
    0004  0000  00002778   00004098
    0004  0000  00002783   000053D0
    0004  0000  0000278A   000053B0
    0004  0000  00002794   000053A8
    0004  0000  000027A1   00004098
    0004  0000  000027BA   000053A8
    0004  0000  000027C4   00005058
    0004  0000  000027CB   000053B0
    0004  0000  000027D8   00004098
    0004  0000  000027E7   00005000
    0004  8000  00002810   000013F8
    0004  0000  00002817   000053B0
    0004  8000  0000283A   000021D0
    0004  0000  00002856   000053A8
    0004  0000  0000287C   00004098
    0004  0000  00002889   00005000
    0004  0000  000028AB   00005000
    0004  8000  000028BA   000013F8
    0005  0000  000028C0   00005420
    0004  0000  000028CA   00003AE0
    0004  0000  000028D8   00003AB0
    0004  0000  000028E7   00004170
    0004  0000  000028EE   00005010
    0004  8000  000028F3   000012F4
    0004  0000  000028FC   000053A8
    0004  0000  00002907   000053B0
    0004  0000  00002914   00004098
    0004  0000  0000291B   000053A8
    0004  0000  00002922   000053C8
    0004  0000  00002929   000053B0
    0004  0000  00002936   00004098
    0004  0000  00002942   00005000
    0004  0000  00002972   000053A8
    0004  0000  00002986   000053B0
    0004  0000  0000299E   00004098
    0004  0000  000029B9   000053A8
    0004  0000  000029C3   000053C8
    0004  0000  000029CA   000053B0
    0004  0000  000029D7   00004098
    0004  0000  000029E2   000053D0
    0004  0000  000029E9   000053B0
    0004  0000  000029F3   000053A8
    0004  0000  00002A00   00004098
    0004  0000  00002A16   000053A8
    0004  0000  00002A1D   00005058
    0004  0000  00002A24   000053B0
    0004  0000  00002A31   00004098
    0004  0000  00002A38   000053A8
    0004  0000  00002A5F   000053B0
    0004  0000  00002A65   00004098
    0004  0000  00002A9C   000053A8
    0004  0000  00002AA7   000053B0
    0004  0000  00002AB4   00004098
    0004  0000  00002ABB   00005000
    0004  8000  00002AEB   00002C6C
    0004  8000  00002B0C   00003500
    0004  0000  00002B21   000053A8
    0004  0000  00002B2E   000053B0
    0004  0000  00002B3E   00004098
    0004  0000  00002B4A   00005000
    0004  0000  00002B67   00005000
    0004  8000  00002B7B   000013F8
    0005  0000  00002B81   00005420
    0004  0000  00002B8F   00003B10
    0004  0000  00002B9B   00005000
    0004  8000  00002BC2   000013F8
    0005  0000  00002BC8   00005420
    0004  0000  00002BD2   00003A70
    0004  0000  00002BDD   00003AB0
    0004  0000  00002BEC   00004170
    0004  0000  00002BF3   00005010
    0004  8000  00002BF8   000012F4
    0004  0000  00002BFF   000053A8
    0004  0000  00002C09   000053B0
    0004  0000  00002C19   00004098
    0004  0000  00002C20   00005000
    0004  8000  00002C44   000013D0
    0004  0000  00002C99   000039B0
    0004  0000  00002CA0   00005148
    0004  0000  00002CA7   00003A60
    0004  0000  00002CF3   00004098
    0004  0000  00002D12   00005148
    0004  0000  00002D39   00004098
    0003  8000  00004C10   00002D44
    0003  8000  00004C30   00002D44
    0004  0000  00001CD5   000050C0
    0004  0000  00001CE4   000053A8
    0004  0000  00001CF4   000053B0
    0004  0000  00001D01   00004098
    0004  0000  00001D08   000053A8
    0004  0000  00001D12   00005058
    0004  0000  00001D23   000053B0
    0004  0000  00001D29   00004098
    0004  0000  00001D30   000053A8
    0004  0000  00001D44   000053B0
    0004  0000  00001D4A   00004098
    0004  0000  00001D94   00005000
    0004  0000  00001D9B   00005000
    0004  0000  00001DBC   00004210
    0004  8000  00001DC1   0000218C
    0004  0000  00001DC8   000053A8
    0004  0000  00001DD2   000053B0
    0004  0000  00001DDF   00004098
    0004  0000  00001DE6   000053A8
    0004  8000  00001DED   000016B0
    0004  0000  00001DF4   000053B0
    0004  0000  00001E07   00004098
    0004  0000  00001E0E   000053A8
    0004  0000  00001E18   000053B0
    0004  0000  00001E25   00004098
    0004  0000  00001E2C   000053A8
    0004  0000  00001E3D   000053B0
    0004  0000  00001E46   00004098
    0004  0000  00001E4D   000053A8
    0004  0000  00001E64   000053B0
    0004  0000  00001E6D   00004098
    0004  0000  00001E7C   000053A8
    0004  0000  00001E86   000053B0
    0004  0000  00001E93   00004098
    0004  0000  00001E9C   00005000
    0004  0000  00001ECB   00004210
    0004  8000  00001ED3   000013F8
    0004  0000  00001EDF   00005000
    0004  0000  00001EE6   00005000
    0004  0000  00001F03   00004210
    0004  8000  00001F0D   000013D0
    0004  0000  00001F14   000053A8
    0004  0000  00001F1E   000053B0
    0004  0000  00001F2B   00004098
    0004  0000  00001F32   000053A8
    0004  8000  00001F39   000019A0
    0004  0000  00001F40   000053B0
    0004  0000  00001F53   00004098
    0004  0000  00001F5A   000053A8
    0004  0000  00001F64   000053B0
    0004  0000  00001F71   00004098
    0004  0000  00001F78   000053A8
    0004  0000  00001F89   000053B0
    0004  0000  00001F92   00004098
    0004  0000  00001F99   000053A8
    0004  0000  00001FB0   000053B0
    0004  0000  00001FB9   00004098
    0004  0000  00001FC8   000053A8
    0004  0000  00001FD2   000053B0
    0004  0000  00001FDF   00004098
    0004  0000  00001FE8   00005000
    0004  0000  00002018   000053A8
    0004  0000  00002022   000053B0
    0004  0000  0000202F   00004098
    0004  0000  00002036   000053A8
    0004  0000  00002040   000053B0
    0004  0000  00002062   00004098
    0004  0000  00002069   000053A8
    0004  0000  0000207A   000053B0
    0004  0000  00002083   00004098
    0004  0000  0000208A   000053A8
    0004  0000  000020A3   000053B0
    0004  0000  000020AC   00004098
    0004  0000  000020BB   000053A8
    0004  0000  000020C5   000053B0
    0004  0000  000020D2   00004098
    0004  0000  000020DB   00005000
    0004  0000  000020E2   00005000
    0004  0000  00002100   00004210
    0004  8000  0000210D   000013F8
    0005  0000  00002113   00005420
    0004  0000  0000211D   00003A00
    0004  0000  00002128   00003A30
    0004  0000  00002137   00004170
    0004  0000  0000213E   00005010
    0004  8000  00002143   000012F4
    0004  0000  0000214A   000053A8
    0004  0000  00002154   000053B0
    0004  0000  00002164   00004098
    0004  8000  00002171   000034B0
    0004  8000  000080B0   000037C0
    0004  8000  000080B7   00001CC0
    0004  0000  000080D3   000053A8
    0004  0000  00008111   000053B0
    0004  0000  00008117   00004098
    0004  0000  00008127   00005000
    0004  0000  0000812E   00005000
    0004  0000  0000814C   00004210
    0004  8000  00008159   000013F8
    0005  0000  0000815F   00005420
    0004  0000  00008169   000088C0
    0004  0000  00008174   00008AD0
    0004  0000  00008183   00004170
    0004  0000  0000818A   00005010
    0004  8000  0000818F   000012F4
    0004  0000  0000219A   00005148
    0004  0000  000021C1   00004098
    0003  8000  00004BC8   00002D44
    0004  0000  00001677   000050C0
    0004  8000  00001694   000011F8
    0004  8000  000016A1   000034B0
    0004  0000  000016D8   00005000
    0004  0000  000016DF   00005000
    0004  0000  000016E6   00004200
    0004  8000  0000170E   000013D0
    0004  0000  00001715   000053A8
    0004  0000  0000171F   00005058
    0004  0000  00001726   000053B0
    0004  0000  00001733   00004098
    0004  0000  0000173A   000053A8
    0004  0000  0000174E   000053B0
    0004  0000  00001754   00004098
    0004  0000  000017A4   00004038
    0004  0000  00001803   00005000
    0004  8000  00001825   000013F8
    0004  0000  0000183D   00005000
    0004  8000  00001861   000013F8
    0004  0000  0000186A   00005000
    0004  8000  0000188B   000013D0
    0004  0000  0000189F   00005000
    0004  8000  000018C6   000013F8
    0004  0000  000018DE   00005000
    0004  8000  00001902   000013F8
    0004  0000  0000190B   00005000
    0004  8000  0000192F   000013D0
    0004  0000  00001936   000053A8
    0004  0000  00001944   000053B0
    0004  0000  00001951   00004098
    0004  0000  00001958   00005000
    0004  8000  0000197C   000013D0
    0004  0000  000019C9   00005000
    0004  0000  000019D0   00005000
    0004  0000  000019D7   00004200
    0004  8000  000019FA   000013D0
    0004  0000  00001A01   000053A8
    0004  0000  00001A0B   00005058
    0004  0000  00001A12   000053B0
    0004  0000  00001A1F   00004098
    0004  0000  00001A26   000053A8
    0004  0000  00001A3A   000053B0
    0004  0000  00001A40   00004098
    0004  0000  00001A52   00005000
    0004  8000  00001A79   000013F8
    0004  0000  00001A8F   00005000
    0004  0000  00001A96   00005000
    0004  8000  00001AD9   00001BFC
    0004  0000  00001AE0   00005000
    0004  0000  00001B00   00005000
    0004  8000  00001B2E   00001C64
    0004  0000  00001B3D   00005000
    0004  0000  00001B4A   00005000
    0004  8000  00001B6D   000013D0
    0005  0000  00001B73   00005420
    0004  0000  00001B80   000041A0
    0004  0000  00001B87   00005010
    0004  8000  00001B8C   00001670
    0004  0000  00001B93   000053A8
    0004  0000  00001BA1   000053B0
    0004  0000  00001BAE   00004098
    0004  0000  00001BB5   00005000
    0004  8000  00001BD8   000013D0
    0004  0000  00001C0A   00005148
    0004  0000  00001C5A   00004098
    0004  0000  00001C72   00005148
    0004  0000  00001CA9   00004098
    0003  8000  00004B98   00002D44
    0004  0000  00007B00   00005000
    0004  0000  00007B07   00005000
    0004  0000  00007B24   000041F0
    0004  8000  00007B2E   000013D0
    0004  8000  00007B36   00007000
    0004  0000  00007B3F   00005000
    0004  0000  00007B5D   000041F0
    0004  8000  00007B6A   000013F8
    0004  0000  00007B8C   00005000
    0004  0000  00007B93   00005000
    0004  0000  00007BB0   000041F0
    0004  8000  00007BBA   000013D0
    0005  0000  00007BC0   00005420
    0004  0000  00007BCD   00004160
    0004  0000  00007BD7   00005010
    0004  8000  00007BDC   00001588
    0004  0000  00007BE3   00005010
    0004  8000  00007BE8   00001560
    0004  0000  00007BEF   000053A8
    0004  0000  00007BF9   000053B0
    0004  0000  00007C06   00004098
    0004  8000  00007C13   00007C18
    0008  0000  00009029   000053E0
    0004  0000  00009034   00004120
    0004  0000  0000903B   000053E0
    0004  0000  00009042   000053E0
    0004  0000  0000904C   000053E0
    0004  0000  00009056   000053E0
    0004  8000  0000905B   00007D1C
    0004  0000  00009065   000053E0
    0004  8000  0000906D   00007C90
    0004  0000  00009074   00005010
    0004  8000  0000907E   00001440
    0004  0000  00009088   00004140
    0004  8000  0000908D   00001548
    0004  0000  00009094   00005000
    0004  0000  0000909B   00005000
    0004  0000  000090A2   000041F0
    0004  8000  000090C4   000013D0
    0004  0000  000090F3   000053B0
    0004  8000  0000910E   00007B80
    0004  8000  00009120   00007AF0
    0004  0000  0000912B   000053A8
    0004  0000  00009141   00004098
    0004  0000  00009151   00005000
    0004  8000  00009178   000013F8
    0005  0000  0000917E   00005420
    0004  0000  00009188   00009350
    0004  0000  00009193   00009370
    0004  0000  000091A2   00004170
    0004  8000  000091AA   000012F4
    0004  8000  000091B2   00001560
    0004  8000  000091BA   00007C18
    0004  0000  000091C6   000053A8
    0004  0000  000091CD   000053D0
    0004  0000  000091D4   000053B0
    0004  0000  000091E0   00004098
    0004  0000  000091F0   00005000
    0004  8000  00009217   000013F8
    0005  0000  0000921D   00005420
    0004  0000  00009227   00009380
    0004  0000  00009233   000053A8
    0004  0000  0000923A   000053C8
    0004  0000  00009241   000053B0
    0004  0000  00009250   00004098
    0004  0000  00009260   00005000
    0004  8000  00009287   000013F8
    0005  0000  0000928D   00005420
    0004  0000  0000929B   000093B0
    0005  0000  000092A9   00005420
    0004  0000  000092C0   00004150
    0004  8000  000092C8   000015D8
    0004  0000  000092CF   00005000
    0004  8000  000092F5   000013F8
    0004  8000  0000153E   000037C0
    0004  0000  00001555   00004040
    0004  0000  00001577   00004030
    0004  0000  00001596   000050C0
    0004  8000  000015C1   000011F8
    0004  8000  000015CE   000034B0
    0004  0000  000015E6   000050C0
    0004  8000  00001621   000011F8
    0004  8000  0000162E   000034B0
    0004  0000  00007C25   00005000
    0004  0000  00007C2C   00005000
    0004  0000  00007C37   00005168
    0004  0000  00007C4F   00004060
    0004  0000  00007C56   00005000
    0004  0000  00007C71   00005150
    0004  0000  00007C77   00004098
    0004  0000  00007C99   000053E0
    0004  0000  00007CA0   00005000
    0004  0000  00007CA8   00005168
    0004  0000  00007CAF   00005000
    0004  8000  00007CC9   00001640
    0004  0000  00007CD0   00005158
    0004  0000  00007CE1   00004098
    0004  8000  00007CFC   00007E20
    0004  0000  00007D0B   000053E0
    0004  0000  00007D11   00004060
    0004  0000  00007D28   000089F0
    0004  0000  00007D39   00004048
    0004  0000  00007D43   00004068
    0004  0000  00007D4A   00008A10
    0004  0000  00007D51   00005160
    0004  0000  00007D5B   00004048
    0004  0000  00007D65   00004068
    0004  0000  00007D6C   00008A30
    0004  0000  00007D73   00005148
    0004  0000  00007D7D   00004048
    0004  0000  00007D87   00004068
    0004  0000  00007D8E   00005140
    0004  0000  00007D95   00005160
    0008  0000  00007D9B   00005168
    0004  0000  00007DB6   00004098
    0004  0000  00007DC3   00008A70
    0004  0000  00007DCD   00004048
    0004  0000  00007DD7   00004068
    0004  0000  00007DDE   00005158
    0004  0000  00007DEA   00008AB0
    0004  0000  00007DF4   00004048
    0004  0000  00007DFE   00004068
    0004  0000  00007E05   00005150
    0008  0000  00007E0B   00005168
    0005  0000  00007EFD   00005168
    0004  0000  00007F0C   00005140
    0004  0000  00007F2E   00004098
    0004  0000  00007F40   00005140
    0004  0000  00007F60   00004098
    0004  8000  00007FFB   000037C0
    0004  8000  00008028   00003500
    0003  8000  00004B18   00002D44
    0003  8000  00004B2C   00002D44
    0001  0000  00005000   00005000
    0001  0000  00005040   00005420
    0001  0000  00005048   000041B0
    0001  0000  00005050   000041C0
    0001  0000  00005060   000041E0
    0001  0000  00005070   00005058
    0004  0000  00007022   000050C0
    0004  0000  00007030   00008780
    0004  0000  00007036   00008780
    0004  0000  0000703F   00008780
    0004  0000  0000705F   00008780
    0004  0000  00007066   000087B0
    0004  0000  00007072   000087B0
    0004  0000  0000708A   000087B0
    0004  0000  000070B3   00005000
    0004  0000  000070BA   00005000
    0004  0000  000070DE   00004130
    0004  8000  000070E3   000013D0
    0004  8000  000070F5   00001098
    0004  0000  0000710F   00005000
    0004  0000  0000712D   00004130
    0004  8000  00007137   000013D0
    0004  8000  00007146   00001000
    0004  0000  00007157   00005000
    0004  0000  00007177   00005000
    0004  0000  0000717E   00004130
    0004  8000  0000718F   000013F8
    0004  0000  00007196   00005420
    0004  0000  000071A3   000087E0
    0004  0000  000071B1   00008820
    0004  0000  000071C0   00004170
    0004  0000  000071C7   00005010
    0004  8000  000071CC   000012F4
    0004  0000  000071D8   000053A8
    0004  0000  000071E4   000053B0
    0004  0000  000071F1   00004098
    0004  0000  000071F8   000053B0
    0004  0000  00007220   00005058
    0004  8000  0000722E   000078C0
    0004  0000  00007239   000053A8
    0004  0000  0000724F   00004098
    0004  0000  0000725C   00005000
    0004  0000  0000727C   00005000
    0004  0000  00007283   00004130
    0004  8000  00007294   000013F8
    0004  0000  0000729B   00005420
    0004  0000  000072A8   00008840
    0004  0000  000072B4   000053A8
    0004  0000  000072BB   00005058
    0004  0000  000072C7   000053B0
    0004  0000  000072D4   00004098
    0004  0000  000072EA   000053A8
    0004  0000  000072F1   000053C8
    0004  0000  000072FF   000053B0
    0004  0000  00007305   00004098
    0004  0000  00007312   00005000
    0004  0000  00007332   00005000
    0004  0000  00007339   00004130
    0004  8000  0000734A   000013F8
    0004  0000  00007351   00005420
    0004  0000  0000735E   00008860
    0004  0000  0000736A   000053A8
    0004  0000  00007371   000053D0
    0004  0000  0000737D   000053B0
    0004  0000  00007387   00004098
    0004  0000  00007397   00005000
    0004  0000  000073B4   00005000
    0004  0000  000073BB   00004130
    0004  8000  000073CC   000013F8
    0004  0000  000073D3   00005420
    0004  0000  000073DF   00008890
    0004  0000  000073EA   00008820
    0004  0000  000073F9   00004170
    0004  0000  00007400   00005010
    0004  8000  00007405   000012F4
    0004  0000  0000740C   000053A8
    0004  0000  00007413   000053C8
    0004  0000  0000741A   000053B0
    0004  0000  00007427   00004098
    0004  0000  00007436   000053A8
    0004  0000  0000744C   000053B0
    0004  0000  0000746D   00004098
    0004  0000  0000747A   00005000
    0004  0000  00007497   00005000
    0004  0000  0000749E   00004130
    0004  8000  000074AF   000013F8
    0004  0000  000074B6   00005420
    0004  0000  000074C3   000088C0
    0004  0000  000074D2   000053A8
    0004  0000  000074E5   000053B0
    0004  0000  000074F2   00004098
    0004  0000  0000750E   00005000
    0004  0000  00007515   00005000
    0004  0000  00007532   00005000
    0004  0000  00007539   00004130
    0004  8000  0000754A   000013F8
    0004  0000  00007551   00005420
    0004  0000  00007561   00008900
    0004  0000  0000756C   00008820
    0004  0000  0000757B   00004170
    0004  0000  00007582   00005010
    0004  8000  00007587   000012F4
    0004  0000  00007593   00005000
    0004  0000  0000759A   00005000
    0004  0000  000075B8   00004130
    0004  8000  000075C2   000013D0
    0004  0000  000075C9   000053A8
    0004  0000  000075D8   000053B0
    0004  0000  000075E5   00004098
    0005  0000  000075EB   00005420
    0004  0000  000075FC   00004180
    0004  0000  0000760B   00005010
    0004  8000  00007610   00001248
    0004  0000  00007617   000053B0
    0004  0000  0000764D   000053A8
    0004  0000  00007665   00004098
    0004  0000  00007672   00005000
    0004  0000  00007679   00005000
    0004  0000  00007696   00005000
    0004  0000  0000769D   00004130
    0004  8000  000076AE   000013F8
    0004  0000  000076B5   00005420
    0004  0000  000076C2   00008930
    0004  0000  000076D1   000053A8
    0004  0000  000076E4   000053B0
    0004  0000  000076F1   00004098
    0004  0000  000076FE   00005000
    0004  0000  00007705   00005000
    0004  0000  00007722   00005000
    0004  0000  00007729   00004130
    0004  8000  0000773A   000013F8
    0004  0000  00007741   00005420
    0004  0000  0000774E   00008950
    0004  8000  0000775D   000081A4
    0004  0000  0000776A   00005000
    0004  0000  00007771   00005000
    0004  0000  0000778E   00005000
    0004  0000  00007795   00004130
    0004  8000  000077A6   000013F8
    0004  0000  000077AD   00005420
    0004  0000  000077B6   00008980
    0004  8000  000077C5   00008098
    0004  0000  000077CE   00005000
    0004  0000  000077E3   000053A8
    0004  0000  000077EA   000053B0
    0004  0000  000077F7   00004098
    0004  0000  000077FE   00005000
    0004  0000  0000781C   00004130
    0004  8000  00007829   000013F8
    0004  0000  00007834   00005000
    0004  0000  00007852   00004130
    0004  8000  0000785C   000013D0
    0004  0000  00007863   00005000
    0004  0000  00007881   00004130
    0004  8000  0000788B   000013D0
    0004  8000  00007899   000034B0
    0004  0000  000078DF   00005000
    0004  0000  000078E6   00005000
    0004  0000  00007903   00004130
    0004  8000  0000790D   000013D0
    0004  0000  00007914   000053A8
    0004  0000  0000791E   00005058
    0004  0000  00007925   000053B0
    0004  0000  00007932   00004098
    0004  0000  00007939   000053A8
    0004  0000  00007943   000053C8
    0004  0000  00007954   000053B0
    0004  0000  0000795A   00004098
    0004  0000  00007969   00005000
    0004  0000  00007986   00005000
    0004  0000  00007993   00004130
    0004  8000  0000799C   000013F8
    0005  0000  000079A2   00005420
    0004  0000  000079AF   00008860
    0004  0000  000079BA   000089C0
    0004  0000  000079C9   00004170
    0004  0000  000079D0   00005010
    0004  8000  000079D5   000012F4
    0004  0000  000079DC   000053A8
    0004  0000  000079E3   000053D0
    0004  0000  000079EA   000053B0
    0004  0000  000079F4   00004098
    0004  8000  00007A03   00008704
    0004  0000  00007A10   000053A8
    0004  0000  00007A1A   000053D0
    0004  0000  00007A21   000053B0
    0004  0000  00007A2E   00004098
    0004  0000  00007A42   000053A8
    0004  0000  00007A4C   000053D0
    0004  0000  00007A53   000053B0
    0004  0000  00007A60   00004098
    0004  0000  00007A67   000053A8
    0004  0000  00007A6E   000053C8
    0004  0000  00007A75   000053B0
    0004  0000  00007A82   00004098
    0004  0000  00007A89   000053A8
    0004  0000  00007A94   000053B0
    0004  0000  00007AA1   00004098
    0004  0000  00007AA8   00005000
    0004  0000  00007AC5   00004130
    0004  8000  00007ACF   000013D0
    0004  0000  00001058   000041C8
    0004  0000  0000106A   000053A8
    0004  0000  00001071   000053B0
    0004  0000  00001089   00004098
    0004  0000  000010B2   000050C0
    0004  0000  000010C9   000039D0
    0004  0000  000010D4   00004048
    0004  0000  000010DB   000039E0
    0004  0000  000010E6   00004048
    0004  0000  000010ED   000053A8
    0004  0000  00001115   000053B0
    0004  0000  00001125   00004098
    0004  0000  00001137   000053A8
    0004  0000  00001160   000053B0
    0004  0000  0000116D   00004098
    0004  0000  00001185   00004048
    0004  0000  00001197   00004048
    0004  0000  000011B1   00004078
    0004  0000  000011C8   00004078
    0004  8000  000011E1   000034B0
    0004  0000  0000123E   00004070
    0004  0000  00001254   000050C0
    0004  0000  000012B7   000039B0
    0004  8000  000012DB   000011F8
    0004  8000  000012E8   000034B0
    0004  0000  00001300   000050C0
    0004  0000  00001345   000039C0
    0004  0000  00001386   000039B0
    0004  8000  000013B6   000011F8
    0004  8000  000013C3   000034B0
    0004  0000  000013D7   00005148
    0004  0000  000013EF   00004098
    0004  0000  00001406   00005148
    0004  0000  0000142D   00004098
    0003  8000  000049C0   00002D44
    0003  8000  000049FC   00002D44
    0003  8000  00004A44   00002D44
    0003  8000  00004A58   00002D44
    0001  8000  00004090   00002DD0
    0001  8000  00004098   00003470
    0001  8000  000040A0   00002DD0
    0001  8000  000040A8   00003490
    0001  8000  000040B0   00003490
    0004  0000  00003492   00004098
    0001  0000  00004270   00004230
    0003  0000  00004048   000094A0
    0003  0000  00009458   000094A0
    0003  0000  00004050   0000957E
    0003  0000  00009460   0000957E
    0003  0000  00004078   000094B8
    0003  0000  00009488   000094B8
    0003  0000  00004038   0000953C
    0003  0000  00009448   0000953C
    0003  0000  00004068   000094E6
    0003  0000  00009478   000094E6
    0003  0000  00004080   0000955C
    0003  0000  00009490   0000955C
    0003  0000  00004060   00009502
    0003  0000  00009470   00009502
    0003  0000  00004070   000094D2
    0003  0000  00009480   000094D2
    0003  0000  00004030   0000952C
    0003  0000  00009440   0000952C
    0003  0000  00004040   0000951E
    0003  0000  00009450   0000951E
    0003  0000  00004058   00009596
    0003  0000  00009468   00009596
    0003  0000  000093E0   00009570
    0003  0000  000093D4   00009440
    0003  0000  000093E4   00004030
    0004  0000  00002E88   00005080
    0005  0000  000037E4   00005080
    0004  8000  000037F4   00003900
    0005  0000  00003903   00005080
    0004  8000  0000393D   00003980
    0004  8000  00003991   00002DE0
    0004  0000  000034E2   00004098
    0004  8000  00002D53   00002D64
    0004  8000  00002DBA   000034B0
    0001  0000  00004598   000050C0
    0001  0000  000045B0   00004090
    0001  0000  000045B8   00004098
    0001  0000  000045C0   000040C0
    0001  0000  00004658   000040A0
    0001  0000  00004660   000040A8
    0001  0000  00004668   000040B0
    0001  0000  00004670   000040B8
    0004  0000  0000931F   000050C0
    0004  0000  0000933D   000050C8
    0004  0000  000034B3   000050C0
    0004  8000  000034CA   00002EA0
    0003  0000  00004020   000095F8
    0004  0000  00003452   00004020
    0003  0000  00009430   000095F8
    0003  0000  00004008   000095CE
    0004  0000  0000342E   00004008
    0003  0000  00009418   000095CE
    0003  0000  00004000   000095E2
    0004  0000  00003442   00004000
    0003  0000  00009410   000095E2
    0003  0000  00004018   000095A4
    0004  0000  00003422   00004018
    0003  0000  00009428   000095A4
    0003  0000  00004010   000095B6
    0004  0000  00003428   00004010
    0003  0000  00009420   000095B6
    0003  0000  000093F4   00009610
    0003  0000  000093E8   00009410
    0003  0000  000093F8   00004000
    0001  0000  000050D8   00004278
    0001  0000  000050F0   000053A8
    0004  8000  00002EAD   0000332C
    0004  0000  00002EBE   000042B8
    0004  8000  00002EDA   00003426
    0004  0000  00002EE5   000053B0
    0004  0000  00002EEC   000050D0
    0004  8000  00002EF6   000034E0
    0004  0000  00002F07   000050D0
    0004  8000  00002F0C   00003340
    0004  0000  00002F13   000053B0
    0004  0000  00002F1A   000050D0
    0004  0000  00002F21   00005398
    0004  8000  00002F26   0000342C
    0004  8000  00002F41   0000931C
    0004  8000  00002F4C   00002F5C
    0004  8000  00002F83   00009000
    0004  0000  00002F8F   00005180
    0004  0000  00002F96   000053B8
    0004  0000  00002F9D   00005398
    0008  0000  00002FA3   00005398
    0004  0000  00002FB1   00005398
    0004  0000  00002FB8   00004050
    0004  0000  00002FC4   000053B0
    0004  0000  00002FCE   000050D0
    0004  8000  00002FD6   00003420
    0004  0000  00002FE1   000053A8
    0004  0000  00002FE8   000050D0
    0004  0000  00002FF6   00005388
    0004  8000  00002FFB   000031B0
    0004  8000  00003006   000030EC
    0004  8000  00003017   00009000
    0004  0000  0000302E   00004290
    0004  0000  00003038   00004058
    0004  8000  00003042   00002EA8
    0004  8000  00003047   00002F00
    0004  0000  0000306C   000053B0
    0004  0000  00003082   000053C0
    0004  8000  00003089   000030C0
    0004  8000  0000309D   000030B0
    0004  0000  000030A4   00005388
    0004  8000  000030B5   00002F00
    0004  0000  000030C7   000053C0
    0004  8000  000030D3   000030C0
    0004  8000  000030DD   000034E0
    0004  8000  000030E2   00002F00
    0001  0000  00005118   00005100
    0004  0000  000031C9   00005100
    0004  0000  000031D0   00005110
    0004  0000  000031E6   000043A0
    0004  0000  000031F6   00004058
    0004  0000  0000320C   00005100
    0004  0000  00003253   00005118
    0004  0000  0000325F   000053B0
    0004  8000  00003269   00003440
    0004  8000  00003271   000034E0
    0004  0000  00003282   00004470
    0004  0000  000032A0   00004058
    0004  0000  000032C4   000053B0
    0004  8000  000032CF   00003440
    0004  0000  000032EA   000044E0
    0004  0000  00003302   00004058
    0004  0000  00003312   00004450
    0004  0000  0000331C   00004058
    0004  0000  0000332F   00005100
    0004  0000  00003336   00005118
    0004  0000  00003352   00005118
    0004  0000  00003359   00005100
    0004  0000  00003360   00005100
    0004  0000  000033B7   000053B0
    0004  8000  000033BE   00003450
    0004  8000  000033C9   000034E0
    0004  0000  000033D2   000053B0
    0004  8000  000033DD   00003450
    0004  0000  000033ED   00004450
    0004  0000  000033F7   00004058
    0004  0000  000030F9   00005120
    0004  0000  00003100   00005130
    0004  0000  00003116   000042D0
    0004  0000  00003125   00004058
    0004  0000  00003138   00005120
    0004  8000  00003176   000034E0
    0004  0000  0000318A   00004378
    0004  0000  00003194   00004058
    0003  4000  00006000   00001000
    0003  4000  00006004   00001000
    0003  0000  00006008   00004A04
    0003  4000  0000600C   00001098
    0003  4000  00006010   00001098
    0003  0000  00006014   000049E4
    0003  4000  00006018   000011F8
    0003  4000  0000601C   000011F8
    0003  0000  00006020   00004A2C
    0003  4000  00006024   00001248
    0003  4000  00006028   00001248
    0003  0000  0000602C   00004A38
    0003  4000  00006030   000012F4
    0003  4000  00006034   000012F4
    0003  0000  00006038   00004A4C
    0003  4000  0000603C   000013D0
    0003  4000  00006040   000013D0
    0003  0000  00006044   00004A14
    0003  4000  00006048   000013F8
    0003  4000  0000604C   000013F8
    0003  0000  00006050   00004A20
    0003  4000  00006054   00001440
    0003  4000  00006058   00001440
    0003  0000  0000605C   00004AE8
    0003  4000  00006060   00001548
    0003  4000  00006064   00001548
    0003  0000  00006068   00004AF4
    0003  4000  0000606C   00001560
    0003  4000  00006070   00001560
    0003  0000  00006074   00004B00
    0003  4000  00006078   00001588
    0003  4000  0000607C   00001588
    0003  0000  00006080   00004B0C
    0003  4000  00006084   000015D8
    0003  4000  00006088   000015D8
    0003  0000  0000608C   00004B20
    0003  4000  00006090   00001670
    0003  4000  00006094   00001670
    0003  0000  00006098   00004B8C
    0003  4000  0000609C   000016B0
    0003  4000  000060A0   000016B0
    0003  0000  000060A4   00004B54
    0003  4000  000060A8   000019A0
    0003  4000  000060AC   000019A0
    0003  0000  000060B0   00004B34
    0003  4000  000060B4   00001BFC
    0003  4000  000060B8   00001BFC
    0003  0000  000060BC   00004B74
    0003  4000  000060C0   00001C64
    0003  4000  000060C4   00001C64
    0003  0000  000060C8   00004B80
    0003  4000  000060CC   00001CC0
    0003  4000  000060D0   00001CC0
    0003  0000  000060D4   00004BB0
    0003  4000  000060D8   0000218C
    0003  4000  000060DC   0000218C
    0003  0000  000060E0   00004A20
    0003  4000  000060E4   000021D0
    0003  4000  000060E8   000021D0
    0003  0000  000060EC   00004C18
    0003  4000  000060F0   00002460
    0003  4000  000060F4   00002460
    0003  0000  000060F8   00004BD0
    0003  4000  000060FC   00002C6C
    0003  4000  00006100   00002C6C
    0003  0000  00006104   00004C38
    0003  4000  00006108   00002D04
    0003  4000  0000610C   00002D04
    0003  0000  00006110   00004A20
    0003  4000  00006114   00002D44
    0003  4000  00006118   00002D44
    0003  0000  0000611C   00004C48
    0003  4000  00006120   00002D64
    0003  4000  00006124   00002D64
    0003  0000  00006128   00004C48
    0003  4000  0000612C   00002DE0
    0003  4000  00006130   00002DE0
    0003  0000  00006134   00004C88
    0003  4000  00006138   00002EA8
    0003  4000  0000613C   00002EA8
    0003  0000  00006140   00004C9C
    0003  4000  00006144   00002F00
    0003  4000  00006148   00002F00
    0003  0000  0000614C   00004C48
    0003  4000  00006150   00002F30
    0003  4000  00006154   00002F30
    0003  0000  00006158   00004CC4
    0003  4000  0000615C   00002F5C
    0003  4000  00006160   00002F5C
    0003  0000  00006164   00004CA8
    0003  4000  00006168   000030B0
    0003  4000  0000616C   000030B0
    0003  0000  00006170   00004C48
    0003  4000  00006174   000030C0
    0003  4000  00006178   000030C0
    0003  0000  0000617C   00004C48
    0003  4000  00006180   000030EC
    0003  4000  00006184   000030EC
    0003  0000  00006188   00004CD4
    0003  4000  0000618C   000031B0
    0003  4000  00006190   000031B0
    0003  0000  00006194   00004CF8
    0003  4000  00006198   00003340
    0003  4000  0000619C   00003340
    0003  0000  000061A0   00004CE4
    0003  8000  000061A4   00003470
    0003  8000  000061A8   00003470
    0003  0000  000061AC   00004C58
    0003  8000  000061B0   00003490
    0003  8000  000061B4   00003490
    0003  0000  000061B8   00004C58
    0003  8000  000061BC   000034B0
    0003  8000  000061C0   000034B0
    0003  0000  000061C4   00004C98
    0003  8000  000061C8   000034E0
    0003  8000  000061CC   000034E0
    0003  0000  000061D0   00004C58
    0003  8000  000061D4   00003500
    0003  8000  000061D8   00003500
    0003  0000  000061DC   00004C58
    0003  8000  000061E0   000037C0
    0003  8000  000061E4   000037C0
    0003  0000  000061E8   00004C58
    0003  8000  000061EC   00003900
    0003  8000  000061F0   00003900
    0003  0000  000061F4   00004C60
    0003  8000  000061F8   00003980
    0003  8000  000061FC   00003980
    0003  0000  00006200   00004C70
    0003  4000  00006204   00007000
    0003  4000  00006208   00007000
    0003  0000  0000620C   000049A0
    0003  4000  00006210   000078C0
    0003  4000  00006214   000078C0
    0003  0000  00006218   000049C8
    0003  4000  0000621C   00007AF0
    0003  4000  00006220   00007AF0
    0003  0000  00006224   00004A84
    0003  4000  00006228   00007B80
    0003  4000  0000622C   00007B80
    0003  0000  00006230   00004A94
    0003  4000  00006234   00007C18
    0003  4000  00006238   00007C18
    0003  0000  0000623C   00004ACC
    0003  4000  00006240   00007C90
    0003  4000  00006244   00007C90
    0003  0000  00006248   00004ADC
    0003  4000  0000624C   00007D1C
    0003  4000  00006250   00007D1C
    0003  0000  00006254   00004AA0
    0003  4000  00006258   00007E20
    0003  4000  0000625C   00007E20
    0003  0000  00006260   00004AAC
    0003  4000  00006264   00008098
    0003  4000  00006268   00008098
    0003  0000  0000626C   00004BA0
    0003  4000  00006270   000081A4
    0003  4000  00006274   000081A4
    0003  0000  00006278   00004BF4
    0003  4000  0000627C   00008704
    0003  4000  00006280   00008704
    0003  0000  00006284   00004AF4
    0003  4000  00006288   00009000
    0003  4000  0000628C   00009000
    0003  0000  00006290   00004A60
    0003  8000  000040C0   00001440
    0003  8000  000040C4   00001640
    0003  8000  000040C8   000016B0
    0003  8000  000040CC   000019A0
    0003  8000  000040D0   00001CC0
    0003  8000  000040D4   000021D0
    0003  8000  000040D8   00002460
    0003  8000  000040DC   00002DD0
    0003  8000  000040E0   00002DE0
    0003  8000  000040E4   00002EA0
    0003  8000  000040E8   00002F30
    0003  8000  000040EC   000030B0
    0003  8000  000040F0   000030C0
    0003  8000  000040F4   00003440
    0003  8000  000040F8   00003450
    0003  8000  000040FC   00003900
    0003  8000  00004100   00003980
    0003  8000  00004104   000078C0
    0003  8000  00004108   00007AF0
    0003  8000  0000410C   00007B80
    0003  8000  00004110   00007E20
    0003  0000  00004694   00004700

*** OMAP FROM SRC

DBIOpenDbg(, dbgtypeOmapFromSrc,) failed.

*** OMAP TO SRC

DBIOpenDbg(, dbgtypeOmapToSrc,) failed.

*** PDATA/XDATA


Function Table (55 entries)
	Machine = x64
	Header = {
		ver     = 1
		cbHdr   = 32
		cbData  = 660
		rvaData = 0x00006000
		vaImage = 0x0000000140000000
		dwRes1  = 0x00000000
		dwRes2  = 0x00000000
	};

Xdata header
	Header = {
		ver     = 1
		cbHdr   = 32
		cbData  = 880
		rvaData = 0x000049a0
		vaImage = 0x0000000140000000
		dwRes1  = 0x00000000
		dwRes2  = 0x00000000
	};

         RVABegin  RVAEnd    RVAUnwindInfo
00000000 00001000  00001096  00004A04
NYI
0000000C 00001098  000011F8  000049E4
NYI
00000018 000011F8  00001248  00004A2C
NYI
00000024 00001248  000012F1  00004A38
NYI
00000030 000012F4  000013D0  00004A4C
NYI
0000003C 000013D0  000013F8  00004A14
NYI
00000048 000013F8  00001436  00004A20
NYI
00000054 00001440  00001548  00004AE8
NYI
00000060 00001548  0000155E  00004AF4
NYI
0000006C 00001560  00001588  00004B00
NYI
00000078 00001588  000015D7  00004B0C
NYI
00000084 000015D8  00001637  00004B20
NYI
00000090 00001670  000016AA  00004B8C
NYI
0000009C 000016B0  0000199D  00004B54
NYI
000000A8 000019A0  00001BFB  00004B34
NYI
000000B4 00001BFC  00001C63  00004B74
NYI
000000C0 00001C64  00001CB2  00004B80
NYI
000000CC 00001CC0  0000218A  00004BB0
NYI
000000D8 0000218C  000021CA  00004A20
NYI
000000E4 000021D0  00002457  00004C18
NYI
000000F0 00002460  00002C69  00004BD0
NYI
000000FC 00002C6C  00002D02  00004C38
NYI
00000108 00002D04  00002D42  00004A20
NYI
00000114 00002D44  00002D62  00004C48
NYI
00000120 00002D64  00002DC4  00004C48
NYI
0000012C 00002DE0  00002E95  00004C88
NYI
00000138 00002EA8  00002F00  00004C9C
NYI
00000144 00002F00  00002F30  00004C48
NYI
00000150 00002F30  00002F5C  00004CC4
NYI
0000015C 00002F5C  000030AC  00004CA8
NYI
00000168 000030B0  000030BF  00004C48
NYI
00000174 000030C0  000030EC  00004C48
NYI
00000180 000030EC  000031AD  00004CD4
NYI
0000018C 000031B0  0000332A  00004CF8
NYI
00000198 00003340  00003411  00004CE4
NYI
000001A4 00003470  00003475  00004C58
NYI
000001B0 00003490  00003496  00004C58
NYI
000001BC 000034B0  000034CE  00004C98
NYI
000001C8 000034E0  000034E6  00004C58
NYI
000001D4 00003500  000037AA  00004C58
NYI
000001E0 000037C0  000038C7  00004C58
NYI
000001EC 00003900  00003943  00004C60
NYI
000001F8 00003980  000039A6  00004C70
NYI
00000204 00007000  000078BA  000049A0
NYI
00000210 000078C0  00007AEE  000049C8
NYI
0000021C 00007AF0  00007B7B  00004A84
NYI
00000228 00007B80  00007C17  00004A94
NYI
00000234 00007C18  00007C8E  00004ACC
NYI
00000240 00007C90  00007D1B  00004ADC
NYI
0000024C 00007D1C  00007E19  00004AA0
NYI
00000258 00007E20  00008098  00004AAC
NYI
00000264 00008098  000081A3  00004BA0
NYI
00000270 000081A4  00008704  00004BF4
NYI
0000027C 00008704  00008774  00004AF4
NYI
00000288 00009000  0000931C  00004A60
NYI

*** SECTION HEADERS


SECTION HEADER #1
   .text name
    2BD2 virtual size
    1000 virtual address
    2C00 size of raw data
     400 file pointer to raw data
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
68000020 flags
         Code
         Not Paged
         (no align specified)
         Execute Read

SECTION HEADER #2
  .rdata name
     D10 virtual size
    4000 virtual address
     E00 size of raw data
    3000 file pointer to raw data
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
48000040 flags
         Initialized Data
         Not Paged
         (no align specified)
         Read Only

SECTION HEADER #3
   .data name
     424 virtual size
    5000 virtual address
     200 size of raw data
    3E00 file pointer to raw data
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
C8000040 flags
         Initialized Data
         Not Paged
         (no align specified)
         Read Write

SECTION HEADER #4
  .pdata name
     294 virtual size
    6000 virtual address
     400 size of raw data
    4000 file pointer to raw data
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
48000040 flags
         Initialized Data
         Not Paged
         (no align specified)
         Read Only

SECTION HEADER #5
    PAGE name
    1C32 virtual size
    7000 virtual address
    1E00 size of raw data
    4400 file pointer to raw data
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
60000020 flags
         Code
         (no align specified)
         Execute Read

SECTION HEADER #6
    INIT name
     61C virtual size
    9000 virtual address
     800 size of raw data
    6200 file pointer to raw data
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
62000020 flags
         Code
         Discardable
         (no align specified)
         Execute Read

SECTION HEADER #7
   .rsrc name
    1110 virtual size
    A000 virtual address
    1200 size of raw data
    6A00 file pointer to raw data
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
42000040 flags
         Initialized Data
         Discardable
         (no align specified)
         Read Only

SECTION HEADER #8
  .reloc name
      40 virtual size
    C000 virtual address
     200 size of raw data
    7C00 file pointer to raw data
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
42000040 flags
         Initialized Data
         Discardable
         (no align specified)
         Read Only

*** ORIGINAL SECTION HEADERS

DBIOpenDbg(, dbgtypeSectionHdrOrig,) failed.

*** CROSS MODULE EXPORTS

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "* Linker *" from ""


*** CROSS MODULE IMPORTS

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "* Linker *" from ""


*** FUNCTION TOKEN MAP

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "* Linker *" from ""


*** TYPE TOKEN MAP

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "* Linker *" from ""


*** MERGED ASSEMBLY INPUT

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Device.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Driver.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Filter.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Queue.obj"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.obj"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\gshandler.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\guard_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memcpy.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\string\nt\objfre\amd64\memset.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdmlib\wdmsec\io\objfre\amd64\iosddl.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_check.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\guard_xfg_dispatch.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\libw32\lib\memlib\..\..\..\crtw32\misc\nt\objfre\amd64\cpuinfo.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\amdsecgs.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_support.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\tools\gs_support\kmodefastfail\mp\objfre\amd64\gs_report.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\inittypes.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfDriverEntry.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\guard\objfre\amd64\dispatchcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "d:\os\obj\amd64fre\minkernel\crts\crtw32\misc\nt\objfre\amd64\loadcfg.obj" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\BufferOverflowFastFailK.lib"

** Module: "C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res"

** Module: "Import:ntoskrnl.exe" from "C:\Program Files (x86)\Windows Kits\10\lib\10.0.26100.0\km\x64\wdmsec.lib"

** Module: "Import:WDFLDR.SYS" from "C:\Program Files (x86)\Windows Kits\10\lib\wdf\kmdf\x64\1.15\WdfLdr.lib"

** Module: "* Linker *" from ""


*** STRINGTABLE

00000001 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntdef.h
0000004c C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\Sideband.tmh
00000091 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\driver.tmh
000000d4 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntddk.h
0000011b C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftypes.h
00000163 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffuncenum.h
000001ae C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfobject.h
000001f7 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfmemory.h
00000240 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfchildlist.h
0000028c C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdm.h
000002d1 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdevice.h
0000031a C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfinterrupt.h
00000366 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfrequest.h
000003b0 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfiotarget.h
000003fb C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfio.h
00000440 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfWMI.h
00000486 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb.h
000004cf C:\Users\appveyor\projects\bthps3\BthPS3PSM\L2CAP.h
00000503 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.h
0000054a C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\devpropdef.h
0000059a C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntprov.h
000005e8 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\guiddef.h
00000635 C:\Users\appveyor\projects\bthps3\BthPS3PSM\device.h
0000066a C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfglobals.h
000006b4 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdriver.h
000006fd C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbspec.h
0000074a C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfworkitem.h
00000795 C:\Users\appveyor\projects\bthps3\common\include\BthPS3.h
000007cf onecore\external\sdk\inc\winnt.h
000007f0 minkernel\crts\crtw32\misc\guard_support.c
0000081b onecore\internal\sdk\inc\rtlfeatureconfigtypes.h
0000084c onecore\internal\sdk\inc\ntpsapi.h
0000086f minkernel\crts\crtw32\h\internal.h
00000892 onecore\internal\sdk\inc\ntexapi.h
000008b5 onecore\internal\sdk\inc\ntxcapi.h
000008d8 onecore\internal\sdk\inc\ntmmapi_x.h
000008fd onecore\internal\sdk\inc\ntmmapi.h
00000920 onecore\internal\sdk\inc\ntseapi.h
00000943 onecore\internal\sdk\inc\MinWin\ntioapi_x.h
0000096f onecore\internal\sdk\inc\ntpsapi_x.h
00000994 minkernel\crts\crtw32\h\excpt.h
000009b4 onecore\internal\sdk\inc\ntkeapi_x.h
000009d9 onecore\external\sdk\inc\MinWin\rtlsupportapi.h
00000a09 onecore\internal\sdk\inc\ntamd64_x.h
00000a2e minkernel\crts\crtw32\misc\amd64\gshandler.c
00000a5b onecore\internal\sdk\inc\ntxcapi_x.h
00000a80 onecore\external\ddk\inc\ntimage.h
00000aa3 onecore\external\ifskit\inc\wdm.h
00000ac5 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdriver.h
00000af8 onecore\external\ddk\inc\wdm.h
00000b17 onecore\external\shared\inc\dpfilter.h
00000b3e minkernel\wdf\framework\shared\inc\private\common\fxldr.h
00000b78 OneCore\Internal\MinWin\Priv_Sdk\Inc\kmdf\private\FxIFR.h
00000bb2 onecore\internal\ddk\inc\wdf\kmdf\1.15\wdfcxbase.h
00000be5 onecore\external\shared\inc\MinWin\ntdef.h
00000c10 OneCore\Private\MinWin\Priv_Sdk\Inc\kmdf\private\wdfldr.h
00000c4a 
00000c4b C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSM.res
00000c91 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\BthPS3PSMETW.res
00000cda C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\apiset.h
00000d26 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\warning.h
00000d73 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\suppress.h
00000dc1 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Driver.h
00000df6 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfresource.h
00000e41 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ktmtypes.h
00000e8f C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\excpt.h
00000eda C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\crtdefs.h
00000f27 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings.h
00000f78 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sal.h
00000fc1 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\concurrencysal.h
00001015 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_strict.h
0000106d C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\specstrings_undef.h
000010c4 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\driverspecs.h
00001115 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdv_driverspecs.h
0000116a C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\vadefs.h
000011b6 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winapifamily.h
00001208 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\winpackagefamily.h
0000125e C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\kernelspecs.h
000012af C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\basetsd.h
000012fc C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdf.h
0000133f C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaEnabler.h
0000138c C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffileobject.h
000013d9 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfroletypes.h
00001425 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfhwaccess.h
00001470 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\initguid.h
000014be C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstring.h
00001507 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfDmaTransaction.h
00001558 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdftimer.h
000015a0 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcollection.h
000015ed C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdffdo.h
00001633 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack4.h
00001681 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfCommonBuffer.h
000016d0 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\pshpack1.h
0000171e C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\sdkddkver.h
0000176d C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\poppack.h
000017ba C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\string.h
00001806 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfregistry.h
00001851 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntstatus.h
0000189f C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcore.h
000018e6 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\bugcodes.h
00001934 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\ntiologc.h
00001982 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stddef.h
000019ce C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfcontrol.h
00001a18 C:\Users\appveyor\projects\bthps3\BthPS3PSM\queue.h
00001a4c C:\Users\appveyor\projects\bthps3\BthPS3PSM\driver.h
00001a81 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\stdarg.h
00001acd C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\wdmsec.h
00001b15 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\wmistr.h
00001b61 C:\Users\appveyor\projects\bthps3\BthPS3PSM\trace.h
00001b95 C:\Users\appveyor\projects\bthps3\BthPS3PSM\UsbUtil.h
00001bcb C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfstatus.h
00001c14 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.h
00001c4b C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfassert.h
00001c94 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfverifier.h
00001cdf C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\evntrace.h
00001d2d C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\WdfQueryInterface.h
00001d7e C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\crt\ctype.h
00001dc9 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\mce.h
00001e0e C:\Users\appveyor\projects\bthps3\BthPS3PSM\Filter.h
00001e43 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfbugcodes.h
00001e8e C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpdo.h
00001ed4 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\queue.tmh
00001f16 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfdpc.h
00001f5c C:\Users\appveyor\projects\bthps3\BthPS3PSM\Sideband.c
00001f93 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfpool.h
00001fda C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\dpfilter.h
00002028 C:\Program Files (x86)\Windows Kits\10\Include\wdf\kmdf\1.15\wdfsync.h
0000206f C:\Users\appveyor\projects\bthps3\BthPS3PSM\Queue.c
000020a3 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbioctl.h
000020f1 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usb200.h
0000213d C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbiodef.h
0000218b C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\bthdef.h
000021d7 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\bthsdpdef.h
00002226 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\filter.tmh
00002269 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Filter.c
0000229e C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\km\ntintsafe.h
000022e9 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Driver.c
0000231e minkernel\crts\crtw32\misc\amd64\guard_dispatch.asm
00002352 OneCore\Internal\MinWin\Priv_Sdk\Inc\ksamd64.inc
00002383 OneCore\Internal\MinWin\Priv_Sdk\Inc\kxamd64.inc
000023b4 onecore\external\sdk\inc\macamd64.inc
000023da onecore\external\sdk\inc\MinWin\heapapi.h
00002404 onecore\external\sdk\inc\MinCore\systemtopologyapi.h
00002439 onecore\external\sdk\inc\winsvc.h
0000245b onecore\external\shared\inc\pshpack4.h
00002482 onecore\external\sdk\inc\MinCore\processtopologyapi.h
000024b8 onecore\external\sdk\inc\MinWin\jobapi.h
000024e1 OneCore\Internal\MinWin\Priv_Sdk\Inc\guiddef.h
00002510 onecore\external\sdk\inc\MinCore\jobapi2.h
0000253b onecore\external\sdk\inc\MinWin\threadpoolapiset.h
0000256e onecore\external\sdk\inc\MinWin\securityappcontainer.h
000025a5 onecore\external\sdk\inc\mcx.h
000025c4 onecore\external\shared\inc\winerror.h
000025eb OneCore\Internal\MinWin\Priv_Sdk\Inc\winnls.h
00002619 onecore\external\sdk\inc\MinWin\realtimeapiset.h
0000264a onecore\external\sdk\inc\MinWin\datetimeapi.h
00002678 minkernel\crts\crtw32\h\string.h
00002699 onecore\external\sdk\inc\MinWin\fibersapi.h
000026c5 onecore\external\shared\inc\pshpack8.h
000026ec onecore\external\sdk\inc\MinWin\timezoneapi.h
0000271a onecore\external\sdk\inc\MinCore\consoleapi2.h
00002749 onecore\external\sdk\inc\MinWin\stringapiset.h
00002778 onecore\external\shared\inc\poppack.h
0000279e onecore\external\shared\inc\kernelspecs.h
000027c8 OneCore\Internal\MinWin\Priv_Sdk\Inc\basetsd.h
000027f7 onecore\external\sdk\inc\MinWin\debugapi.h
00002822 onecore\external\sdk\inc\MinWin\securitybaseapi.h
00002854 onecore\external\sdk\inc\MinWin\memoryapi.h
00002880 onecore\external\sdk\inc\MinWin\namedpipeapi.h
000028af onecore\external\shared\inc\ktmtypes.h
000028d6 onecore\external\sdk\inc\fileapifromapp.h
00002900 onecore\external\sdk\inc\MinWin\fileapi.h
0000292a minkernel\crts\crtw32\h\stdarg.h
0000294b onecore\external\shared\inc\windef.h
00002970 onecore\external\sdk\inc\MinWin\consoleapi.h
0000299d shared\inc\winapifamily.h
000029b7 shared\inc\winpackagefamily.h
000029d5 onecore\external\shared\inc\MinWin\minwindef.h
00002a04 onecore\external\shared\inc\pshpack1.h
00002a2b onecore\external\sdk\inc\MinWin\wow64apiset.h
00002a59 onecore\external\sdk\inc\MinWin\ioapiset.h
00002a84 onecore\internal\sdk\inc\warning.h
00002aa7 onecore\internal\sdk\inc\suppress_x.h
00002acd minkernel\crts\crtw32\h\castguard.h
00002af1 OneCore\Internal\minwin\inc\windowscore.h
00002b1b onecore\external\shared\inc\sdkddkver.h
00002b43 minkernel\crts\crtw32\h\crtdefs.h
00002b65 onecore\external\shared\inc\specstrings.h
00002b8f onecore\external\sdk\inc\MinWin\utilapiset.h
00002bbc onecore\external\shared\inc\sal.h
00002bde onecore\external\shared\inc\concurrencysal.h
00002c0b onecore\external\sdk\inc\MinWin\enclaveapi.h
00002c38 onecore\external\shared\inc\specstrings_strict.h
00002c69 onecore\external\sdk\inc\MinWin\verrsrc.h
00002c93 onecore\external\shared\inc\specstrings_undef.h
00002cc3 onecore\external\shared\inc\driverspecs.h
00002ced onecore\external\shared\inc\sdv_driverspecs.h
00002d1b minkernel\crts\crtw32\h\vadefs.h
00002d3c minkernel\crts\crtw32\h\cruntime.h
00002d5f minkernel\crts\crtw32\h\ctype.h
00002d7f onecore\external\sdk\inc\MinWin\winreg.h
00002da8 onecore\external\sdk\inc\MinWin\handleapi.h
00002dd4 onecore\external\sdk\inc\reason.h
00002df6 onecore\external\sdk\inc\MinWin\interlockedapi.h
00002e27 onecore\external\sdk\inc\MinCore\consoleapi3.h
00002e56 onecore\external\shared\inc\pshpack2.h
00002e7d onecore\external\sdk\inc\winbase.h
00002ea0 onecore\external\shared\inc\MinWin\apisetcconv.h
00002ed1 onecore\external\sdk\inc\MinWin\apiquery2.h
00002efd onecore\external\sdk\inc\MinWin\minwinbase.h
00002f2a onecore\external\sdk\inc\MinWin\libloaderapi.h
00002f59 onecore\external\sdk\inc\MinWin\processenv.h
00002f86 onecore\external\sdk\inc\MinCore\namespaceapi.h
00002fb6 onecore\external\shared\inc\MinWin\apiset.h
00002fe2 onecore\external\sdk\inc\wincon.h
00003004 onecore\external\sdk\inc\MinWin\errhandlingapi.h
00003035 onecore\external\sdk\inc\wincontypes.h
0000305c onecore\external\sdk\inc\MinWin\processthreadsapi.h
00003090 onecore\external\sdk\inc\MinWin\synchapi.h
000030bb onecore\external\sdk\inc\MinWin\threadpoollegacyapiset.h
000030f4 onecore\external\sdk\inc\MinWin\profileapi.h
00003121 onecore\external\sdk\inc\MinWin\sysinfoapi.h
0000314e minkernel\crts\crtw32\string\amd64\memcpy.asm
0000317c minkernel\crts\crtw32\misc\loadcfg.c
000031a1 minkernel\crts\crtw32\misc\amd64\guard_xfg_dispatch.asm
000031d9 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\devpkey.h
00003226 C:\Users\appveyor\projects\bthps3\BthPS3PSM\x64\Release\device.tmh
00003269 C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared\usbdi.h
000032b4 C:\Users\appveyor\projects\bthps3\BthPS3PSM\Device.c
000032e9 onecore\external\shared\inc\bugcodes.h
00003310 onecore\external\shared\inc\ntiologc.h
00003337 minkernel\wdmlib\wdmsec\Cm\CmRegUtil.h
0000335e minkernel\wdmlib\wdmsec\io\iosddl.c
00003382 onecore\external\ddk\inc\mce.h
000033a1 onecore\external\sdk\inc\crt\ctype.h
000033c6 onecore\external\sdk\inc\crt\wtime.inl
000033ed onecore\external\sdk\inc\regstr.h
0000340f onecore\external\shared\inc\devpropdef.h
00003438 onecore\external\shared\inc\MinWin\sddl.h
00003462 onecore\external\ddk\inc\wdmsec.h
00003484 onecore\external\shared\inc\evntprov.h
000034ab minkernel\wdmlib\wdmsec\inc\WlDef.h
000034cf minkernel\wdmlib\wdmsec\inc\WlMacro.h
000034f5 onecore\external\ifskit\inc\ntifs.h
00003519 onecore\external\ifskit\inc\ntddk.h
0000353d onecore\external\sdk\inc\crt\excpt.h
00003562 onecore\external\sdk\inc\crt\crtdefs.h
00003589 minkernel\wdmlib\wdmsec\Wl\wlprivate.h
000035b0 minkernel\wdmlib\wdmsec\Se\SeSddl.h
000035d4 onecore\external\sdk\inc\crt\vadefs.h
000035fa onecore\external\sdk\inc\crt\wchar.h
0000361f minkernel\wdmlib\wdmsec\Se\SeUtil.h
00003643 onecore\external\ddk\inc\ntnls.h
00003664 onecore\external\shared\inc\basetsd.h
0000368a minkernel\tools\gs_support\kmodefastfail\amd64\amdsecgs.asm
000036c6 OneCore\Private\MinWin\Priv_Sdk\Inc\gs\crt_amdsecgs.asm
000036fe onecore\external\shared\inc\ksamd64.inc
00003726 onecore\external\shared\inc\kxamd64.inc
0000374e onecore\external\shared\inc\dontuse.h
00003774 minkernel\wdmlib\wdmsec\Io\IoDevobj.h
0000379a onecore\external\sdk\inc\crt\swprintf.inl
000037c4 onecore\external\shared\inc\guiddef.h
000037ea minkernel\wdmlib\wdmsec\Pp\PpRegState.h
00003812 onecore\external\sdk\inc\crt\string.h
00003838 onecore\external\shared\inc\ntstatus.h
0000385f minkernel\crts\crtw32\h\errno.h
0000387f minkernel\crts\crtw32\misc\amd64\cpuinfo.c
000038aa minkernel\crts\crtw32\h\sect_attribs.h
000038d1 minkernel\crts\crtw32\h\crtdbg.h
000038f2 minkernel\crts\crtw32\h\limits.h
00003913 onecore\external\ddk\inc\wdf\kmdf\1.15\WdfWMI.h
00003943 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfroletypes.h
00003979 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfworkitem.h
000039ae onecore\external\ddk\inc\wdf\kmdf\1.15\wdfhwaccess.h
000039e3 onecore\internal\ddk\inc\wdf\kmdf\1.15\wdfcx.h
00003a12 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfio.h
00003a41 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfmemory.h
00003a74 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffileobject.h
00003aab onecore\external\ddk\inc\wdf\kmdf\1.15\wdfrequest.h
00003adf minkernel\wdf\framework\kmdf\src\dynamic\stub\inittypes.cpp
00003b1b onecore\external\ddk\inc\wdf\kmdf\1.15\wdfstatus.h
00003b4e onecore\external\ddk\inc\wdf\kmdf\1.15\wdfassert.h
00003b81 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcore.h
00003bb2 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfverifier.h
00003be7 onecore\external\ddk\inc\wdf\kmdf\1.15\wdffdo.h
00003c17 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdevice.h
00003c4a onecore\external\ddk\inc\wdf\kmdf\1.15\wdfbugcodes.h
00003c7f onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcollection.h
00003cb6 onecore\external\ddk\inc\wdf\kmdf\1.15\wdf.h
00003ce3 onecore\external\ddk\inc\wdf\kmdf\1.15\wdftimer.h
00003d15 onecore\external\ddk\inc\wdf\kmdf\1.15\wdftypes.h
00003d47 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfDmaEnabler.h
00003d7e onecore\external\ddk\inc\wdf\kmdf\1.15\wdfinterrupt.h
00003db4 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfpool.h
00003de5 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfobject.h
00003e18 onecore\external\ddk\inc\ntddk.h
00003e39 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfglobals.h
00003e6d onecore\external\ddk\inc\wdf\kmdf\1.15\wdfstring.h
00003ea0 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfresource.h
00003ed5 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfcontrol.h
00003f09 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfiotarget.h
00003f3e onecore\external\ddk\inc\wdf\kmdf\1.15\wdffuncenum.h
00003f73 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfregistry.h
00003fa8 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfDmaTransaction.h
00003fe3 onecore\external\ddk\inc\wdf\kmdf\1.15\WdfQueryInterface.h
0000401e onecore\external\ddk\inc\wdf\kmdf\1.15\wdfchildlist.h
00004054 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfsync.h
00004085 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfCommonBuffer.h
000040be onecore\external\shared\inc\initguid.h
000040e5 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfpdo.h
00004115 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfdpc.h
00004145 minkernel\crts\crtw32\misc\amd64\dispatchcfg.asm
00004176 minkernel\crts\crtw32\misc\guard_check.c
0000419f onecore\internal\sdk\inc\nxamd64.h
000041c2 onecore\internal\sdk\inc\ntldr.h
000041e3 onecore\internal\sdk\inc\ntexapi_x.h
00004208 OneCore\Internal\MinWin\Priv_Sdk\Inc\ntnls.h
00004235 onecore\internal\sdk\inc\ntconfig.h
00004259 onecore\external\shared\inc\pshpck16.h
00004280 onecore\internal\sdk\inc\nttpapi.h
000042a3 onecore\internal\sdk\inc\MinWin\ntdef_p.h
000042cd onecore\internal\sdk\inc\volatile_accessors.h
000042fb onecore\internal\sdk\inc\pebteb.h
0000431d onecore\internal\sdk\inc\MinWin\ntpnpapi.h
00004348 onecore\internal\sdk\inc\ntamd64.h
0000436b OneCore\Internal\MinWin\Priv_Sdk\Inc\cfg.h
00004396 minkernel\crts\crtw32\h\process.h
000043b8 onecore\internal\sdk\inc\ntobapi.h
000043db onecore\internal\sdk\inc\ntkeapi.h
000043fe onecore\internal\sdk\inc\ntobapi_x.h
00004423 OneCore\Internal\MinWin\Priv_Sdk\Inc\affinity.h
00004453 OneCore\Internal\MinWin\Priv_Sdk\Inc\nt.h
0000447d OneCore\Internal\MinWin\Priv_Sdk\Inc\mce.h
000044a8 onecore\internal\sdk\inc\MinWin\ntregapi.h
000044d3 onecore\internal\sdk\inc\ntregapi_x.h
000044f9 onecore\internal\sdk\inc\ntiolog.h
0000451c onecore\internal\sdk\inc\MinWin\umstls.h
00004545 onecore\internal\sdk\inc\nttmapi.h
00004568 onecore\internal\sdk\inc\ntseapi_x.h
0000458d onecore\internal\sdk\inc\ntelfapi.h
000045b1 onecore\internal\sdk\inc\ntwow64.h
000045d4 onecore\internal\sdk\inc\ntwow64_x.h
000045f9 onecore\internal\sdk\inc\ntlpcapi.h
0000461d onecore\internal\sdk\inc\MinWin\ntioapi.h
00004647 onecore\internal\sdk\inc\ntarm64.h
0000466a onecore\external\shared\inc\devioctl.h
00004691 onecore\internal\sdk\inc\ntarm64_x.h
000046b6 onecore\external\ddk\inc\ntpoapi.h
000046d9 minkernel\crts\crtw32\string\amd64\memset.asm
00004707 minkernel\tools\gs_support\kmodefastfail\gs_report.c
0000473c onecore\external\sdk\inc\crt\process.h
00004763 minkernel\tools\gs_support\kmodefastfail\gs_support.c
00004799 minkernel\wdf\framework\kmdf\src\dynamic\stub\stub.cpp
000047d0 sdk\inc\ntverp.h
000047e1 sdk\inc\ntverp.ver
000047f4 onecore\external\ddk\inc\wdf\kmdf\1.15\wdfminiport.h
00004829 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\stub.obj
00004885 minkernel\wdf\framework\kmdf\src\dynamic\stub\classbind.cpp
000048c1 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\stub\1.15\objfre\amd64\classbind.obj
