#pragma autorecover
#pragma classflags("forceupdate")
#pragma namespace("\\\\.\\root\\WMI")
//
// WPP Generated File
// PDB:  BthPS3.pdb
// PDB:  Last Updated :2025-04-28:18:52:26:152 (UTC) [Tracepdb]
//

//ModuleName = BthPS3BthPS3TraceGuid	 (Init called in Function DriverEntry)
[Dynamic,
 Description("BthPS3_BthPS3TraceGuid"),
 guid("{37dcd579-e844-4c80-9c8b-a10850b6fac6}"),
 locale("MS\\0x409")]
class BthPS3BthPS3TraceGuid : EventTrace
{
    [Description ("Enable Flags") : amended,
        ValueDescriptions{
             "MYDRIVER_ALL_INFO Flag",
             "TRACE_DRIVER Flag",
             "TRACE_DEVICE Flag",
             "TRACE_QUEUE Flag",
             "TRACE_BTH Flag",
             "TRACE_CONNECTION Flag",
             "TRACE_L2CAP Flag",
             "TRACE_BUSLOGIC Flag",
             "TRACE_PSM Flag",
             "TRACE_UTIL Flag",
             "TRACE_COMPAT Flag"},
        DefineValues{
             "MYDRIVER_ALL_INFO",
             "TRACE_DRIVER",
             "TRACE_DEVICE",
             "TRACE_QUEUE",
             "TRACE_BTH",
             "TRACE_CONNECTION",
             "TRACE_L2CAP",
             "TRACE_BUSLOGIC",
             "TRACE_PSM",
             "TRACE_UTIL",
             "TRACE_COMPAT"},
        Values{
             "MYDRIVER_ALL_INFO",
             "TRACE_DRIVER",
             "TRACE_DEVICE",
             "TRACE_QUEUE",
             "TRACE_BTH",
             "TRACE_CONNECTION",
             "TRACE_L2CAP",
             "TRACE_BUSLOGIC",
             "TRACE_PSM",
             "TRACE_UTIL",
             "TRACE_COMPAT"},
        ValueMap{
             "0x00000001",
             "0x00000002",
             "0x00000004",
             "0x00000008",
             "0x00000010",
             "0x00000020",
             "0x00000040",
             "0x00000080",
             "0x00000100",
             "0x00000200",
             "0x00000400"}: amended
    ]
    uint32 Flags;
    [Description ("Levels") : amended,
        ValueDescriptions{
            "Abnormal exit or termination",
            "Severe errors that need logging",
            "Warnings such as allocation failure",
            "Includes non-error cases",
            "Detailed traces from intermediate steps" } : amended,
         DefineValues{
            "TRACE_LEVEL_FATAL",
            "TRACE_LEVEL_ERROR",
            "TRACE_LEVEL_WARNING"
            "TRACE_LEVEL_INFORMATION",
            "TRACE_LEVEL_VERBOSE" },
        Values{
            "Fatal",
            "Error",
            "Warning",
            "Information",
            "Verbose" },
        ValueMap{
            "0x1",
            "0x2",
            "0x3",
            "0x4",
            "0x5" },
        ValueType("index")
    ]
    uint32 Level;
};
